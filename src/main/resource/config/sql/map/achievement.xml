<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="achievement">
	 

	
	<statement id="queryEmployeeAndDept" parameterClass="map" resultClass="java.util.HashMap">
	<!-- 2012/01/16 Yang Yun 目标业绩中新增待补和合计字段
		 2012/02/16 Yang Yun 业绩录入是现实当年离职人员
	<![CDATA[	
		  SELECT T.ID ,T.NAME , T.JOB, T1.ID DEPT_ID , T2.DECP_ID ,T2.DECP_NAME_CN ,
		  DAY(GETDATE()) DAYFLAGE,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=1 and TAA.STATUS=0  ) MON1 ,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=2 and TAA.STATUS=0  ) MON2,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=3 and TAA.STATUS=0  ) MON3,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=4 and TAA.STATUS=0  ) MON4,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=5 and TAA.STATUS=0  ) MON5,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=6 and TAA.STATUS=0  ) MON6,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=7 and TAA.STATUS=0  ) MON7,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=8 and TAA.STATUS=0  ) MON8,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=9 and TAA.STATUS=0  ) MON9,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=10 and TAA.STATUS=0  ) MON10,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=11 and TAA.STATUS=0  ) MON11,
(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))  AND  TAA.EMPL_MONTH=12 and TAA.STATUS=0  ) MON12
			FROM	T_DEPT_DEPARTMENT T1
				LEFT JOIN T_USER_USER T    ON  T.DEPT_ID = T1.ID AND T.STATUS = 0
				LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID = T1.DECP_ID AND T2.STATUS = 0
			WHERE (T.JOB = '1' OR T.JOB = #job_type# ) AND T1.STATUS = 0
			]]> -->
			
			<!-- <isEqual prepend="and" property="p_usernode" compareValue="1">
				<![CDATA[	
				(t.id = #s_employeeId# or t.upper_user = #s_employeeId#)
				]]>
			</isEqual>
			]]>
			2012/01/11 Yang Yun 增加区域筛选功能.Start
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = t.id)
				]]>
			</isEqual>
			2012/01/11 Yang Yun 增加区域筛选功能.End
			<![CDATA[	
				 ORDER BY T2.DECP_NAME_CN
	]]> -->
	
	select t.ID, t.NAME,t.JOB, t.DEPT_ID, t.DECP_ID, t.DECP_NAME_CN, t.DAYFLAGE, 
	isnull(t.MON1,0) as MON1, 
	isnull(t.MON2,0) as MON2,
	isnull(t.MON3,0) as MON3,
	isnull(t.MON4,0) as MON4,
	isnull(t.MON5,0) as MON5,
	isnull(t.MON6,0) as MON6,
	isnull(t.MON7,0) as MON7,
	isnull(t.MON8,0) as MON8,
	isnull(t.MON9,0) as MON9,
	isnull(t.MON10,0) as MON10,
	isnull(t.MON11,0) as MON11,
	isnull(t.MON12,0) as MON12
	from 
	
	(SELECT convert(varchar,T.ID) as ID ,
		t.NAME , T.JOB, T1.ID DEPT_ID , T2.DECP_ID ,T2.DECP_NAME_CN ,
			  DAY(GETDATE()) DAYFLAGE,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=1 and TAA.STATUS=0  )),0) MON1 ,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=2 and TAA.STATUS=0  )),0) MON2,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=3 and TAA.STATUS=0  )),0) MON3,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=4 and TAA.STATUS=0  )),0) MON4,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=5 and TAA.STATUS=0  )),0) MON5,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=6 and TAA.STATUS=0  )),0) MON6,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=7 and TAA.STATUS=0  )),0) MON7,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=8 and TAA.STATUS=0  )),0) MON8,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=9 and TAA.STATUS=0  )),0) MON9,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=10 and TAA.STATUS=0  )),0) MON10,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=11 and TAA.STATUS=0  )),0) MON11,
	isnull(convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=12 and TAA.STATUS=0  )),0) MON12
		
		, T2.[ORDER]	
		FROM	T_DEPT_DEPARTMENT T1
					LEFT JOIN T_USER_USER T    ON  T.DEPT_ID = T1.ID
					LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID = T1.DECP_ID AND T2.STATUS = 0
				WHERE (T.JOB = '1' OR T.JOB = #job_type# ) AND T1.STATUS = 0
				and (T.STATUS = 0 or (T.STATUS != 0 and year(T.MODIFY_DATE) = <isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">CONVERT(int,#YEAR#)</isNotEmpty>))
				
				<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
				<isEqual prepend="and" property="p_usernode" compareValue="2">
					<![CDATA[
				      exists(select id from T_USER_USER2COMPANY c where
				        c.user_id = #s_employeeId# and c.dept_id = T1.ID)
				    ]]>
				</isEqual>
				<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
				and T2.DECP_NAME_CN is not null
				
	union
	select ('count_' + convert(varchar,t.DECP_ID) ), '*SUM_ALL', max(t.job), max(t.DEPT_ID), t.DECP_ID, max(t.DECP_NAME_CN), max(t.DAYFLAGE),
	sum(t.mon1),sum(t.mon2),sum(t.mon3),sum(t.mon4),sum(t.mon5),sum(t.mon6),sum(t.mon7),sum(t.mon8),sum(t.mon9),
	sum(t.mon10),sum(t.mon11),sum(t.mon12), max(t.[ORDER])
	from (
	SELECT T.ID ,
	t.NAME , T.JOB, T1.ID DEPT_ID , T2.DECP_ID ,T2.DECP_NAME_CN ,
			  DAY(GETDATE()) DAYFLAGE,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=1 and TAA.STATUS=0  )) MON1 ,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=2 and TAA.STATUS=0  )) MON2,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=3 and TAA.STATUS=0  )) MON3,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=4 and TAA.STATUS=0  )) MON4,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=5 and TAA.STATUS=0  )) MON5,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=6 and TAA.STATUS=0  )) MON6,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=7 and TAA.STATUS=0  )) MON7,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=8 and TAA.STATUS=0  )) MON8,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=9 and TAA.STATUS=0  )) MON9,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=10 and TAA.STATUS=0  )) MON10,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=11 and TAA.STATUS=0  )) MON11,
	convert(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=CONVERT(VARCHAR,<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)  AND  TAA.EMPL_MONTH=12 and TAA.STATUS=0  )) MON12
				, T2.[ORDER]
				FROM	T_DEPT_DEPARTMENT T1
					LEFT JOIN T_USER_USER T    ON  T.DEPT_ID = T1.ID
					LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID = T1.DECP_ID AND T2.STATUS = 0
				WHERE (T.JOB = '1' OR T.JOB = #job_type# ) AND T1.STATUS = 0
				and (T.STATUS = 0 or (T.STATUS != 0 and year(T.MODIFY_DATE) = <isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">CONVERT(int,#YEAR#)</isNotEmpty>))
				
				<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
				<isEqual prepend="and" property="p_usernode" compareValue="2">
					<![CDATA[
				      exists(select id from T_USER_USER2COMPANY c where
				        c.user_id = #s_employeeId# and c.dept_id = T1.ID)
			        ]]>
				</isEqual>
				<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
				<![CDATA[	
				and T2.DECP_NAME_CN is not null
	) t
	group by t.DECP_ID
	) t
	ORDER BY [ORDER], NAME desc
	]]>
	</statement>
	
	
	<statement id="queryEmployeeAndDept_count" parameterClass="map" resultClass="java.util.HashMap">
  
	  	  SELECT    T2.DECP_NAME_CN ,COUNT(T2.DECP_NAME_CN) DEPT_COUNT 
	    FROM T_DEPT_DEPARTMENT T1
	       LEFT JOIN T_USER_USER T    ON  T.DEPT_ID = T1.ID
	       LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID = T1.DECP_ID AND T2.STATUS = 0
	       WHERE (T.JOB = '1' OR T.JOB =  #job_type#) AND T1.STATUS = 0
	       and (T.STATUS = 0 or (T.STATUS != 0 and year(T.MODIFY_DATE) = <isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">CONVERT(int,#YEAR#)</isNotEmpty>))
	       <isEqual prepend="and" property="p_usernode" compareValue="1">
				<![CDATA[	
				(t.id = #s_employeeId# or t.upper_user = #s_employeeId#)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = t.id)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
	       GROUP BY T2.DECP_NAME_CN
	       ORDER BY T2.DECP_NAME_CN
	</statement>
	
	
	<statement id="queryEmployeeAndDeptNew_count" parameterClass="map" resultClass="java.util.HashMap">
	       <![CDATA[
	        SELECT   T.DECP_ID
		        	,T.DECP_NAME_CN 
		        	,COUNT(T.ID) DEPT_COUNT 
		        	,(SELECT SUM(CONVERT(FLOAT,TTUA.EMPL_ACHIEVEMENT)) EMPL_ACHIEVEMENT
						FROM
							T_USER_ACHIEVEMENT TTUA
						WHERE
							TTUA.STATUS = 0
							AND TTUA.DECP_ID = T.DECP_ID 
							AND ((TTUA.EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND TTUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
							AND TTUA.CREATE_TIME = (
									SELECT MAX(CREATE_TIME) CREATE_TIME
									FROM T_USER_ACHIEVEMENT 
									WHERE STATUS = 0
										AND EMPL_ID = TTUA.EMPL_ID
										AND ((EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
									GROUP BY EMPL_ID
								)
						GROUP BY TTUA.DECP_ID
						) EMPL_ACHIEVEMENT
	    FROM (
	    select  
CONVERT(FLOAT,TUA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,
TUA.DECP_ID,
TUA.EMPL_ID,
T9.RECT_ID, 
T5.ID,
CASE WHEN T9.RECT_ID IS NOT NULL THEN convert(varchar, t7.START_DATE ,23) ELSE  convert(varchar, t10.START_DATE ,23) END START_DATE , 
t7.HEAD_HIRE , 
T9.CLERK_ID,
T9.SENSOR_ID ,
T9.CUST_TYPE,
T9.AREA_ID,
T4.NAME AREA,
T9.RECT_TYPE,
T5.NAME CLERK_NAME,
T6.NAME SENSOR_NAME,
convert(varchar,T9.LESSOR_TIME ,23) LESSOR_TIME, 
CASE WHEN T9.RECT_ID IS NOT NULL THEN T9.CUST_NAME  ELSE TCC.CUST_NAME END CUST_NAME, 
T9.PRCD_ID ,
CASE WHEN TRCD.BRAND IS NOT NULL THEN TRCD.BRAND ELSE T14.THING_KIND END BRAND,
TRCD.THING_NAME,
T2.DECP_NAME_CN,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_PERIOD ELSE T10.LEASE_TERM END LEASE_PERIOD,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_PRICE ELSE t10.PLEDGE_PRICE END PLEDGE_PRICE,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_TOPRIC ELSE t10.LEASE_TOPRIC END LEASE_TOPRIC,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_AVE_PRICE ELSE t10.PLEDGE_AVE_PRICE END PLEDGE_AVE_PRICE, 
T9.PAY_MONEY,
T9.PAY_DATE ,
T9.PAY_DATE MODIFY_DATE,
t10.sponsor,
t12.CUSTOMER_COME CUSTOMER_COME,
t11.contract_type CONTRACT_TYPE,
2 REASON
from T_USER_ACHIEVEMENT TUA
left join T_USER_USER T5 ON T5.ID = TUA.EMPL_ID and T5.STATUS=0
left join 
		(SELECT T1.SENSOR_ID
				,T2.RECT_ID
				,T1.AREA_ID
				,T1.ID
				,T1.CUST_ID
				,T3.PAY_MONEY
				,T2.LESSOR_TIME
				,T2.CLERK_ID
				,T2.CUST_TYPE
				,T2.RECT_TYPE
				,T2.CUST_NAME
				,T2.PRCD_ID
				,T2.STATUS
				,T3.PAY_DATE
				,T1.CUSTOMER_COME
				,T1.contract_type
		 FROM T_PRJT_CREDIT T1
			LEFT JOIN  T_RENT_CONTRACT T2 ON  T2.PRCD_ID = T1.ID and T2.STATUS=0
			left join (select SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,MAX(PAY_DATE) PAY_DATE 
						from T_SUPL_PLAYDETIL 
						where BACKSTATE='0' and STATE='3' and STATUS=0
							AND (CONVERT(VARCHAR(10),PAY_DATE,23) >= CONVERT(VARCHAR(7),DATEADD(MONTH,-1,#start_date#),23) + '-26')
							AND (CONVERT(VARCHAR(10),PAY_DATE,23) <= CONVERT(VARCHAR(7),#start_date#,23) + '-25')
						group by CREDIT_ID
				) T3 on T1.ID =T3.CREDIT_ID
			WHERE  T3.PAY_MONEY > 0
		) T9 ON T9.SENSOR_ID = T5.ID
LEFT JOIN  (
		select MAX(TRCD.THING_NAME)THING_NAME,MAX(TRCD.BRAND)BRAND,TRCD.RECT_ID,TRCD.STATUS  from 
		  T_RENT_CONTRACTDETAIL TRCD where TRCD.STATUS=0
		  group by trcd.rect_id,TRCD.STATUS) TRCD
		   ON      t9.RECT_ID=  TRCD.RECT_ID  and (TRCD.STATUS=0 or TRCD.STATUS is null)
LEFT JOIN   T_AREA T4 ON  T9.AREA_ID = T4.ID
LEFT JOIN T_USER_USER T6 ON T9.SENSOR_ID = T6.ID and (T6.JOB = '1' or T6.JOB =#job_type#)
LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID  = TUA.DECP_ID and (T2.STATUS=0 or T2.STATUS is null)
left join T_RENT_CONTRACTSCHEMA t7 on T9.RECT_ID=t7.RECT_ID
left join T_PRJT_CREDITSCHEME t10 on t10.CREDIT_ID=T9.ID
left join (select FLAG contract_type,CODE from T_DATA_DICTIONARY where TYPE=#cust_type#) t11 on t11.CODE=t9.contract_type
left join (select FLAG CUSTOMER_COME,CODE from T_DATA_DICTIONARY where TYPE=#cust_state#) t12 on t12.CODE=t9.CUSTOMER_COME
LEFT JOIN T_LOG_ACTIVITIESLOG T13 ON T13.CREDIT_ID = T9.ID AND T13.STATUS = 0
LEFT JOIN t_cust_customer TCC ON TCC.CUST_ID = t9.CUST_ID AND TCC.STATUS = 0
LEFT JOIN t_prjt_creditequipment T14 ON T14.CREDIT_ID = t9.ID AND T14.EQMT_STATUS = 0
WHERE	((TUA.EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND TUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
		and TUA.STATUS=0  and T5.STATUS=0
		AND TUA.CREATE_TIME = (
			SELECT MAX(CREATE_TIME) CREATE_TIME
			FROM T_USER_ACHIEVEMENT 
			WHERE STATUS = 0
				AND EMPL_ID = TUA.EMPL_ID
				AND ((EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
			GROUP BY EMPL_ID
		)
		AND T9.RECT_ID IS NOT NULL
		group by  T9.RECT_ID,  T9.LESSOR_TIME , t7.LEASE_PERIOD ,  t7.HEAD_HIRE , t7.START_DATE,
		t7.RECT_ID ,TUA.EMPL_ID,
		T9.CLERK_ID, T9.SENSOR_ID , T9.CUST_TYPE, T9.AREA_ID,T4.NAME,
		 T9.RECT_TYPE, T5.NAME,T6.NAME,
		 T9.LESSOR_TIME, T9.CUST_NAME, T9.PRCD_ID , TRCD.BRAND,TRCD.THING_NAME,t7.LEASE_PERIOD,t7.PLEDGE_PRICE,t7.LEASE_TOPRIC,t7.PLEDGE_AVE_PRICE,
		TUA.EMPL_ACHIEVEMENT , TUA.DECP_ID  ,T2.DECP_NAME_CN,T9.STATUS, TRCD.STATUS,T2.STATUS,T9.PAY_MONEY,T9.PAY_DATE,t10.sponsor,t12.CUSTOMER_COME,t11.contract_type,
		TCC.CUST_NAME,T5.ID,T14.THING_KIND,t10.START_DATE,t10.LEASE_TERM,t10.PLEDGE_PRICE,t10.LEASE_TOPRIC,t10.PLEDGE_AVE_PRICE
		
		
		union
			select  
CONVERT(FLOAT,TUA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,
TUA.DECP_ID,
TUA.EMPL_ID,
T9.RECT_ID, 
T5.ID,
CASE WHEN T9.RECT_ID IS NOT NULL THEN convert(varchar, t7.START_DATE ,23) ELSE  convert(varchar, t10.START_DATE ,23) END START_DATE , 
t7.HEAD_HIRE , 
T9.CLERK_ID,
T9.SENSOR_ID ,
T9.CUST_TYPE,
T9.AREA_ID,
T4.NAME AREA,
T9.RECT_TYPE,
T5.NAME CLERK_NAME,
T6.NAME SENSOR_NAME,
convert(varchar,T9.LESSOR_TIME ,23) LESSOR_TIME, 
CASE WHEN T9.RECT_ID IS NOT NULL THEN T9.CUST_NAME  ELSE TCC.CUST_NAME END CUST_NAME, 
T9.PRCD_ID ,
CASE WHEN TRCD.BRAND IS NOT NULL THEN TRCD.BRAND ELSE T14.THING_KIND END BRAND,
TRCD.THING_NAME,
T2.DECP_NAME_CN,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_PERIOD ELSE T10.LEASE_TERM END LEASE_PERIOD,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_PRICE ELSE t10.PLEDGE_PRICE END PLEDGE_PRICE,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_TOPRIC ELSE t10.LEASE_TOPRIC END LEASE_TOPRIC,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_AVE_PRICE ELSE t10.PLEDGE_AVE_PRICE END PLEDGE_AVE_PRICE, 
T9.PAY_MONEY,
T9.PAY_DATE ,
T9.PAY_DATE MODIFY_DATE,
t10.sponsor,
t12.CUSTOMER_COME CUSTOMER_COME,
t11.contract_type CONTRACT_TYPE,
2 REASON
from T_USER_ACHIEVEMENT TUA
left join T_USER_USER T5 ON T5.ID = TUA.EMPL_ID and T5.STATUS=0
left join 
		(SELECT T1.SENSOR_ID
				,T2.RECT_ID
				,T1.AREA_ID
				,T1.ID
				,T1.CUST_ID
				,T3.PAY_MONEY
				,T2.LESSOR_TIME
				,T2.CLERK_ID
				,T2.CUST_TYPE
				,T2.RECT_TYPE
				,T2.CUST_NAME
				,T2.PRCD_ID
				,T2.STATUS
				,T3.PAY_DATE
				,T1.CUSTOMER_COME
				,T1.contract_type
		 FROM T_PRJT_CREDIT T1
			LEFT JOIN  T_RENT_CONTRACT T2 ON  T2.PRCD_ID = T1.ID and T2.STATUS=0
			left join (	select SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,MAX(PAY_DATE) PAY_DATE 
						from T_SUPL_PLAYDETIL 
						where BACKSTATE='0' and STATE='3' and STATUS=0
						group by CREDIT_ID
				) T3 on T1.ID =T3.CREDIT_ID
			WHERE  T2.RECT_STATUS = 1 AND ( T3.PAY_MONEY IS NULL OR T3.PAY_MONEY = 0)  
		) T9 ON T9.SENSOR_ID = T5.ID
LEFT JOIN  (
		select MAX(TRCD.THING_NAME)THING_NAME,MAX(TRCD.BRAND)BRAND,TRCD.RECT_ID,TRCD.STATUS  from 
		  T_RENT_CONTRACTDETAIL TRCD where TRCD.STATUS=0
		  group by trcd.rect_id,TRCD.STATUS) TRCD
		   ON      t9.RECT_ID=  TRCD.RECT_ID  and (TRCD.STATUS=0 or TRCD.STATUS is null)
LEFT JOIN   T_AREA T4 ON  T9.AREA_ID = T4.ID
LEFT JOIN T_USER_USER T6 ON T9.SENSOR_ID = T6.ID and (T6.JOB = '1' or T6.JOB =#job_type#)
LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID  = TUA.DECP_ID and (T2.STATUS=0 or T2.STATUS is null)
left join T_RENT_CONTRACTSCHEMA t7 on T9.RECT_ID=t7.RECT_ID
left join T_PRJT_CREDITSCHEME t10 on t10.CREDIT_ID=T9.ID
left join (select FLAG contract_type,CODE from T_DATA_DICTIONARY where TYPE=#cust_type#) t11 on t11.CODE=t9.contract_type
left join (select FLAG CUSTOMER_COME,CODE from T_DATA_DICTIONARY where TYPE=#cust_state#) t12 on t12.CODE=t9.CUSTOMER_COME
LEFT JOIN T_LOG_ACTIVITIESLOG T13 ON T13.CREDIT_ID = T9.ID AND T13.STATUS = 0
LEFT JOIN t_cust_customer TCC ON TCC.CUST_ID = t9.CUST_ID AND TCC.STATUS = 0
LEFT JOIN t_prjt_creditequipment T14 ON T14.CREDIT_ID = t9.ID AND T14.EQMT_STATUS = 0
WHERE	((TUA.EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND TUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
		and TUA.STATUS=0  and T5.STATUS=0
		AND TUA.CREATE_TIME = (
			SELECT MAX(CREATE_TIME) CREATE_TIME
			FROM T_USER_ACHIEVEMENT 
			WHERE STATUS = 0
				AND EMPL_ID = TUA.EMPL_ID
				AND ((EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
			GROUP BY EMPL_ID
		)
		
		group by  T9.RECT_ID,  T9.LESSOR_TIME , t7.LEASE_PERIOD ,  t7.HEAD_HIRE , t7.START_DATE,
		t7.RECT_ID ,TUA.EMPL_ID,
		T9.CLERK_ID, T9.SENSOR_ID , T9.CUST_TYPE, T9.AREA_ID,T4.NAME,
		 T9.RECT_TYPE, T5.NAME,T6.NAME,
		 T9.LESSOR_TIME, T9.CUST_NAME, T9.PRCD_ID , TRCD.BRAND,TRCD.THING_NAME,t7.LEASE_PERIOD,t7.PLEDGE_PRICE,t7.LEASE_TOPRIC,t7.PLEDGE_AVE_PRICE,
		TUA.EMPL_ACHIEVEMENT , TUA.DECP_ID  ,T2.DECP_NAME_CN,T9.STATUS, TRCD.STATUS,T2.STATUS,T9.PAY_MONEY,T9.PAY_DATE,t10.sponsor,t12.CUSTOMER_COME,t11.contract_type,
		TCC.CUST_NAME,T5.ID,T14.THING_KIND,t10.START_DATE,t10.LEASE_TERM,t10.PLEDGE_PRICE,t10.LEASE_TOPRIC,t10.PLEDGE_AVE_PRICE
		
		
	
		union
		
			select  
CONVERT(FLOAT,TUA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,
TUA.DECP_ID,
TUA.EMPL_ID,
TRCT.RECT_ID, 
T5.ID,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN convert(varchar, t7.START_DATE ,23) ELSE  convert(varchar, t10.START_DATE ,23) END START_DATE , 
t7.HEAD_HIRE , 
TRCT.CLERK_ID,
TRCT.SENSOR_ID ,
TRCT.CUST_TYPE,
TRCT.AREA_ID,
T4.NAME AREA,
TRCT.RECT_TYPE,
T5.NAME CLERK_NAME,
T6.NAME SENSOR_NAME,
convert(varchar,TRCT.LESSOR_TIME ,23) LESSOR_TIME, 
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN TRCT.CUST_NAME  ELSE TCC.CUST_NAME END CUST_NAME, 
TRCT.PRCD_ID ,
CASE WHEN TRCD.BRAND IS NOT NULL THEN TRCD.BRAND ELSE T14.THING_KIND END BRAND,
TRCD.THING_NAME,
T2.DECP_NAME_CN,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.LEASE_PERIOD ELSE T10.LEASE_TERM END LEASE_PERIOD,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.PLEDGE_PRICE ELSE t10.PLEDGE_PRICE END PLEDGE_PRICE,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.LEASE_TOPRIC ELSE t10.LEASE_TOPRIC END LEASE_TOPRIC,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.PLEDGE_AVE_PRICE ELSE t10.PLEDGE_AVE_PRICE END PLEDGE_AVE_PRICE, 
t8.PAY_MONEY,
t8.PAY_DATE ,
t8.PAY_DATE MODIFY_DATE,
t10.sponsor,
t12.CUSTOMER_COME CUSTOMER_COME,
t11.contract_type CONTRACT_TYPE,
3 REASON
from T_USER_ACHIEVEMENT TUA
left join T_USER_USER T5 ON T5.ID = TUA.EMPL_ID and T5.STATUS=0
left join T_PRJT_CREDIT t9 on t9.SENSOR_ID=T5.ID 
LEFT JOIN  T_RENT_CONTRACT TRCT ON  TRCT.PRCD_ID = T9.ID and TRCT.STATUS=0
left join (select SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,min(PAY_DATE) PAY_DATE 
			from T_SUPL_PLAYDETIL 
			where BACKSTATE='0' and STATE='3' and STATUS=0
			group by CREDIT_ID
	) t8 on T9.ID =t8.CREDIT_ID 
LEFT JOIN  (
		select MAX(TRCD.THING_NAME)THING_NAME,MAX(TRCD.BRAND)BRAND,TRCD.RECT_ID,TRCD.STATUS  from 
		  T_RENT_CONTRACTDETAIL TRCD where TRCD.STATUS=0
		  group by trcd.rect_id,TRCD.STATUS) TRCD
		   ON      TRCT.RECT_ID=  TRCD.RECT_ID  and (TRCD.STATUS=0 or TRCD.STATUS is null)
LEFT JOIN   T_AREA T4 ON  TRCT.AREA_ID = T4.ID
LEFT JOIN T_USER_USER T6 ON TRCT.SENSOR_ID = T6.ID and (T6.JOB = '1' or T6.JOB =#job_type#)
LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID  = TUA.DECP_ID and (T2.STATUS=0 or T2.STATUS is null)
left join T_RENT_CONTRACTSCHEMA t7 on TRCT.RECT_ID=t7.RECT_ID
left join T_PRJT_CREDITSCHEME t10 on t10.CREDIT_ID=t9.ID
left join (select FLAG contract_type,CODE from T_DATA_DICTIONARY where TYPE=#cust_type#) t11 on t11.CODE=t9.contract_type
left join (select FLAG CUSTOMER_COME,CODE from T_DATA_DICTIONARY where TYPE=#cust_state#) t12 on t12.CODE=t9.CUSTOMER_COME
LEFT JOIN T_LOG_ACTIVITIESLOG T13 ON T13.CREDIT_ID = T9.ID AND T13.STATUS = 0
LEFT JOIN t_cust_customer TCC ON TCC.CUST_ID = t9.CUST_ID AND TCC.STATUS = 0
LEFT JOIN t_prjt_creditequipment T14 ON T14.CREDIT_ID = t9.ID AND T14.EQMT_STATUS = 0
WHERE	((TUA.EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND TUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
		AND
		(CONVERT(VARCHAR(10),T13.MODIFY_HAB_DATE,23) >= CONVERT(VARCHAR(7),DATEADD(MONTH,-1,#start_date#),23) + '-26')
		AND 
		(CONVERT(VARCHAR(10),T13.MODIFY_HAB_DATE,23) <= CONVERT(VARCHAR(7),#start_date#,23) + '-25')
		AND T13.CONTRACT_HAB = 1
		and TUA.STATUS=0  and T5.STATUS=0
		AND TUA.CREATE_TIME = (
			SELECT MAX(CREATE_TIME) CREATE_TIME
			FROM T_USER_ACHIEVEMENT 
			WHERE STATUS = 0
				AND EMPL_ID = TUA.EMPL_ID
				AND ((EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
			GROUP BY EMPL_ID
		)
		group by  TRCT.RECT_ID,  TRCT.LESSOR_TIME , t7.LEASE_PERIOD ,  t7.HEAD_HIRE , t7.START_DATE,
		t7.RECT_ID ,TUA.EMPL_ID,
		TRCT.CLERK_ID, TRCT.SENSOR_ID , TRCT.CUST_TYPE, TRCT.AREA_ID,T4.NAME,
		 TRCT.RECT_TYPE, T5.NAME,T6.NAME,
		 TRCT.LESSOR_TIME, TRCT.CUST_NAME, TRCT.PRCD_ID , TRCD.BRAND,TRCD.THING_NAME,t7.LEASE_PERIOD,t7.PLEDGE_PRICE,t7.LEASE_TOPRIC,t7.PLEDGE_AVE_PRICE,
		TUA.EMPL_ACHIEVEMENT , TUA.DECP_ID  ,T2.DECP_NAME_CN,TRCT.STATUS, TRCD.STATUS,T2.STATUS,t8.PAY_MONEY,t8.PAY_DATE,t10.sponsor,t12.CUSTOMER_COME,t11.contract_type,
		TCC.CUST_NAME,T5.ID,T14.THING_KIND,t10.START_DATE,t10.LEASE_TERM,t10.PLEDGE_PRICE,t10.LEASE_TOPRIC,t10.PLEDGE_AVE_PRICE
) T
		GROUP BY T.DECP_NAME_CN,T.DECP_ID
	       ORDER BY T.DECP_ID
	       ]]>
	</statement>
	
	
	<statement id="queryEmployeeAndEmpl_count" parameterClass="map" resultClass="java.util.HashMap">
  
	  	   <!--    SELECT   T2.DECP_ID, T.ID,COUNT(T.ID) Empl_COUNT ,t4.EMPL_ACHIEVEMENT
	    FROM T_DEPT_DEPARTMENT T1
	       LEFT JOIN T_USER_USER T    ON  T.DEPT_ID = T1.ID 
	       LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID = T1.DECP_ID
	       left join T_RENT_CONTRACT t3 on t3.CLERK_ID=T.ID
	       left join T_RENT_COLLECTIONPLAN TRCP on t3.RECT_ID=TRCP.RECT_ID
	       left join (select sum( CONVERT(MONEY,EMPL_ACHIEVEMENT)) EMPL_ACHIEVEMENT,EMPL_ID,STATUS from T_USER_ACHIEVEMENT where STATUS=0 group by EMPL_ID,STATUS) t4 on t4.EMPL_ID=T.ID
	       WHERE (T.JOB = '1' or T.JOB = #job_type#) and
	       ((TRCP.RECP_ID>0 and TRCP.STATUS=0 and  (MONTH(TRCP.START_DATE) =MONTH(GETDATE())) and (YEAR(TRCP.START_DATE) =YEAR(GETDATE())))  
		  or TRCP.RECP_ID is null or (TRCP.RECP_ID>0 and TRCP.STATUS=-2))
	       GROUP BY T.ID,T2.DECP_ID,t4.EMPL_ACHIEVEMENT
	       ORDER BY T2.DECP_ID,T.ID
	        
	        
	            select T2.DECP_ID,t.ID,COUNT(T.ID) Empl_COUNT,t4.EMPL_ACHIEVEMENT,t.NAME from T_DEPT_DEPARTMENT T1
	       LEFT JOIN T_USER_USER T    ON  T.DEPT_ID = T1.ID and t.STATUS=0
	        LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID = T1.DECP_ID and T2.STATUS=0
	        left join T_RENT_CONTRACT t3 on t3.SENSOR_ID=t.ID and t3.STATUS=0 and MONTH(t3.CREATE_TIME) =MONTH(GETDATE()) and YEAR(t3.CREATE_TIME) =YEAR(GETDATE())
	         left join (select sum( CONVERT(MONEY,EMPL_ACHIEVEMENT)) EMPL_ACHIEVEMENT,EMPL_ID,STATUS from T_USER_ACHIEVEMENT where STATUS=0 and EMPL_MONTH=MONTH(GETDATE()) and EMPL_YEAR=YEAR(GETDATE()) group by EMPL_ID,STATUS) t4 on t4.EMPL_ID=T.ID
	       where (T.JOB = '1' or T.JOB = #job_type#) and T1.STATUS=0 
	       GROUP BY T.ID,T2.DECP_ID,t4.EMPL_ACHIEVEMENT,t.NAME
	       ORDER BY T2.DECP_ID,T.ID
	       -->
	       <![CDATA[
	       select T.DECP_ID,t.ID,COUNT(T.ID) Empl_COUNT,t.CLERK_NAME NAME
	    FROM (
	   	 			select  
TUA.EMPL_ACHIEVEMENT ,
TUA.DECP_ID,
TUA.EMPL_ID,
T9.RECT_ID, 
T5.ID,
CASE WHEN T9.RECT_ID IS NOT NULL THEN convert(varchar, t7.START_DATE ,23) ELSE  convert(varchar, t10.START_DATE ,23) END START_DATE , 
t7.HEAD_HIRE , 
T9.CLERK_ID,
T9.SENSOR_ID ,
T9.CUST_TYPE,
T9.AREA_ID,
T4.NAME AREA,
T9.RECT_TYPE,
T5.NAME CLERK_NAME,
T6.NAME SENSOR_NAME,
convert(varchar,T9.LESSOR_TIME ,23) LESSOR_TIME, 
CASE WHEN T9.RECT_ID IS NOT NULL THEN T9.CUST_NAME  ELSE TCC.CUST_NAME END CUST_NAME, 
T9.PRCD_ID ,
CASE WHEN TRCD.BRAND IS NOT NULL THEN TRCD.BRAND ELSE T14.THING_KIND END BRAND,
TRCD.THING_NAME,
T2.DECP_NAME_CN,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_PERIOD ELSE T10.LEASE_TERM END LEASE_PERIOD,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_PRICE ELSE t10.PLEDGE_PRICE END PLEDGE_PRICE,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_TOPRIC ELSE t10.LEASE_TOPRIC END LEASE_TOPRIC,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_AVE_PRICE ELSE t10.PLEDGE_AVE_PRICE END PLEDGE_AVE_PRICE, 
T9.PAY_MONEY,
T9.PAY_DATE ,
T9.PAY_DATE MODIFY_DATE,
t10.sponsor,
t12.CUSTOMER_COME CUSTOMER_COME,
t11.contract_type CONTRACT_TYPE,
2 REASON
from T_USER_ACHIEVEMENT TUA
left join T_USER_USER T5 ON T5.ID = TUA.EMPL_ID and T5.STATUS=0
left join 
		(SELECT T1.SENSOR_ID
				,T2.RECT_ID
				,T1.AREA_ID
				,T1.ID
				,T1.CUST_ID
				,T3.PAY_MONEY
				,T2.LESSOR_TIME
				,T2.CLERK_ID
				,T2.CUST_TYPE
				,T2.RECT_TYPE
				,T2.CUST_NAME
				,T2.PRCD_ID
				,T2.STATUS
				,T3.PAY_DATE
				,T1.CUSTOMER_COME
				,T1.contract_type
		 FROM T_PRJT_CREDIT T1
			LEFT JOIN  T_RENT_CONTRACT T2 ON  T2.PRCD_ID = T1.ID and T2.STATUS=0
			left join (select SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,MAX(PAY_DATE) PAY_DATE 
						from T_SUPL_PLAYDETIL 
						where BACKSTATE='0' and STATE='3' and STATUS=0
							AND (CONVERT(VARCHAR(10),PAY_DATE,23) >= CONVERT(VARCHAR(7),DATEADD(MONTH,-1,#start_date#),23) + '-26')
							AND (CONVERT(VARCHAR(10),PAY_DATE,23) <= CONVERT(VARCHAR(7),#start_date#,23) + '-25')
						group by CREDIT_ID
				) T3 on T1.ID =T3.CREDIT_ID
			WHERE  T3.PAY_MONEY > 0
		) T9 ON T9.SENSOR_ID = T5.ID
LEFT JOIN  (
		select MAX(TRCD.THING_NAME)THING_NAME,MAX(TRCD.BRAND)BRAND,TRCD.RECT_ID,TRCD.STATUS  from 
		  T_RENT_CONTRACTDETAIL TRCD where TRCD.STATUS=0
		  group by trcd.rect_id,TRCD.STATUS) TRCD
		   ON      t9.RECT_ID=  TRCD.RECT_ID  and (TRCD.STATUS=0 or TRCD.STATUS is null)
LEFT JOIN   T_AREA T4 ON  T9.AREA_ID = T4.ID
LEFT JOIN T_USER_USER T6 ON T9.SENSOR_ID = T6.ID and (T6.JOB = '1' or T6.JOB =#job_type#)
LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID  = TUA.DECP_ID and (T2.STATUS=0 or T2.STATUS is null)
left join T_RENT_CONTRACTSCHEMA t7 on T9.RECT_ID=t7.RECT_ID
left join T_PRJT_CREDITSCHEME t10 on t10.CREDIT_ID=T9.ID
left join (select FLAG contract_type,CODE from T_DATA_DICTIONARY where TYPE=#cust_type#) t11 on t11.CODE=t9.contract_type
left join (select FLAG CUSTOMER_COME,CODE from T_DATA_DICTIONARY where TYPE=#cust_state#) t12 on t12.CODE=t9.CUSTOMER_COME
LEFT JOIN T_LOG_ACTIVITIESLOG T13 ON T13.CREDIT_ID = T9.ID AND T13.STATUS = 0
LEFT JOIN t_cust_customer TCC ON TCC.CUST_ID = t9.CUST_ID AND TCC.STATUS = 0
LEFT JOIN t_prjt_creditequipment T14 ON T14.CREDIT_ID = t9.ID AND T14.EQMT_STATUS = 0
WHERE	((TUA.EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND TUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
		and TUA.STATUS=0  and T5.STATUS=0
		AND TUA.CREATE_TIME = (
			SELECT MAX(CREATE_TIME) CREATE_TIME
			FROM T_USER_ACHIEVEMENT 
			WHERE STATUS = 0
				AND EMPL_ID = TUA.EMPL_ID
				AND ((EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
			GROUP BY EMPL_ID
		)
		AND T9.RECT_ID IS NOT NULL
		group by  T9.RECT_ID,  T9.LESSOR_TIME , t7.LEASE_PERIOD ,  t7.HEAD_HIRE , t7.START_DATE,
		t7.RECT_ID ,TUA.EMPL_ID,
		T9.CLERK_ID, T9.SENSOR_ID , T9.CUST_TYPE, T9.AREA_ID,T4.NAME,
		 T9.RECT_TYPE, T5.NAME,T6.NAME,
		 T9.LESSOR_TIME, T9.CUST_NAME, T9.PRCD_ID , TRCD.BRAND,TRCD.THING_NAME,t7.LEASE_PERIOD,t7.PLEDGE_PRICE,t7.LEASE_TOPRIC,t7.PLEDGE_AVE_PRICE,
		TUA.EMPL_ACHIEVEMENT , TUA.DECP_ID  ,T2.DECP_NAME_CN,T9.STATUS, TRCD.STATUS,T2.STATUS,T9.PAY_MONEY,T9.PAY_DATE,t10.sponsor,t12.CUSTOMER_COME,t11.contract_type,
		TCC.CUST_NAME,T5.ID,T14.THING_KIND,t10.START_DATE,t10.LEASE_TERM,t10.PLEDGE_PRICE,t10.LEASE_TOPRIC,t10.PLEDGE_AVE_PRICE
		
		
		union
			select  
TUA.EMPL_ACHIEVEMENT ,
TUA.DECP_ID,
TUA.EMPL_ID,
T9.RECT_ID, 
T5.ID,
CASE WHEN T9.RECT_ID IS NOT NULL THEN convert(varchar, t7.START_DATE ,23) ELSE  convert(varchar, t10.START_DATE ,23) END START_DATE , 
t7.HEAD_HIRE , 
T9.CLERK_ID,
T9.SENSOR_ID ,
T9.CUST_TYPE,
T9.AREA_ID,
T4.NAME AREA,
T9.RECT_TYPE,
T5.NAME CLERK_NAME,
T6.NAME SENSOR_NAME,
convert(varchar,T9.LESSOR_TIME ,23) LESSOR_TIME, 
CASE WHEN T9.RECT_ID IS NOT NULL THEN T9.CUST_NAME  ELSE TCC.CUST_NAME END CUST_NAME, 
T9.PRCD_ID ,
CASE WHEN TRCD.BRAND IS NOT NULL THEN TRCD.BRAND ELSE T14.THING_KIND END BRAND,
TRCD.THING_NAME,
T2.DECP_NAME_CN,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_PERIOD ELSE T10.LEASE_TERM END LEASE_PERIOD,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_PRICE ELSE t10.PLEDGE_PRICE END PLEDGE_PRICE,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_TOPRIC ELSE t10.LEASE_TOPRIC END LEASE_TOPRIC,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_AVE_PRICE ELSE t10.PLEDGE_AVE_PRICE END PLEDGE_AVE_PRICE, 
T9.PAY_MONEY,
T9.PAY_DATE ,
T9.PAY_DATE MODIFY_DATE,
t10.sponsor,
t12.CUSTOMER_COME CUSTOMER_COME,
t11.contract_type CONTRACT_TYPE,
1 REASON
from T_USER_ACHIEVEMENT TUA
left join T_USER_USER T5 ON T5.ID = TUA.EMPL_ID and T5.STATUS=0
left join 
		(SELECT T1.SENSOR_ID
				,T2.RECT_ID
				,T1.AREA_ID
				,T1.ID
				,T1.CUST_ID
				,T3.PAY_MONEY
				,T2.LESSOR_TIME
				,T2.CLERK_ID
				,T2.CUST_TYPE
				,T2.RECT_TYPE
				,T2.CUST_NAME
				,T2.PRCD_ID
				,T2.STATUS
				,T3.PAY_DATE
				,T1.CUSTOMER_COME
				,T1.contract_type
		 FROM T_PRJT_CREDIT T1
			LEFT JOIN  T_RENT_CONTRACT T2 ON  T2.PRCD_ID = T1.ID and T2.STATUS=0
			left join (	select SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,MAX(PAY_DATE) PAY_DATE 
						from T_SUPL_PLAYDETIL 
						where BACKSTATE='0' and STATE='3' and STATUS=0
						group by CREDIT_ID
				) T3 on T1.ID =T3.CREDIT_ID
			WHERE  T2.RECT_STATUS = 1 AND ( T3.PAY_MONEY IS NULL OR T3.PAY_MONEY = 0)  
		) T9 ON T9.SENSOR_ID = T5.ID
LEFT JOIN  (
		select MAX(TRCD.THING_NAME)THING_NAME,MAX(TRCD.BRAND)BRAND,TRCD.RECT_ID,TRCD.STATUS  from 
		  T_RENT_CONTRACTDETAIL TRCD where TRCD.STATUS=0
		  group by trcd.rect_id,TRCD.STATUS) TRCD
		   ON      t9.RECT_ID=  TRCD.RECT_ID  and (TRCD.STATUS=0 or TRCD.STATUS is null)
LEFT JOIN   T_AREA T4 ON  T9.AREA_ID = T4.ID
LEFT JOIN T_USER_USER T6 ON T9.SENSOR_ID = T6.ID and (T6.JOB = '1' or T6.JOB =#job_type#)
LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID  = TUA.DECP_ID and (T2.STATUS=0 or T2.STATUS is null)
left join T_RENT_CONTRACTSCHEMA t7 on T9.RECT_ID=t7.RECT_ID
left join T_PRJT_CREDITSCHEME t10 on t10.CREDIT_ID=T9.ID
left join (select FLAG contract_type,CODE from T_DATA_DICTIONARY where TYPE=#cust_type#) t11 on t11.CODE=t9.contract_type
left join (select FLAG CUSTOMER_COME,CODE from T_DATA_DICTIONARY where TYPE=#cust_state#) t12 on t12.CODE=t9.CUSTOMER_COME
LEFT JOIN T_LOG_ACTIVITIESLOG T13 ON T13.CREDIT_ID = T9.ID AND T13.STATUS = 0
LEFT JOIN t_cust_customer TCC ON TCC.CUST_ID = t9.CUST_ID AND TCC.STATUS = 0
LEFT JOIN t_prjt_creditequipment T14 ON T14.CREDIT_ID = t9.ID AND T14.EQMT_STATUS = 0
WHERE	((TUA.EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND TUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
		and TUA.STATUS=0  and T5.STATUS=0
		AND TUA.CREATE_TIME = (
			SELECT MAX(CREATE_TIME) CREATE_TIME
			FROM T_USER_ACHIEVEMENT 
			WHERE STATUS = 0
				AND EMPL_ID = TUA.EMPL_ID
				AND ((EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
			GROUP BY EMPL_ID
		)
		
		group by  T9.RECT_ID,  T9.LESSOR_TIME , t7.LEASE_PERIOD ,  t7.HEAD_HIRE , t7.START_DATE,
		t7.RECT_ID ,TUA.EMPL_ID,
		T9.CLERK_ID, T9.SENSOR_ID , T9.CUST_TYPE, T9.AREA_ID,T4.NAME,
		 T9.RECT_TYPE, T5.NAME,T6.NAME,
		 T9.LESSOR_TIME, T9.CUST_NAME, T9.PRCD_ID , TRCD.BRAND,TRCD.THING_NAME,t7.LEASE_PERIOD,t7.PLEDGE_PRICE,t7.LEASE_TOPRIC,t7.PLEDGE_AVE_PRICE,
		TUA.EMPL_ACHIEVEMENT , TUA.DECP_ID  ,T2.DECP_NAME_CN,T9.STATUS, TRCD.STATUS,T2.STATUS,T9.PAY_MONEY,T9.PAY_DATE,t10.sponsor,t12.CUSTOMER_COME,t11.contract_type,
		TCC.CUST_NAME,T5.ID,T14.THING_KIND,t10.START_DATE,t10.LEASE_TERM,t10.PLEDGE_PRICE,t10.LEASE_TOPRIC,t10.PLEDGE_AVE_PRICE
		
		
	
		union
		
			select  
TUA.EMPL_ACHIEVEMENT ,
TUA.DECP_ID,
TUA.EMPL_ID,
TRCT.RECT_ID, 
T5.ID,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN convert(varchar, t7.START_DATE ,23) ELSE  convert(varchar, t10.START_DATE ,23) END START_DATE , 
t7.HEAD_HIRE , 
TRCT.CLERK_ID,
TRCT.SENSOR_ID ,
TRCT.CUST_TYPE,
TRCT.AREA_ID,
T4.NAME AREA,
TRCT.RECT_TYPE,
T5.NAME CLERK_NAME,
T6.NAME SENSOR_NAME,
convert(varchar,TRCT.LESSOR_TIME ,23) LESSOR_TIME, 
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN TRCT.CUST_NAME  ELSE TCC.CUST_NAME END CUST_NAME, 
TRCT.PRCD_ID ,
CASE WHEN TRCD.BRAND IS NOT NULL THEN TRCD.BRAND ELSE T14.THING_KIND END BRAND,
TRCD.THING_NAME,
T2.DECP_NAME_CN,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.LEASE_PERIOD ELSE T10.LEASE_TERM END LEASE_PERIOD,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.PLEDGE_PRICE ELSE t10.PLEDGE_PRICE END PLEDGE_PRICE,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.LEASE_TOPRIC ELSE t10.LEASE_TOPRIC END LEASE_TOPRIC,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.PLEDGE_AVE_PRICE ELSE t10.PLEDGE_AVE_PRICE END PLEDGE_AVE_PRICE, 
t8.PAY_MONEY,
t8.PAY_DATE ,
t8.PAY_DATE MODIFY_DATE,
t10.sponsor,
t12.CUSTOMER_COME CUSTOMER_COME,
t11.contract_type CONTRACT_TYPE,
3 REASON
from T_USER_ACHIEVEMENT TUA
left join T_USER_USER T5 ON T5.ID = TUA.EMPL_ID and T5.STATUS=0
left join T_PRJT_CREDIT t9 on t9.SENSOR_ID=T5.ID 
LEFT JOIN  T_RENT_CONTRACT TRCT ON  TRCT.PRCD_ID = T9.ID and TRCT.STATUS=0
left join (select SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,min(PAY_DATE) PAY_DATE 
			from T_SUPL_PLAYDETIL 
			where BACKSTATE='0' and STATE='3' and STATUS=0
			group by CREDIT_ID
	) t8 on T9.ID =t8.CREDIT_ID 
LEFT JOIN  (
		select MAX(TRCD.THING_NAME)THING_NAME,MAX(TRCD.BRAND)BRAND,TRCD.RECT_ID,TRCD.STATUS  from 
		  T_RENT_CONTRACTDETAIL TRCD where TRCD.STATUS=0
		  group by trcd.rect_id,TRCD.STATUS) TRCD
		   ON      TRCT.RECT_ID=  TRCD.RECT_ID  and (TRCD.STATUS=0 or TRCD.STATUS is null)
LEFT JOIN   T_AREA T4 ON  TRCT.AREA_ID = T4.ID
LEFT JOIN T_USER_USER T6 ON TRCT.SENSOR_ID = T6.ID and (T6.JOB = '1' or T6.JOB =#job_type#)
LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID  = TUA.DECP_ID and (T2.STATUS=0 or T2.STATUS is null)
left join T_RENT_CONTRACTSCHEMA t7 on TRCT.RECT_ID=t7.RECT_ID
left join T_PRJT_CREDITSCHEME t10 on t10.CREDIT_ID=t9.ID
left join (select FLAG contract_type,CODE from T_DATA_DICTIONARY where TYPE=#cust_type#) t11 on t11.CODE=t9.contract_type
left join (select FLAG CUSTOMER_COME,CODE from T_DATA_DICTIONARY where TYPE=#cust_state#) t12 on t12.CODE=t9.CUSTOMER_COME
LEFT JOIN T_LOG_ACTIVITIESLOG T13 ON T13.CREDIT_ID = T9.ID AND T13.STATUS = 0
LEFT JOIN t_cust_customer TCC ON TCC.CUST_ID = t9.CUST_ID AND TCC.STATUS = 0
LEFT JOIN t_prjt_creditequipment T14 ON T14.CREDIT_ID = t9.ID AND T14.EQMT_STATUS = 0
WHERE	((TUA.EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND TUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
		AND
		(CONVERT(VARCHAR(10),T13.MODIFY_HAB_DATE,23) >= CONVERT(VARCHAR(7),DATEADD(MONTH,-1,#start_date#),23) + '-26')
		AND 
		(CONVERT(VARCHAR(10),T13.MODIFY_HAB_DATE,23) <= CONVERT(VARCHAR(7),#start_date#,23) + '-25')
		AND T13.CONTRACT_HAB = 1
		and TUA.STATUS=0  and T5.STATUS=0
		AND TUA.CREATE_TIME = (
			SELECT MAX(CREATE_TIME) CREATE_TIME
			FROM T_USER_ACHIEVEMENT 
			WHERE STATUS = 0
				AND EMPL_ID = TUA.EMPL_ID
				AND ((EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))))
			GROUP BY EMPL_ID
		)
		group by  TRCT.RECT_ID,  TRCT.LESSOR_TIME , t7.LEASE_PERIOD ,  t7.HEAD_HIRE , t7.START_DATE,
		t7.RECT_ID ,TUA.EMPL_ID,
		TRCT.CLERK_ID, TRCT.SENSOR_ID , TRCT.CUST_TYPE, TRCT.AREA_ID,T4.NAME,
		 TRCT.RECT_TYPE, T5.NAME,T6.NAME,
		 TRCT.LESSOR_TIME, TRCT.CUST_NAME, TRCT.PRCD_ID , TRCD.BRAND,TRCD.THING_NAME,t7.LEASE_PERIOD,t7.PLEDGE_PRICE,t7.LEASE_TOPRIC,t7.PLEDGE_AVE_PRICE,
		TUA.EMPL_ACHIEVEMENT , TUA.DECP_ID  ,T2.DECP_NAME_CN,TRCT.STATUS, TRCD.STATUS,T2.STATUS,t8.PAY_MONEY,t8.PAY_DATE,t10.sponsor,t12.CUSTOMER_COME,t11.contract_type,
		TCC.CUST_NAME,T5.ID,T14.THING_KIND,t10.START_DATE,t10.LEASE_TERM,t10.PLEDGE_PRICE,t10.LEASE_TOPRIC,t10.PLEDGE_AVE_PRICE
	) T
 			GROUP BY T.ID,t.DECP_ID,t.CLERK_NAME
	       ORDER BY t.DECP_ID,T.ID
	       ]]>
	</statement>


	
	<delete id="deleteMonth"  parameterClass="map">
		
		delete from t_user_achievement where empl_month=#em_month# and empl_year = convert(varchar, year(getdate())) 
	
	</delete>




	<!--  INSERT ACHIEVEMENT    SAVE -->
	<insert id="createAchievement" parameterClass="map">
		<![CDATA[
			insert into t_user_achievement
			  (create_user_id,modify_user_id, create_time,modify_time,empl_achievement,empl_id,decp_id,empl_month,empl_year,status)
			values
			  (#user_id#,#user_id#,getdate(),#start_date#,#empl_achievement#,#empl_id#, #decp_id#,#empl_month# ,#YEAR#,0)
		]]>
		
	</insert>
	
	<!--  update ACHIEVEMENT    update  将以前已有的数据改成不可用 -->
	<!-- 2012/02/21 Yang Yun 在保存员工业绩的时候，作废旧业绩的时候，把匹配区域的条件删除
	因为，当员工换区域，或区域有变更的时候就会产生2套业绩。 -->
	<insert id="updateAchievement" parameterClass="map">
		<![CDATA[
			 update T_USER_ACHIEVEMENT set STATUS=-2 
			 where  EMPL_ID =  #empl_id# 
			 AND EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)  AND  EMPL_MONTH=#empl_month#
		]]>
		
	</insert>
	
	<!-- 2012/01/16 Yang Yun 更新目标额度。1. 删除旧记录.  -->
	<delete id="deleteOldGoalMoney" parameterClass="map">
		delete from T_GOAL_LINE
		where YEAR = CONVERT(int,#YEAR#)
		and MONTH = #month#
		and DEPT_ID = #dept_id#
	</delete>
	
	<!-- 2012/01/16 Yang Yun 更新目标额度。1. 插入新记录.  -->
	<insert id="insertNewGoalMoney" parameterClass="map">
		insert into T_GOAL_LINE (
		   YEAR
		  ,MONTH
		  ,DEPT_ID
		  ,GOAL_MONEY
		  ,CREATE_BY
		  ,CREATE_DT
		  ,STATUS
		) VALUES (
		   #YEAR#
		  ,#month#
		  ,#dept_id#
		  ,#goal_money#
		  ,#s_employeeId#
		  ,getdate()
		  ,0
		)
	</insert>
	
	<statement id="queryEmplAchieve" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
					 	
		
		SELECT   convert(varchar, TRCP.START_DATE ,23) START_DATE , TRCP.LEASE_PERIOD ,  TRCP.HEAD_HIRE , 
		TRCP.RECT_ID ,
		TRCT.CLERK_ID, TRCT.SENSOR_ID , TRCT.CUST_TYPE, TRCT.AREA_ID,T4.NAME AREA,
		 TRCT.RECT_TYPE, T5.NAME CLERK_NAME,T6.NAME SENSOR_NAME,
		
		 convert(varchar,TRCT.LESSOR_TIME ,23) LESSOR_TIME, TRCT.CUST_NAME, TRCT.PRCD_ID,  TRCD.THING_NAME , TRCD.BRAND,
		 
		TUA.EMPL_ACHIEVEMENT , TUA.DECP_ID  ,T2.DECP_NAME_CN
		
		  FROM   T_RENT_COLLECTIONPLAN   TRCP  
		
		LEFT JOIN  T_RENT_CONTRACT TRCT ON  TRCP.RECT_ID =TRCT.RECT_ID
		
		LEFT JOIN   T_RENT_CONTRACTDETAIL TRCD  ON      TRCP.RECT_ID=  TRCD.RECT_ID
		
		 LEFT JOIN   T_AREA T4 ON  TRCT.AREA_ID = T4.ID
		  LEFT JOIN T_USER_USER T5 ON TRCT.CLERK_ID = T5.ID
		 LEFT JOIN T_USER_USER T6 ON TRCT.SENSOR_ID = T6.ID
		LEFT JOIN T_USER_ACHIEVEMENT  TUA ON T5.ID = TUA.EMPL_ID 
		LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID  = TUA.DECP_ID
		WHERE     MONTH(TRCP.START_DATE) =MONTH(GETDATE()) AND   
		YEAR(TRCP.START_DATE) =YEAR(GETDATE()) AND   TRCP.STATUS = 0 
		 AND    TUA.EMPL_MONTH=MONTH( DATEADD(MM,0,GETDATE())) 
		AND TUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE())) 
		]]>
	</statement>
	
	<statement id="queryEmplAchieveNew" parameterClass="map" resultClass="java.util.HashMap">
		 <!--2011/12/28 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)-->
		 <![CDATA[
		 select t.* from (
		 ]]>
		 <!--2011/12/28 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)-->
		 <![CDATA[
		 			select  
TUA.EMPL_ACHIEVEMENT ,
TUA.DECP_ID,
TUA.EMPL_ID,
T9.RECT_ID, 
T5.ID,
CASE WHEN T9.RECT_ID IS NOT NULL THEN convert(varchar, t7.START_DATE ,23) ELSE  convert(varchar, t10.START_DATE ,23) END START_DATE , 
t7.HEAD_HIRE , 
T9.CLERK_ID,
T9.SENSOR_ID ,
T9.CUST_TYPE,
T9.AREA_ID,
T4.NAME AREA,
T9.RECT_TYPE,
T5.NAME CLERK_NAME,
T6.NAME SENSOR_NAME,
convert(varchar,T9.LESSOR_TIME ,23) LESSOR_TIME, 
CASE WHEN T9.RECT_ID IS NOT NULL THEN T9.CUST_NAME  ELSE TCC.CUST_NAME END CUST_NAME, 
T9.PRCD_ID ,
CASE WHEN TRCD.BRAND IS NOT NULL THEN TRCD.BRAND ELSE T14.THING_KIND END BRAND,
TRCD.THING_NAME,
T2.DECP_NAME_CN,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_PERIOD ELSE T10.LEASE_TERM END LEASE_PERIOD,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_PRICE ELSE t10.PLEDGE_PRICE END PLEDGE_PRICE,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_TOPRIC ELSE t10.LEASE_TOPRIC END LEASE_TOPRIC,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_AVE_PRICE ELSE t10.PLEDGE_AVE_PRICE END PLEDGE_AVE_PRICE, 
T9.PAY_MONEY,
T9.PAY_DATE ,
T9.PAY_DATE MODIFY_DATE,
t10.sponsor,
t12.CUSTOMER_COME CUSTOMER_COME,
t11.contract_type CONTRACT_TYPE,
2 REASON
from T_USER_ACHIEVEMENT TUA
left join T_USER_USER T5 ON T5.ID = TUA.EMPL_ID and T5.STATUS=0
left join 
		(SELECT T1.SENSOR_ID
				,T2.RECT_ID
				,T1.AREA_ID
				,T1.ID
				,T1.CUST_ID
				,T3.PAY_MONEY
				,T2.LESSOR_TIME
				,T2.CLERK_ID
				,T2.CUST_TYPE
				,T2.RECT_TYPE
				,T2.CUST_NAME
				,T2.PRCD_ID
				,T2.STATUS
				,T3.PAY_DATE
				,T1.CUSTOMER_COME
				,T1.contract_type
		 FROM T_PRJT_CREDIT T1
			LEFT JOIN  T_RENT_CONTRACT T2 ON  T2.PRCD_ID = T1.ID and T2.STATUS=0
			left join (select SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,MAX(PAY_DATE) PAY_DATE 
						from T_SUPL_PLAYDETIL 
						where BACKSTATE='0' and STATE='3' and STATUS=0
							AND (CONVERT(VARCHAR(10),PAY_DATE,23) >= CONVERT(VARCHAR(7),DATEADD(MONTH,-1,#start_date#),23) + '-26')
							AND (CONVERT(VARCHAR(10),PAY_DATE,23) <= CONVERT(VARCHAR(7),#start_date#,23) + '-25')
						group by CREDIT_ID
				) T3 on T1.ID =T3.CREDIT_ID
			WHERE  T3.PAY_MONEY > 0
		) T9 ON T9.SENSOR_ID = T5.ID
LEFT JOIN  (
		select MAX(TRCD.THING_NAME)THING_NAME,MAX(TRCD.BRAND)BRAND,TRCD.RECT_ID,TRCD.STATUS  from 
		  T_RENT_CONTRACTDETAIL TRCD where TRCD.STATUS=0
		  group by trcd.rect_id,TRCD.STATUS) TRCD
		   ON      t9.RECT_ID=  TRCD.RECT_ID  and (TRCD.STATUS=0 or TRCD.STATUS is null)
LEFT JOIN   T_AREA T4 ON  T9.AREA_ID = T4.ID
LEFT JOIN T_USER_USER T6 ON T9.SENSOR_ID = T6.ID and (T6.JOB = '1' or T6.JOB =#job_type#)
LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID  = TUA.DECP_ID and (T2.STATUS=0 or T2.STATUS is null)
left join T_RENT_CONTRACTSCHEMA t7 on T9.RECT_ID=t7.RECT_ID
left join T_PRJT_CREDITSCHEME t10 on t10.CREDIT_ID=T9.ID
left join (select FLAG contract_type,CODE from T_DATA_DICTIONARY where TYPE=#cust_type#) t11 on t11.CODE=t9.contract_type
left join (select FLAG CUSTOMER_COME,CODE from T_DATA_DICTIONARY where TYPE=#cust_state#) t12 on t12.CODE=t9.CUSTOMER_COME
LEFT JOIN T_LOG_ACTIVITIESLOG T13 ON T13.CREDIT_ID = T9.ID AND T13.STATUS = 0
LEFT JOIN t_cust_customer TCC ON TCC.CUST_ID = t9.CUST_ID AND TCC.STATUS = 0
LEFT JOIN t_prjt_creditequipment T14 ON T14.CREDIT_ID = t9.ID AND T14.EQMT_STATUS = 0
WHERE	((TUA.EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND TUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
		and TUA.STATUS=0  and T5.STATUS=0
		AND TUA.CREATE_TIME = (
			SELECT MAX(CREATE_TIME) CREATE_TIME
			FROM T_USER_ACHIEVEMENT 
			WHERE STATUS = 0
				AND EMPL_ID = TUA.EMPL_ID
				AND ((EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
			GROUP BY EMPL_ID
		)
		AND T9.RECT_ID IS NOT NULL
		group by  T9.RECT_ID,  T9.LESSOR_TIME , t7.LEASE_PERIOD ,  t7.HEAD_HIRE , t7.START_DATE,
		t7.RECT_ID ,TUA.EMPL_ID,
		T9.CLERK_ID, T9.SENSOR_ID , T9.CUST_TYPE, T9.AREA_ID,T4.NAME,
		 T9.RECT_TYPE, T5.NAME,T6.NAME,
		 T9.LESSOR_TIME, T9.CUST_NAME, T9.PRCD_ID , TRCD.BRAND,TRCD.THING_NAME,t7.LEASE_PERIOD,t7.PLEDGE_PRICE,t7.LEASE_TOPRIC,t7.PLEDGE_AVE_PRICE,
		TUA.EMPL_ACHIEVEMENT , TUA.DECP_ID  ,T2.DECP_NAME_CN,T9.STATUS, TRCD.STATUS,T2.STATUS,T9.PAY_MONEY,T9.PAY_DATE,t10.sponsor,t12.CUSTOMER_COME,t11.contract_type,
		TCC.CUST_NAME,T5.ID,T14.THING_KIND,t10.START_DATE,t10.LEASE_TERM,t10.PLEDGE_PRICE,t10.LEASE_TOPRIC,t10.PLEDGE_AVE_PRICE
		
		
		union
			select  
TUA.EMPL_ACHIEVEMENT ,
TUA.DECP_ID,
TUA.EMPL_ID,
T9.RECT_ID, 
T5.ID,
CASE WHEN T9.RECT_ID IS NOT NULL THEN convert(varchar, t7.START_DATE ,23) ELSE  convert(varchar, t10.START_DATE ,23) END START_DATE , 
t7.HEAD_HIRE , 
T9.CLERK_ID,
T9.SENSOR_ID ,
T9.CUST_TYPE,
T9.AREA_ID,
T4.NAME AREA,
T9.RECT_TYPE,
T5.NAME CLERK_NAME,
T6.NAME SENSOR_NAME,
convert(varchar,T9.LESSOR_TIME ,23) LESSOR_TIME, 
CASE WHEN T9.RECT_ID IS NOT NULL THEN T9.CUST_NAME  ELSE TCC.CUST_NAME END CUST_NAME, 
T9.PRCD_ID ,
CASE WHEN TRCD.BRAND IS NOT NULL THEN TRCD.BRAND ELSE T14.THING_KIND END BRAND,
TRCD.THING_NAME,
T2.DECP_NAME_CN,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_PERIOD ELSE T10.LEASE_TERM END LEASE_PERIOD,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_PRICE ELSE t10.PLEDGE_PRICE END PLEDGE_PRICE,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.LEASE_TOPRIC ELSE t10.LEASE_TOPRIC END LEASE_TOPRIC,
CASE WHEN T9.RECT_ID IS NOT NULL THEN t7.PLEDGE_AVE_PRICE ELSE t10.PLEDGE_AVE_PRICE END PLEDGE_AVE_PRICE, 
T9.PAY_MONEY,
T9.PAY_DATE ,
T9.PAY_DATE MODIFY_DATE,
t10.sponsor,
t12.CUSTOMER_COME CUSTOMER_COME,
t11.contract_type CONTRACT_TYPE,
1 REASON
from T_USER_ACHIEVEMENT TUA
left join T_USER_USER T5 ON T5.ID = TUA.EMPL_ID and T5.STATUS=0
left join 
		(SELECT T1.SENSOR_ID
				,T2.RECT_ID
				,T1.AREA_ID
				,T1.ID
				,T1.CUST_ID
				,T3.PAY_MONEY
				,T2.LESSOR_TIME
				,T2.CLERK_ID
				,T2.CUST_TYPE
				,T2.RECT_TYPE
				,T2.CUST_NAME
				,T2.PRCD_ID
				,T2.STATUS
				,T3.PAY_DATE
				,T1.CUSTOMER_COME
				,T1.contract_type
		 FROM T_PRJT_CREDIT T1
			LEFT JOIN  T_RENT_CONTRACT T2 ON  T2.PRCD_ID = T1.ID and T2.STATUS=0
			left join (	select SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,MAX(PAY_DATE) PAY_DATE 
						from T_SUPL_PLAYDETIL 
						where BACKSTATE='0' and STATE='3' and STATUS=0
						group by CREDIT_ID
				) T3 on T1.ID =T3.CREDIT_ID
			WHERE  T2.RECT_STATUS = 1 AND ( T3.PAY_MONEY IS NULL OR T3.PAY_MONEY = 0)  
		) T9 ON T9.SENSOR_ID = T5.ID
LEFT JOIN  (
		select MAX(TRCD.THING_NAME)THING_NAME,MAX(TRCD.BRAND)BRAND,TRCD.RECT_ID,TRCD.STATUS  from 
		  T_RENT_CONTRACTDETAIL TRCD where TRCD.STATUS=0
		  group by trcd.rect_id,TRCD.STATUS) TRCD
		   ON      t9.RECT_ID=  TRCD.RECT_ID  and (TRCD.STATUS=0 or TRCD.STATUS is null)
LEFT JOIN   T_AREA T4 ON  T9.AREA_ID = T4.ID
LEFT JOIN T_USER_USER T6 ON T9.SENSOR_ID = T6.ID and (T6.JOB = '1' or T6.JOB =#job_type#)
LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID  = TUA.DECP_ID and (T2.STATUS=0 or T2.STATUS is null)
left join T_RENT_CONTRACTSCHEMA t7 on T9.RECT_ID=t7.RECT_ID
left join T_PRJT_CREDITSCHEME t10 on t10.CREDIT_ID=T9.ID
left join (select FLAG contract_type,CODE from T_DATA_DICTIONARY where TYPE=#cust_type#) t11 on t11.CODE=t9.contract_type
left join (select FLAG CUSTOMER_COME,CODE from T_DATA_DICTIONARY where TYPE=#cust_state#) t12 on t12.CODE=t9.CUSTOMER_COME
LEFT JOIN T_LOG_ACTIVITIESLOG T13 ON T13.CREDIT_ID = T9.ID AND T13.STATUS = 0
LEFT JOIN t_cust_customer TCC ON TCC.CUST_ID = t9.CUST_ID AND TCC.STATUS = 0
LEFT JOIN t_prjt_creditequipment T14 ON T14.CREDIT_ID = t9.ID AND T14.EQMT_STATUS = 0
WHERE	((TUA.EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND TUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
		and TUA.STATUS=0  and T5.STATUS=0
		AND TUA.CREATE_TIME = (
			SELECT MAX(CREATE_TIME) CREATE_TIME
			FROM T_USER_ACHIEVEMENT 
			WHERE STATUS = 0
				AND EMPL_ID = TUA.EMPL_ID
				AND ((EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
			GROUP BY EMPL_ID
		)
		
		group by  T9.RECT_ID,  T9.LESSOR_TIME , t7.LEASE_PERIOD ,  t7.HEAD_HIRE , t7.START_DATE,
		t7.RECT_ID ,TUA.EMPL_ID,
		T9.CLERK_ID, T9.SENSOR_ID , T9.CUST_TYPE, T9.AREA_ID,T4.NAME,
		 T9.RECT_TYPE, T5.NAME,T6.NAME,
		 T9.LESSOR_TIME, T9.CUST_NAME, T9.PRCD_ID , TRCD.BRAND,TRCD.THING_NAME,t7.LEASE_PERIOD,t7.PLEDGE_PRICE,t7.LEASE_TOPRIC,t7.PLEDGE_AVE_PRICE,
		TUA.EMPL_ACHIEVEMENT , TUA.DECP_ID  ,T2.DECP_NAME_CN,T9.STATUS, TRCD.STATUS,T2.STATUS,T9.PAY_MONEY,T9.PAY_DATE,t10.sponsor,t12.CUSTOMER_COME,t11.contract_type,
		TCC.CUST_NAME,T5.ID,T14.THING_KIND,t10.START_DATE,t10.LEASE_TERM,t10.PLEDGE_PRICE,t10.LEASE_TOPRIC,t10.PLEDGE_AVE_PRICE
		
		
	
		union
		
			select  
TUA.EMPL_ACHIEVEMENT ,
TUA.DECP_ID,
TUA.EMPL_ID,
TRCT.RECT_ID, 
T5.ID,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN convert(varchar, t7.START_DATE ,23) ELSE  convert(varchar, t10.START_DATE ,23) END START_DATE , 
t7.HEAD_HIRE , 
TRCT.CLERK_ID,
TRCT.SENSOR_ID ,
TRCT.CUST_TYPE,
TRCT.AREA_ID,
T4.NAME AREA,
TRCT.RECT_TYPE,
T5.NAME CLERK_NAME,
T6.NAME SENSOR_NAME,
convert(varchar,TRCT.LESSOR_TIME ,23) LESSOR_TIME, 
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN TRCT.CUST_NAME  ELSE TCC.CUST_NAME END CUST_NAME, 
TRCT.PRCD_ID ,
CASE WHEN TRCD.BRAND IS NOT NULL THEN TRCD.BRAND ELSE T14.THING_KIND END BRAND,
TRCD.THING_NAME,
T2.DECP_NAME_CN,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.LEASE_PERIOD ELSE T10.LEASE_TERM END LEASE_PERIOD,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.PLEDGE_PRICE ELSE t10.PLEDGE_PRICE END PLEDGE_PRICE,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.LEASE_TOPRIC ELSE t10.LEASE_TOPRIC END LEASE_TOPRIC,
CASE WHEN TRCT.RECT_ID IS NOT NULL THEN t7.PLEDGE_AVE_PRICE ELSE t10.PLEDGE_AVE_PRICE END PLEDGE_AVE_PRICE, 
t8.PAY_MONEY,
t8.PAY_DATE ,
t8.PAY_DATE MODIFY_DATE,
t10.sponsor,
t12.CUSTOMER_COME CUSTOMER_COME,
t11.contract_type CONTRACT_TYPE,
3 REASON
from T_USER_ACHIEVEMENT TUA
left join T_USER_USER T5 ON T5.ID = TUA.EMPL_ID and T5.STATUS=0
left join T_PRJT_CREDIT t9 on t9.SENSOR_ID=T5.ID 
LEFT JOIN  T_RENT_CONTRACT TRCT ON  TRCT.PRCD_ID = T9.ID and TRCT.STATUS=0
left join (select SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,min(PAY_DATE) PAY_DATE 
			from T_SUPL_PLAYDETIL 
			where BACKSTATE='0' and STATE='3' and STATUS=0
			group by CREDIT_ID
	) t8 on T9.ID =t8.CREDIT_ID 
LEFT JOIN  (
		select MAX(TRCD.THING_NAME)THING_NAME,MAX(TRCD.BRAND)BRAND,TRCD.RECT_ID,TRCD.STATUS  from 
		  T_RENT_CONTRACTDETAIL TRCD where TRCD.STATUS=0
		  group by trcd.rect_id,TRCD.STATUS) TRCD
		   ON      TRCT.RECT_ID=  TRCD.RECT_ID  and (TRCD.STATUS=0 or TRCD.STATUS is null)
LEFT JOIN   T_AREA T4 ON  TRCT.AREA_ID = T4.ID
LEFT JOIN T_USER_USER T6 ON TRCT.SENSOR_ID = T6.ID and (T6.JOB = '1' or T6.JOB =#job_type#)
LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID  = TUA.DECP_ID and (T2.STATUS=0 or T2.STATUS is null)
left join T_RENT_CONTRACTSCHEMA t7 on TRCT.RECT_ID=t7.RECT_ID
left join T_PRJT_CREDITSCHEME t10 on t10.CREDIT_ID=t9.ID
left join (select FLAG contract_type,CODE from T_DATA_DICTIONARY where TYPE=#cust_type#) t11 on t11.CODE=t9.contract_type
left join (select FLAG CUSTOMER_COME,CODE from T_DATA_DICTIONARY where TYPE=#cust_state#) t12 on t12.CODE=t9.CUSTOMER_COME
LEFT JOIN T_LOG_ACTIVITIESLOG T13 ON T13.CREDIT_ID = T9.ID AND T13.STATUS = 0
LEFT JOIN t_cust_customer TCC ON TCC.CUST_ID = t9.CUST_ID AND TCC.STATUS = 0
LEFT JOIN t_prjt_creditequipment T14 ON T14.CREDIT_ID = t9.ID AND T14.EQMT_STATUS = 0
WHERE	((TUA.EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND TUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
		AND
		(CONVERT(VARCHAR(10),T13.MODIFY_HAB_DATE,23) >= CONVERT(VARCHAR(7),DATEADD(MONTH,-1,#start_date#),23) + '-26')
		AND 
		(CONVERT(VARCHAR(10),T13.MODIFY_HAB_DATE,23) <= CONVERT(VARCHAR(7),#start_date#,23) + '-25')
		AND T13.CONTRACT_HAB = 1
		and TUA.STATUS=0  and T5.STATUS=0
		AND TUA.CREATE_TIME = (
			SELECT MAX(CREATE_TIME) CREATE_TIME
			FROM T_USER_ACHIEVEMENT 
			WHERE STATUS = 0
				AND EMPL_ID = TUA.EMPL_ID
				AND ((EMPL_MONTH=MONTH (DATEADD(MM,0,#start_date#)) AND EMPL_YEAR=CONVERT(VARCHAR,YEAR(#start_date#))))
			GROUP BY EMPL_ID
		)
		group by  TRCT.RECT_ID,  TRCT.LESSOR_TIME , t7.LEASE_PERIOD ,  t7.HEAD_HIRE , t7.START_DATE,
		t7.RECT_ID ,TUA.EMPL_ID,
		TRCT.CLERK_ID, TRCT.SENSOR_ID , TRCT.CUST_TYPE, TRCT.AREA_ID,T4.NAME,
		 TRCT.RECT_TYPE, T5.NAME,T6.NAME,
		 TRCT.LESSOR_TIME, TRCT.CUST_NAME, TRCT.PRCD_ID , TRCD.BRAND,TRCD.THING_NAME,t7.LEASE_PERIOD,t7.PLEDGE_PRICE,t7.LEASE_TOPRIC,t7.PLEDGE_AVE_PRICE,
		TUA.EMPL_ACHIEVEMENT , TUA.DECP_ID  ,T2.DECP_NAME_CN,TRCT.STATUS, TRCD.STATUS,T2.STATUS,t8.PAY_MONEY,t8.PAY_DATE,t10.sponsor,t12.CUSTOMER_COME,t11.contract_type,
		TCC.CUST_NAME,T5.ID,T14.THING_KIND,t10.START_DATE,t10.LEASE_TERM,t10.PLEDGE_PRICE,t10.LEASE_TOPRIC,t10.PLEDGE_AVE_PRICE
		)t where 1 = 1
		]]>
		<!--2011/12/28 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)-->
		<!-- order by TUA.DECP_ID,T5.ID -->
		<isEqual property="p_usernode" compareValue="1">
			<![CDATA[
			and (CLERK_ID = #s_employeeId# or SENSOR_ID = #s_employeeId#)
			]]>
		</isEqual>
		<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
		<isEqual prepend="and" property="p_usernode" compareValue="2">
			<![CDATA[	
				exists(select ID from T_USER_USER
				where DEPT_ID in 
				(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
				where uc.USER_ID = #s_employeeId#)
				and ID = t.SENSOR_ID)
			]]>
		</isEqual>
		<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
		<![CDATA[
		order by t.DECP_ID,t.ID
		 ]]>
		 <!--2011/12/28 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)-->
		 
	</statement>

	<statement id="queryEmplOther" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
					 
		SELECT T.ID ,T.NAME CLERK_NAME , T1.ID DEPT_ID , T2.DECP_ID ,T2.DECP_NAME_CN ,
		 T3.NAME SENSOR_NAME ,TUA.EMPL_ACHIEVEMENT ,TUA.EMPL_MONTH
		FROM T_DEPT_DEPARTMENT T1
		LEFT JOIN T_USER_USER T    ON  T.DEPT_ID = T1.ID 
		 LEFT JOIN T_DEPT_COMPANY T2  ON T2.DECP_ID = T1.DECP_ID
		LEFT JOIN T_USER_USER  T3 ON  T.UPPER_USER = T3.ID
		LEFT JOIN T_USER_ACHIEVEMENT TUA ON TUA.EMPL_ID = T.ID 
			 WHERE (T.JOB = '1' OR T.JOB = #job_type#) AND TUA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE())) 
			  AND  TUA.EMPL_MONTH=MONTH( DATEADD(MM,0,GETDATE())) and TUA.STATUS=0
		 ORDER BY T2.DECP_NAME_CN 
			 
          ]]>
	</statement>
	
	
	
	
	
	
	
	
	
	<statement id="readPayInusres" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT T1.RECI_ID,
			       T1.INSURE_ITEM,
			       T2.INTP_NAME,
			       T1.START_DATE,
			       T1.END_DATE,
			       T1.INSURE_RATE,
			       T1.INSURE_PRICE,
			       T1.MEMO
			  FROM T_RENT_COLLECTIONINSURE T1
			  LEFT JOIN T_INSU_INSURETYPE T2 ON T2.INTP_ID = T1.INSURE_ITEM
			 WHERE T1.RECP_ID = #RECP_ID#  AND T1.STATUS<>-2
			 ORDER BY T1.START_DATE, T2.INTP_NAME, T1.INSURE_PRICE
          ]]>
	</statement>
	<statement id="readPayOtherFees" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT T1.RECO_ID, T1.OTHER_NAME, T1.OTHER_PRICE, T1.OTHER_DATE, T1.MEMO
				  FROM T_RENT_COLLECTIONOTHERFEE T1
				 WHERE T1.RECP_ID = #RECP_ID#
				   AND T1.STATUS<>-2
          ]]>
	</statement>
	<statement id="readPaylines" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT T1.RECD_ID,
				   T1.RECP_ID,
			       T1.LOCKED,
			       T1.PERIOD_NUM,
			       T1.PAY_DATE,
			      
			       T1.MONTH_PRICE,
			       T1.OWN_PRICE,
			       T1.REN_PRICE,
			       T1.LAST_PRICE,
			       T1.LOSS_PRICE,
			       T1.OTHER_PRICE,
			       ISNULL(REDUCE_OWN_PRICE,0)   REDUCE_OWN_PRICE,    
			       ISNULL(REDUCE_REN_PRICE,0)   REDUCE_REN_PRICE,    
			       ISNULL(REDUCE_OTHER_PRICE,0)  REDUCE_OTHER_PRICE,
			       ISNULL(REDUCE_LOSS_PRICE,0)  REDUCE_LOSS_PRICE,
			         DEPOSIT_PRICE,IRR_PRICE,IRR_MONTH_PRICE,SALES_TAX,INSURE_PRICE
			  FROM T_RENT_COLLECTIONDETAIL T1
			 WHERE T1.RECP_ID = #RECP_ID#
			 	AND T1.STATUS <> -2
			 ORDER BY T1.PERIOD_NUM
          ]]>
	</statement>
	 
	<!-- Batch job for 员工业绩进度 -->
	<select id="getAchievementBatchJobData" resultClass="com.brick.batchjob.to.AchievementBatchJobTo">
			  SELECT T.LEASE_CODE leaseCode,
		             T.CREDIT_ID creditId,
		             T.SENSOR_ID userId,
		             T.CUST_NAME custName,
		             T.[TYPE] custType,
		             PRJT.SPONSOR custFrom,
		             TC.CONTRACT_TYPE contractType,
		             T.RECT_ID rectId,
		             	<!-- 如果合同号不为空,就拿合同表的数据,如果合同号为空,就拿资信报告表的数据 -->
		             CASE WHEN T.RECT_ID IS NOT NULL THEN [CONTRACT].PLEDGE_PRICE ELSE CREDIT.PLEDGE_PRICE END pledgePrice,                          
		             CASE WHEN T.RECT_ID IS NOT NULL THEN [CONTRACT].LEASE_TOPRIC ELSE CREDIT.LEASE_TOPRIC END leasePrice,
		             CASE WHEN T.RECT_ID IS NOT NULL THEN [CONTRACT].LEASE_PERIOD ELSE CREDIT.LEASE_TERM END leasePeriod,
		             T.PAY_MONEY applyMoney,
		             T.PAY_MONEY payMoney,             
		             CONVERT(VARCHAR,T.LESSOR_TIME,23) signContractDateDescr,
		             T.PAY_DATE payDate,
		             CASE WHEN T.RECT_ID IS NOT NULL
		                  THEN CONVERT(VARCHAR,[CONTRACT].START_DATE,23) 
		                  ELSE CONVERT(VARCHAR,CREDIT.START_DATE,23) 
		                   END startLeaseDateDescr,
		             CONVERT(VARCHAR,GETDATE(),23) createOnDescr,
		             'PAY' flag
		        FROM (
		                SELECT DISTINCT T1.SENSOR_ID
		              				,T2.RECT_ID
		              				,T1.AREA_ID
		              				,T1.ID
		              				,T1.CUST_ID
		              				,T3.PAY_MONEY
		              				,T2.LESSOR_TIME
		              				,T2.CLERK_ID
		              				,T2.CUST_TYPE
		              				,T2.RECT_TYPE
		              				,CUST.CUST_NAME
		              				,T2.PRCD_ID
		              				,T2.STATUS
		              				,T3.PAY_DATE
		              				,T1.CUSTOMER_COME
		              				,T1.CONTRACT_TYPE
		                      ,T1.[TYPE]
		                      ,T3.CREDIT_ID
		                      ,T1.LEASE_CODE
		                  FROM T_PRJT_CREDIT T1    
		             LEFT JOIN T_CUST_CUSTOMER CUST ON CUST.CUST_ID=T1.CUST_ID
		             LEFT JOIN T_RENT_CONTRACT T2 ON T2.PRCD_ID=T1.ID and T2.STATUS=0
		             LEFT JOIN (
		                        SELECT CREDIT_ID,PAY_MONEY,PAY_DATE  <!-- 当月已经拨款案件 -->
		                          FROM T_SUPL_PLAYDETIL 
		                         WHERE BACKSTATE='0' 
		                           AND STATE=3 <!-- 3意思是完成拨款 -->
		                           AND STATUS=0
		                           AND YEAR(PAY_DATE)=YEAR(GETDATE())
		                           AND MONTH(PAY_DATE)=MONTH(GETDATE())
		                        ) T3 ON T1.ID =T3.CREDIT_ID
		               WHERE T1.STATUS=0 AND PAY_MONEY IS NOT NULL
		               ) T 
			        LEFT JOIN T_PRJT_CREDITSCHEME PRJT ON PRJT.CREDIT_ID=T.ID AND PRJT.STATUS=0
			        LEFT JOIN T_RENT_CONTRACTSCHEMA [CONTRACT] ON [CONTRACT].RECT_ID=T.RECT_ID AND [CONTRACT].STATUS=0
			        LEFT JOIN T_PRJT_CREDITSCHEME CREDIT ON CREDIT.CREDIT_ID=T.ID AND CREDIT.STATUS=0
			        LEFT JOIN (SELECT FLAG CONTRACT_TYPE,CODE 
			                     FROM T_DATA_DICTIONARY 
			                    WHERE TYPE=#CONTRACT_TYPE#) TC ON TC.CODE=T.CONTRACT_TYPE
			                    
			                    UNION ALL
			                    
              SELECT T.LEASE_CODE leaseCode,
		             T.CREDIT_ID creditId,
		             T.SENSOR_ID userId,
		             T.CUST_NAME custName,
		             T.[TYPE] custType,
		             PRJT.SPONSOR custFrom,
		             TC.CONTRACT_TYPE contractType,
		             T.RECT_ID rectId,
		             	<!-- 如果合同号不为空,就拿合同表的数据,如果合同号为空,就拿资信报告表的数据 -->
		             CASE WHEN T.RECT_ID IS NOT NULL THEN [CONTRACT].PLEDGE_PRICE ELSE CREDIT.PLEDGE_PRICE END pledgePrice,                          
		             CASE WHEN T.RECT_ID IS NOT NULL THEN [CONTRACT].LEASE_TOPRIC ELSE CREDIT.LEASE_TOPRIC END leasePrice,
		             CASE WHEN T.RECT_ID IS NOT NULL THEN [CONTRACT].LEASE_PERIOD ELSE CREDIT.LEASE_TERM END leasePeriod,
		             T.PAY_MONEY applyMoney,
		             0 payMoney,             
		             CONVERT(VARCHAR,T.LESSOR_TIME,23) signContractDateDescr,
		             T.PAY_DATE payDate,
		             CASE WHEN T.RECT_ID IS NOT NULL
		                  THEN CONVERT(VARCHAR,[CONTRACT].START_DATE,23) 
		                  ELSE CONVERT(VARCHAR,CREDIT.START_DATE,23) 
		                   END startLeaseDateDescr,
		             CONVERT(VARCHAR,GETDATE(),23) createOnDescr,
		             'NOTPAY' flag
		          FROM
		              (
	               		 SELECT DISTINCT T1.SENSOR_ID
	                      				,T2.RECT_ID
	                      				,T1.AREA_ID
	                      				,T1.ID
	                      				,T1.CUST_ID              				
	                      				,T2.LESSOR_TIME
	                      				,T2.CLERK_ID
	                      				,T2.CUST_TYPE
	                      				,T2.RECT_TYPE
	                      				,CUST.CUST_NAME
	                      				,T2.PRCD_ID
	                      				,T2.STATUS
	                              		,T3.PAY_MONEY
	                      				,CASE WHEN CONVERT(DATE,T3.PAY_DATE,23)= CONVERT(DATE,'1900-1-1',23)
	                                    THEN NULL
	                                    ELSE T3.PAY_DATE
	                                     END PAY_DATE
	                      				,T1.CUSTOMER_COME
	                      				,T1.CONTRACT_TYPE
			                              ,T1.[TYPE]
			                              ,T3.CREDIT_ID
			                              ,T1.LEASE_CODE
			                              ,DATEADD(DAY,T1.VALID_DAY,T1.WIND_RESULT_DATE) EFFECT_DATE
			                          FROM T_PRJT_CREDIT T1  
			                     LEFT JOIN T_CUST_CUSTOMER CUST ON CUST.CUST_ID=T1.CUST_ID
			                     LEFT JOIN T_RENT_CONTRACT T2 ON T2.PRCD_ID=T1.ID and T2.STATUS=0
			                     LEFT JOIN (
			                                SELECT CREDIT_ID,PAY_MONEY,PAY_DATE  
			                                  FROM T_SUPL_PLAYDETIL 
			                                 WHERE BACKSTATE='0' 
			                                   AND (STATE=0 OR STATE=1)  <!-- 0 1意思是未拨款 -->
			                                   AND STATUS=0                           
			                                ) T3 ON T1.ID =T3.CREDIT_ID
			                       WHERE T1.STATUS=0 
			                         AND PAY_MONEY IS NOT NULL
			                         AND DATEADD(DAY,T1.VALID_DAY,T1.WIND_RESULT_DATE)>GETDATE()
			                         AND T1.ID IN (SELECT DISTINCT CREDIT_ID 
			                                         FROM T_SYS_BUSINESSLOG 
			                                        WHERE LOG_TYPE=#PRINT# AND STATUS=0)
			              ) T
			              LEFT JOIN T_PRJT_CREDITSCHEME PRJT ON PRJT.CREDIT_ID=T.ID AND PRJT.STATUS=0
			              LEFT JOIN T_RENT_CONTRACTSCHEMA [CONTRACT] ON [CONTRACT].RECT_ID=T.RECT_ID AND [CONTRACT].STATUS=0
			              LEFT JOIN T_PRJT_CREDITSCHEME CREDIT ON CREDIT.CREDIT_ID=T.ID AND CREDIT.STATUS=0
			              LEFT JOIN (SELECT FLAG CONTRACT_TYPE,CODE 
			                           FROM T_DATA_DICTIONARY 
			                          WHERE TYPE=#CONTRACT_TYPE#) TC ON TC.CODE=T.CONTRACT_TYPE
			                          
			                          UNION ALL
			                          
	          SELECT TPC.LEASE_CODE leaseCode,
		             TPC.ID creditId,
		             TPC.SENSOR_ID userId,
		             TCC.CUST_NAME custName,
		             TPC.[TYPE] custType,
		             PRJT.SPONSOR custFrom,
		             TC.CONTRACT_TYPE contractType,
		             TRCT.RECT_ID rectId,
		             CASE WHEN TRCT.RECT_ID IS NOT NULL THEN [CONTRACT].PLEDGE_PRICE ELSE CREDIT.PLEDGE_PRICE END pledgePrice,                          
		             CASE WHEN TRCT.RECT_ID IS NOT NULL THEN [CONTRACT].LEASE_TOPRIC ELSE CREDIT.LEASE_TOPRIC END leasePrice,
		             CASE WHEN TRCT.RECT_ID IS NOT NULL THEN [CONTRACT].LEASE_PERIOD ELSE CREDIT.LEASE_TERM END leasePeriod,
		             O.REMAIN_MONEY applyMoney,
				         O.REMAIN_MONEY payMoney,
		             CONVERT(VARCHAR,TRCT.LESSOR_TIME,23) signContractDateDescr,
		             NULL payDate,
		             CASE WHEN TRCT.RECT_ID IS NOT NULL
		                  THEN CONVERT(VARCHAR,[CONTRACT].START_DATE,23) 
		                  ELSE CONVERT(VARCHAR,CREDIT.START_DATE,23) 
		                   END startLeaseDateDescr,
				         CONVERT(VARCHAR,GETDATE(),23) createOnDescr,
		             'REMAIN_PAY' flag
		        FROM 
		            (
		              SELECT TPCS.CREDIT_ID,
		                     MAX(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0)) TOTAL_MONEY
		                     ,SUM(PAY.PAY_MONEY) PAY_MONEY,
		                     ROUND((MAX(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0))-SUM(PAY.PAY_MONEY)),0)
		                     REMAIN_MONEY,
		                     TPCT.CONTRACT_TYPE
		                     FROM T_PRJT_CREDITSCHEME TPCS 
		                     LEFT JOIN T_PRJT_CREDIT TPCT ON TPCS.CREDIT_ID=TPCT.ID AND TPCT.STATUS=0
		                     LEFT JOIN T_CUST_CUSTOMER TCCR ON TCCR.CUST_ID=TPCT.CUST_ID AND TCCR.STATUS=0
		                     LEFT JOIN T_SUPL_PLAYDETIL PAY ON TPCS.CREDIT_ID=PAY.CREDIT_ID AND PAY.STATUS=0            
		                     WHERE TPCS.CREDIT_ID IN
		                            (
		                               SELECT DISTINCT CREDIT_ID  <!-- 当月已经拨款案件 -->
		                              FROM T_SUPL_PLAYDETIL 
		                             WHERE BACKSTATE='0' 
		                               AND STATE=3 <!-- 3意思是完成拨款 -->
		                               AND STATUS=0             
		                             ) 
		                       AND TPCS.STATUS=0 AND PAY.BACKSTATE='0'
		                  GROUP BY  TPCS.CREDIT_ID,TPCT.CONTRACT_TYPE
		             ) O
		             LEFT JOIN T_PRJT_CREDIT TPC ON O.CREDIT_ID=TPC.ID AND TPC.STATUS=0
		             LEFT JOIN T_CUST_CUSTOMER TCC ON TPC.CUST_ID=TCC.CUST_ID AND TCC.STATUS=0
		             LEFT JOIN T_PRJT_CREDITSCHEME PRJT ON O.CREDIT_ID=PRJT.CREDIT_ID AND PRJT.STATUS=0
		             LEFT JOIN (SELECT FLAG CONTRACT_TYPE,CODE 
					                     FROM T_DATA_DICTIONARY 
					                    WHERE TYPE=#CONTRACT_TYPE#) TC ON O.CONTRACT_TYPE=TC.CODE
		             LEFT JOIN T_RENT_CONTRACT TRCT ON O.CREDIT_ID=TRCT.PRCD_ID AND TRCT.STATUS=0
		             LEFT JOIN T_RENT_CONTRACTSCHEMA [CONTRACT] ON [CONTRACT].RECT_ID=TRCT.RECT_ID AND [CONTRACT].STATUS=0
					       LEFT JOIN T_PRJT_CREDITSCHEME CREDIT ON CREDIT.CREDIT_ID=O.CREDIT_ID AND CREDIT.STATUS=0
		        WHERE O.REMAIN_MONEY!=0       
	</select>
	
	<insert id="insertAchievementBatchJobData" parameterClass="com.brick.batchjob.to.AchievementBatchJobTo">
				INSERT INTO T_BATCH_JOB_ACHIEVEMENT 
				(ACHIEVEMENT_ID,LEASE_CODE,CREDIT_ID,USER_ID,CUST_NAME,CUST_FROM,CUST_TYPE,CONTRACT_TYPE,RECT_ID,PLEDGE_PRICE,
				 LEASE_PRICE,LEASE_PERIOD,APPLY_MONEY,PAY_MONEY,SIGN_CONTRACT_DATE,PAY_DATE,START_LEASE_DATE,CREATE_ON,FLAG)
				VALUES
				(#achievementId#,#leaseCode#,#creditId#,#userId#,#custName#,#custFrom#,#custType#,#contractType#,#rectId#,
				 #pledgePrice#,#leasePrice#,#leasePeriod#,#applyMoney#,#payMoney#,CONVERT(DATE,#signContractDateDescr#,23),
				 CONVERT(DATETIME,#payDate#,23),CONVERT(DATE,#startLeaseDateDescr#,23),CONVERT(DATE,#createOnDescr#,23),#flag#)
	</insert>
	
	<select id="getAchievementByDept" resultClass="java.util.HashMap">
					SELECT T.DECP_ID DEPT_ID,T.DECP_NAME DEPT_NAME,
			               T.MONTH_TARGET/1000 MONTH_TARGET
		      		  FROM T_REPORT_BONUS T
			         WHERE T.BONUS_YEAR=YEAR(#DATE#)
			           AND T.BONUS_MONTH=MONTH(#DATE#)
		             <isNotEqual property="USER_NODE" compareValue="0">
		               AND
		               EXISTS (
	               		  SELECT 1 
				            FROM T_USER_USER TUU2 
		               LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
		               LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
			               WHERE TUU2.ID=#USER_ID# 
			                 AND DECP.DECP_ID=T.DECP_ID
		               )
					 </isNotEqual>
			           AND T.EMP_ID=-1
	              ORDER BY T.MONTH_TARGET/1000 $SORT$	
	</select>
	
	<select id="getAchievementByUser" resultClass="java.util.HashMap">
					SELECT T.DECP_ID DEPT_ID,T.DECP_NAME DEPT_NAME,EMP_ID,EMP_NAME,
			               T.MONTH_TARGET/1000 MONTH_TARGET,ISNULL(O.CUST_COUNT,0) CUST_COUNT
		      		  FROM T_REPORT_BONUS T
        		 LEFT JOIN (SELECT COUNT(1) CUST_COUNT,[USER_ID] 
	                       	  FROM T_BATCH_JOB_ACHIEVEMENT 
	                         WHERE CONVERT(DATE,CREATE_ON)=CONVERT(DATE,#DATE#)
	                      GROUP BY [USER_ID]) O ON O.[USER_ID]=T.EMP_ID
			         WHERE T.BONUS_YEAR=YEAR(#DATE#)
			           AND T.BONUS_MONTH=MONTH(#DATE#)
               		   AND T.DECP_ID=#DEPT_ID#
		        ORDER BY T.MONTH_TARGET/1000
	</select>
	
	<select id="getAchievementDetail" resultClass="com.brick.batchjob.to.AchievementBatchJobTo">
			SELECT CUST_NAME custName,CUST_FROM custFrom,CONTRACT_TYPE contractType,
			       PLEDGE_PRICE pledgePrice,LEASE_PRICE leasePrice,LEASE_PERIOD leasePeriod,
			       APPLY_MONEY applyMoney,PAY_MONEY payMoney,CONVERT(VARCHAR,SIGN_CONTRACT_DATE) signContractDateDescr,
			       PAY_DATE payDate,CONVERT(VARCHAR,START_LEASE_DATE) startLeaseDateDescr,FLAG
			  FROM T_BATCH_JOB_ACHIEVEMENT
			 WHERE USER_ID=#EMP_ID#
			   AND CONVERT(DATE,CREATE_ON)=CONVERT(DATE,#DATE#)
		  ORDER BY FLAG DESC 
	</select>
</sqlMap>