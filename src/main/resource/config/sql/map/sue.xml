<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="sue">
	<!-- 查询可申请起诉申请单 -->
	<select id="getSueList" parameterClass="map" resultClass="hashmap">
		SELECT
		TRCT.SENSOR_ID AS SENSORID,
		CONVERT(VARCHAR,MIN(TDD.SHOULD_PAYDATE),23 ) AS SHOULDPAYDATE,
		TCCT.CUST_ID AS CUSTID ,
		TCCT.CUST_CODE AS CUSTCODE,
		TRCT.LEASE_CODE AS LEASECODE,
		TRCT.RECT_ID AS RECTID,
		TRCP.RECP_ID AS RECPID,
		TCCT.CUST_NAME AS CUSTNAME,
		MAX(TDD.DUN_DAY) AS DUNDAY,
		TDSUPL.FLAG AS SUPLTRUE,
		TDS.ID AS SUEID,
		TDS.APPLY_USER_ID AS APPLYUSERID,
		TDS.STATE AS STATE,
		U.UPPER_USER AS FIRSTUPUSERID,
		UP.UPPER_USER AS SECONDUPUSERID,
		UUP.UPPER_USER AS MANAGERID,
		T.NAME AS [NAME],
		CASE WHEN T.JOB = 1 THEN
		(SELECT NAME FROM T_USER_USER WHERE STATUS = 0 AND ID = T.UPPER_USER)
		ELSE T.NAME END UPNAME,
		T1.BRAND AS BRAND
		FROM T_DUN_DAILY TDD
		LEFT JOIN T_RENT_COLLECTIONPLAN TRCP ON TDD.RECP_ID=TRCP.RECP_ID AND TRCP.STATUS = 0
		LEFT JOIN T_DATA_DICTIONARY TDSUPL ON TDSUPL.TYPE = '供应商保证' AND TDSUPL.CODE = TRCP.SUPL_TRUE
		LEFT JOIN T_RENT_CONTRACT TRCT ON TDD.RECT_ID = TRCT.RECT_ID AND TRCT.STATUS = 0
		LEFT JOIN T_PRJT_CREDIT PRCD ON TRCT.PRCD_ID = PRCD.ID
		LEFT JOIN T_USER_USER T ON T.ID = TRCT.SENSOR_ID
		LEFT JOIN T_CUST_CUSTOMER TCCT ON TDD.CUST_ID = TCCT.CUST_ID AND TCCT.STATUS = 0
		LEFT JOIN 
			(SELECT RECT_ID,MAX(T.BRAND) BRAND FROM T_RENT_CONTRACTDETAIL T
			WHERE T.STATUS = 0  GROUP BY T.RECT_ID) T1 ON T1.RECT_ID = TRCT.RECT_ID
		LEFT JOIN T_DUN_SUE TDS ON TDS.RECT_ID = TRCT.RECT_ID AND TDS.STATE > 1 AND TDS.STATE &lt; 5
		LEFT JOIN T_USER_USER U ON U.ID = TDS.APPLY_USER_ID
		LEFT JOIN T_USER_USER UP ON UP.ID = U.UPPER_USER
		LEFT JOIN T_USER_USER UUP ON UUP.ID = UP.UPPER_USER
		WHERE TDD.STATUS=0 AND PRCD.FINANCECONTRACT_DATE IS NOT NULL
		AND CONVERT(DATETIME,CONVERT(VARCHAR,TDD.CREATE_DATE,23))=CONVERT(DATETIME,CONVERT(VARCHAR,#dun_date#,23))
		<isNotEmpty prepend="and" property="content">
			(tcct.cust_name like
			'%$content$%' or trct.lease_code like '%$content$%'
			or trcp.recp_code
			like '%$content$%'
			or T1.BRAND like '%$content$%')
		</isNotEmpty>
		<isNotEmpty prepend="and" property="startrange">
  	  		<![CDATA[ dun_day >=#startrange#  ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="endrange">
  	  		<![CDATA[  dun_day  < #endrange#]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="NAME">
  	  		<![CDATA[  T.NAME  LIKE '%$NAME$%']]>
		</isNotEmpty>
		GROUP BY TCCT.CUST_ID,TCCT.CUST_CODE,TRCT.LEASE_CODE,
		TCCT.CUST_NAME,T.UPPER_USER,TRCT.SENSOR_ID,TDSUPL.FLAG,TRCP.RECP_ID,
		TDS.STATE,TDS.ID,TDS.APPLY_USER_ID,U.UPPER_USER,UP.UPPER_USER,UUP.UPPER_USER,
		T.NAME,T.UPPER_USER,T1.BRAND,T.JOB,TRCT.RECT_ID
	</select>

	<!-- 查询所有起诉申请单 -->
	<select id="getAllSueList" parameterClass="map" resultClass="hashmap">
		SELECT
		TRCT.SENSOR_ID AS SENSORID,
		CONVERT(VARCHAR,MIN(TDD.SHOULD_PAYDATE),23 ) AS SHOULDPAYDATE,
		TCCT.CUST_ID AS CUSTID ,
		TCCT.CUST_CODE AS CUSTCODE,
		TRCT.LEASE_CODE AS LEASECODE,
		TRCT.RECT_ID AS RECTID,
		TRCP.RECP_ID AS RECPID,
		TCCT.CUST_NAME AS CUSTNAME,
		MAX(TDD.DUN_DAY) AS DUNDAY,
		TDSUPL.FLAG AS SUPLTRUE,
		TDS.ID AS SUEID,
		TDS.APPLY_USER_ID AS APPLYUSERID,
		TDS.STATE AS STATE,
		TDS.CREATE_DATE AS CREATEDATE,
		U.UPPER_USER AS FIRSTUPUSERID,
		U.NAME AS APPLYUSERNAME,
		UP.UPPER_USER AS SECONDUPUSERID,
		UUP.UPPER_USER AS MANAGERID,
		T.NAME AS [NAME],
		CASE WHEN T.JOB = 1 THEN (SELECT NAME FROM T_USER_USER WHERE STATUS = 0 AND ID = T.UPPER_USER) ELSE T.NAME END UPNAME,
		T1.BRAND AS BRAND
		FROM T_DUN_SUE TDS
		LEFT JOIN T_DUN_DAILY TDD ON TDD.RECT_ID = TDS.RECT_ID AND TDD.STATUS=0
		LEFT JOIN T_RENT_COLLECTIONPLAN TRCP ON TDD.RECP_ID=TRCP.RECP_ID AND TRCP.STATUS = 0
		LEFT JOIN T_DATA_DICTIONARY TDSUPL ON TDSUPL.TYPE = '供应商保证' AND TDSUPL.CODE = TRCP.SUPL_TRUE
		LEFT JOIN T_RENT_CONTRACT TRCT ON TDD.RECT_ID = TRCT.RECT_ID AND TRCT.STATUS = 0
		LEFT JOIN T_PRJT_CREDIT PRCD ON TRCT.PRCD_ID = PRCD.ID
		LEFT JOIN T_USER_USER T ON T.ID = TRCT.SENSOR_ID
		LEFT JOIN T_CUST_CUSTOMER TCCT ON TDD.CUST_ID = TCCT.CUST_ID AND TCCT.STATUS = 0
		LEFT JOIN 
			(SELECT RECT_ID,MAX(T.BRAND) BRAND FROM T_RENT_CONTRACTDETAIL T
			WHERE T.STATUS = 0 GROUP BY T.RECT_ID) T1 ON T1.RECT_ID = TRCT.RECT_ID
		LEFT JOIN T_USER_USER U ON U.ID = TDS.APPLY_USER_ID
		LEFT JOIN T_USER_USER UP ON UP.ID = U.UPPER_USER
		LEFT JOIN T_USER_USER UUP ON UUP.ID = UP.UPPER_USER
		WHERE PRCD.FINANCECONTRACT_DATE IS NOT NULL
		AND CONVERT(DATE,DATEADD(DAY,1,TDD.CREATE_DATE),23)=CONVERT(DATE,TDS.CREATE_DATE,23)
		<!-- AND CONVERT(DATE,TDD.CREATE_DATE,23)=CONVERT(DATE,'2013-11-28',23) -->
		<isNotEmpty prepend="and" property="content">
			(tcct.cust_name like
			'%$content$%' or trct.lease_code like '%$content$%'
			or trcp.recp_code
			like '%$content$%'
			or T1.BRAND like '%$content$%')
		</isNotEmpty>
		<isNotEmpty prepend="and" property="startrange">
				  	  <![CDATA[ dun_day >=#startrange#  ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="endrange">
				  	  <![CDATA[  dun_day  < #endrange#]]>
		</isNotEmpty>
		<isNotEqual prepend="and" property="state" compareValue="0">
				  	  <![CDATA[ TDS.STATE = #state#  ]]>
		</isNotEqual>
		<isNotEmpty prepend="and" property="NAME">
				  	  <![CDATA[  T.NAME  LIKE '%$NAME$%']]>
		</isNotEmpty>
		GROUP BY TCCT.CUST_ID,TCCT.CUST_CODE,TRCT.LEASE_CODE,
		TCCT.CUST_NAME,T.UPPER_USER,TRCT.SENSOR_ID,TDSUPL.FLAG,TRCP.RECP_ID,U.NAME,TDS.CREATE_DATE,
		TDS.STATE,TDS.ID,TDS.APPLY_USER_ID,U.UPPER_USER,UP.UPPER_USER,UUP.UPPER_USER,
		T.NAME,T.UPPER_USER,T1.BRAND,T.JOB,TRCT.RECT_ID
	</select>

	<!-- 根据id获取起诉申请单 -->
	<select id="getSueById" parameterClass="map" resultClass="java.util.HashMap">
		SELECT
		TDS.*,
		U.NAME AS APPLY_USER_NAME,
		U.EMAIL AS APPLY_USER_EMAIL,
		FU.NAME AS FIRST_UP_USER_NAME,
		UP.EMAIL AS FIRST_UP_USER_EMAIL,
		UUP.EMAIL AS SECOND_UP_USER_EMAIL,
		M.EMAIL AS GENERAL_MANAGER_EMAIL,
		SU.NAME AS SECOND_UP_USER_NAME,
		MU.NAME AS GENERAL_MANAGER_NAME
		FROM T_DUN_SUE TDS
		LEFT JOIN T_USER_USER U ON U.ID = TDS.APPLY_USER_ID
		LEFT JOIN T_USER_USER UP ON UP.ID = U.UPPER_USER
		LEFT JOIN T_USER_USER UUP ON UUP.ID = UP.UPPER_USER
		LEFT JOIN T_USER_USER M ON M.ID = UUP.UPPER_USER
		LEFT JOIN T_USER_USER FU ON FU.ID = TDS.FIRST_UP_USER_ID
		LEFT JOIN T_USER_USER SU ON SU.ID = TDS.SECOND_UP_USER_ID
		LEFT JOIN T_USER_USER MU ON MU.ID = TDS.GENERAL_MANAGER_ID
		WHERE TDS.ID = #sueId#
	</select>

	<!-- 新增起诉申请单 -->
	<insert id="insertSue" parameterClass="map">
		INSERT INTO
		T_DUN_SUE(RECT_ID, APPLY_USER_ID, CREATE_DATE, REASONS, STATE)
		VALUES(#sueRectId#, #applyUserId#, GETDATE(), #reasons#, 2)
	</insert>

	<!-- 根据rectId查询申请中的起诉申请单 -->
	<select id="getSueByRectId" parameterClass="map" resultClass="hashmap">
		SELECT TOP 1 * FROM T_DUN_SUE
		WHERE RECT_ID = #sueRectId# AND STATE != 1 AND STATE != 5
		ORDER BY ID DESC
	</select>

	<!-- 修改起诉申请单 -->
	<update id="updateSue" parameterClass="map">
		UPDATE T_DUN_SUE
		SET
		REASONS = #reasons#
		WHERE ID = #sueId#
	</update>

	<!-- 获取用户是否有生成起诉申请单权限（非领导） -->
	<select id="getUserIsManager" parameterClass="map" resultClass="hashmap">
		SELECT ID FROM T_USER_USER U
		WHERE NOT EXISTS(SELECT 1 FROM T_USER_USER WHERE UPPER_USER = U.ID) AND U.ID = #id#
	</select>

	<!-- 审核起诉申请单 -->
	<update id="approvalSue" parameterClass="map">
		UPDATE T_DUN_SUE SET
		<isNotEmpty property="FIRST_UP_USER_ID">
			FIRST_UP_USER_ID = #FIRST_UP_USER_ID#,
		</isNotEmpty>
		<isNotEmpty property="FIRST_UP_USER_MSG">
			FIRST_UP_USER_MSG = #FIRST_UP_USER_MSG#,
		</isNotEmpty>
		<isNotEmpty property="FIRST_UP_USER_DATE">
			FIRST_UP_USER_DATE = #FIRST_UP_USER_DATE#,
		</isNotEmpty>
		<isNotEmpty property="FIRST_UP_USER_STATUS">
			FIRST_UP_USER_STATUS = #FIRST_UP_USER_STATUS#,
		</isNotEmpty>
		<isNotEmpty property="SECOND_UP_USER_ID">
			SECOND_UP_USER_ID = #SECOND_UP_USER_ID#,
		</isNotEmpty>
		<isNotEmpty property="SECOND_UP_USER_MSG">
			SECOND_UP_USER_MSG = #SECOND_UP_USER_MSG#,
		</isNotEmpty>
		<isNotEmpty property="SECOND_UP_USER_DATE">
			SECOND_UP_USER_DATE = #SECOND_UP_USER_DATE#,
		</isNotEmpty>
		<isNotEmpty property="SECOND_UP_USER_STATUS">
			SECOND_UP_USER_STATUS = #SECOND_UP_USER_STATUS#,
		</isNotEmpty>
		<isNotEmpty property="GENERAL_MANAGER_ID">
			GENERAL_MANAGER_ID = #GENERAL_MANAGER_ID#,
		</isNotEmpty>
		<isNotEmpty property="GENERAL_MANAGER_MSG">
			GENERAL_MANAGER_MSG = #GENERAL_MANAGER_MSG#,
		</isNotEmpty>
		<isNotEmpty property="GENERAL_MANAGER_DATE">
			GENERAL_MANAGER_DATE = #GENERAL_MANAGER_DATE#,
		</isNotEmpty>
		<isNotEmpty property="GENERAL_MANAGER_STATUS">
			GENERAL_MANAGER_STATUS = #GENERAL_MANAGER_STATUS#,
		</isNotEmpty>
		STATE = #state#
		WHERE ID = #sueId#
	</update>

	<select id="getLetterContentByRectId" parameterClass="map" resultClass="hashmap">
		SELECT
		TDD.DAILY_ID,
		TDD.RECP_ID,
		TRCT.LEASE_CODE,
		TCCT.CUST_NAME,
		TCCT.CUST_CODE,
		TRCT.RECT_ID,
		TCCT.CORP_WORK_ADDRESS ,
		TCCT.CORP_HEAD_SIGNATURE,
		CONVERT(VARCHAR,MIN(TDD.SHOULD_PAYDATE),23 ) SHOULD_PAYDATE,
		TCCT.CORP_HS_LINK_MODE,
		MAX(TDD.DUN_DAY) DUN_DAY,
		MAX(TDD.PERIOD_NUM) PERIOD_NUM,
		TDD.DUN_MONTHPRICE DUN_MONTHPRICE,
		SUM(TDD.DUN_OWNPRICE) DUN_OWNPRICE,
		SUM(TDD.DUN_RENPRICE) DUN_RENPRICE,
		SUM(TDD.DUN_OTHERPRICE) DUN_OTHERPRICE,
		SUM(TDD.DUN_FINE) DUN_FINE,
		SUM(TDD.DUN_FINEINTEREST) DUN_FINEINTEREST,
		SUM(TDD.DUN_MONTHPRICE)+SUM(TDD.DUN_FINEINTEREST)+SUM(TDD.DUN_FINE) DUN_TOTALPRICE,
		MAX(TDD.RECP_STATE) RECP_STATE,
		PRCD.ID AS CREDIT_ID, TRCT.RECT_ID,
		T.EMAIL AS EMAIL,
		T.NAME AS [NAME],
		UP.EMAIL AS UP_USER_EMAIL,
		TDC.DECP_NAME_CN,
		TDC.DECP_ID,
		TDSUPL.FLAG AS SUPLTRUE,
		CASE WHEN T.JOB = 1 THEN (SELECT EMAIL FROM T_USER_USER WHERE STATUS = 0 AND ID = T.UPPER_USER) ELSE T.EMAIL END UPEMAIL
		FROM T_DUN_DAILY TDD
		LEFT JOIN T_CUST_CUSTOMER TCCT ON TDD.CUST_ID = TCCT.CUST_ID AND TCCT.STATUS = 0
		LEFT JOIN T_RENT_CONTRACT TRCT ON TDD.RECT_ID = TRCT.RECT_ID AND TRCT.STATUS = 0
		LEFT JOIN T_PRJT_CREDIT PRCD ON TRCT.PRCD_ID = PRCD.ID
		LEFT JOIN T_USER_USER T ON T.ID = TRCT.SENSOR_ID
		LEFT JOIN T_USER_USER UP ON T.UPPER_USER = UP.ID
		LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID = T.DEPT_ID AND DEPT.STATUS = 0
		LEFT JOIN T_DEPT_COMPANY TDC ON TDC.DECP_ID=DEPT.DECP_ID
		LEFT JOIN T_RENT_COLLECTIONPLAN TRCP ON TDD.RECP_ID=TRCP.RECP_ID AND TRCP.STATUS = 0
		LEFT JOIN T_DATA_DICTIONARY TDSUPL ON TDSUPL.TYPE = '供应商保证' AND TDSUPL.CODE = TRCP.SUPL_TRUE
		WHERE TDD.STATUS=0 AND PRCD.FINANCECONTRACT_DATE IS NOT NULL AND
		<!-- 申请日期为T_DUN_DAILY表数据前一天23:55分数据 -->
		CONVERT(DATE,TDD.CREATE_DATE+1,23)=CONVERT(DATE,#sueCreateDate#,23)
		AND TRCT.RECT_ID=#rectId#
		GROUP BY TCCT.CORP_HS_LINK_MODE,TCCT.CORP_WORK_ADDRESS,TCCT.CORP_HEAD_SIGNATURE,
		TDD.DAILY_ID, TRCT.RECT_ID,TRCT.LEASE_CODE,TCCT.CUST_NAME,TDC.DECP_NAME_CN,TDC.DECP_ID,
		PRCD.ID,TRCT.RECT_ID,DUN_MONTHPRICE,T.EMAIL,T.NAME,T.UPPER_USER,T.JOB,TDSUPL.FLAG,TDD.RECP_ID,UP.EMAIL,TCCT.CUST_CODE
	</select>
</sqlMap>