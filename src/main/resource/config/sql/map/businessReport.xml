<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="businessReport">

		<!-- 获得当日拨款件数以及当日拨款金额 -->
		<!-- 获得当日拨款金额 -->
		<select id="getPayMoney" resultClass="com.brick.bussinessReport.to.AchievementTo">
		 		SELECT SUM(PAY.PAY_MONEY/1000) payMoney,
			           C.DECP_ID deptId,
			           C.DECP_NAME_CN deptName
			      FROM T_SUPL_PLAYDETIL PAY 
			 LEFT JOIN T_PRJT_CREDIT TPC ON PAY.CREDIT_ID=TPC.ID AND TPC.STATUS=0
			 LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
			 LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
			 LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
			     WHERE PAY.STATE=3 AND PAY.STATUS=0
			       AND CONVERT(DATE,PAY.PAY_DATE)=CONVERT(DATE,GETDATE())
			       AND C.DECP_ID IS NOT NULL
			       AND PAY.BACKSTATE=0
			  GROUP BY C.DECP_ID,C.DECP_NAME_CN
		</select>
		
		<!-- 获得当日拨款件数 不区分首拨款-->
		<select id="getPayCount" resultClass="com.brick.bussinessReport.to.AchievementTo">
			    SELECT COUNT(TPC.ID) payCount,
			           C.DECP_ID deptId,
			           C.DECP_NAME_CN deptName
			      FROM T_PRJT_CREDIT TPC 
			 LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPC.ID AND PAY.STATUS=0
			 LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
			 LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
			 LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
			     WHERE PAY.STATE=3 AND TPC.STATUS=0
			       AND CONVERT(DATE,PAY.PAY_DATE)=CONVERT(DATE,GETDATE())
           		   AND C.DECP_ID IS NOT NULL
           		   AND PAY.BACKSTATE=0
			  GROUP BY C.DECP_ID,C.DECP_NAME_CN
		</select>
		
		<!-- 当日审查通过的案件数 -->
		<select id="getApproveCount" resultClass="com.brick.bussinessReport.to.AchievementTo">
			  SELECT COUNT(TPRC.PRC_ID) approveCount,
			  		 C.DECP_ID deptId,
		             C.DECP_NAME_CN deptName 
		        FROM T_PRJT_RISK_CONTROL TPRC
           LEFT JOIN T_PRJT_CREDIT TPC ON TPRC.CREDIT_ID=TPC.ID
           LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
		   LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
		   LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
		       WHERE TPRC.STATUS=0
		         AND TPRC.STATE=1       
		         AND TPRC.PRC_ID IN (
		                              SELECT T.PRC_ID 
		                                FROM T_PRJT_RISK_CONTROLMEMO T
		                               WHERE T.STATUS=0
		                                 AND CONVERT(DATE,T.CREATE_TIME)=CONVERT(DATE,GETDATE())
		                                 AND T.PRCM_LEVEL IS NULL
		                             )
		         AND C.DECP_ID IS NOT NULL                     
		    GROUP BY C.DECP_ID,C.DECP_NAME_CN                         
		</select>
		
		<!-- 当日送审案件 -->
		<select id="getPendingApproveCount" resultClass="com.brick.bussinessReport.to.AchievementTo">
					SELECT COUNT(DISTINCT TPCO.CREDIT_ID) pendingApproveCount,
			               C.DECP_ID deptId,
			               C.DECP_NAME_CN deptName 
			          FROM T_PRJT_CREDITMEMO TPCO
			     LEFT JOIN T_PRJT_CREDIT TPC ON TPCO.CREDIT_ID=TPC.ID AND TPC.STATUS=0
			     LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
			     LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
			     LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
			    WHERE CONVERT(DATE,TPCO.CREATE_TIME)=CONVERT(DATE,GETDATE())
			      AND TPCO.STATUS=0
			      AND TPC.STATE!=2
			      AND C.DECP_ID IS NOT NULL
			      GROUP BY C.DECP_ID,C.DECP_NAME_CN
		</select>
		
		<!-- 当日入保证金案件 -->
		<select id="getCautionCount" resultClass="com.brick.bussinessReport.to.AchievementTo">
			  SELECT COUNT(TPC.ID) cautionCount,
			              C.DECP_ID deptId,
			              C.DECP_NAME_CN deptName 
			         FROM T_PRJT_CREDIT TPC
			    LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
			    LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
			    LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
			        WHERE TPC.ID IN (
			                          SELECT TRCT.PRCD_ID 
			                            FROM T_RENT_CONTRACT TRCT
			                           WHERE TRCT.RECT_ID IN (
			                                                    SELECT DISTINCT TRCN.RECT_ID
			                                                      FROM T_RENT_COLLECTIONPLAN TRCN
			                                                     WHERE TRCN.STATUS=0
			                                                       AND EXISTS (
			                                                                      SELECT 1 
			                                                                        FROM T_FINA_COLLECTIONBILL TFC
			                                                                       WHERE FICB_ITEM LIKE '%$TYPE$%' <!-- '%保证金%'  -->
			                                                                        AND FICB_TYPE=5 
			                                                                        AND FICB_TYPE=0
			                                                                        AND STATUS=0
			                                                                        AND CONVERT(DATE,TFC.CHECK_DATE)=CONVERT(DATE,GETDATE())
			                                                                        AND TFC.RECP_ID=TRCN.RECP_ID
			                                                                   )
			                                                  )  
			                        )     
			     GROUP BY C.DECP_ID,C.DECP_NAME_CN
		</select>
		
		<!-- 获得当前在审案件  当日查询正在待评审中的案件-->
		<select id="getAuditCount" resultClass="com.brick.bussinessReport.to.AchievementTo">
				SELECT SUM(O.auditCount) auditCount,
				       O.deptId deptId,
				       O.deptName deptName
				  FROM
				    (<!-- 初级评审 -->
				       SELECT COUNT(TPC.ID) auditCount,
				              C.DECP_ID deptId,
				              C.DECP_NAME_CN deptName
				    	   FROM T_PRJT_CREDIT TPC
					  LEFT JOIN T_PRJT_CREDITMEMO TPCO ON TPC.ID=TPCO.CREDIT_ID AND TPCO.STATE=1 AND TPCO.STATUS=0
					  LEFT JOIN T_PRJT_RISK_CONTROL TPRC ON TPRC.PRC_ID=TPCO.TPRC_ID
				      LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
				      LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
				      LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
					      WHERE TPC.STATE=1 
				          AND TPC.STATUS=0 
				          AND TPC.WIND_STATE IS NULL 
				          AND TPRC.STATE IS NULL
				          AND C.DECP_ID IS NOT NULL
				     GROUP BY C.DECP_ID,C.DECP_NAME_CN
				        UNION ALL<!-- 1级评审 -->
				      SELECT COUNT(TPRCL.CREDIT_ID) auditCount,
				             C.DECP_ID deptId,
				             C.DECP_NAME_CN deptName
							  FROM T_PRJT_RISK_CONTROL TPRCL
				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
				   LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
				   LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
				   LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
							 WHERE TPRCL.STATUS=0 
				         AND TPRCL.PRC_NODE>=0 
				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;1 AND STATE!=0) 			 
						 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=0
						 AND C.DECP_ID IS NOT NULL
				    GROUP BY C.DECP_ID,C.DECP_NAME_CN
				        UNION ALL<!-- 2级评审 -->
					        SELECT COUNT(TPRCL.CREDIT_ID) auditCount,
					               C.DECP_ID deptId,
					               C.DECP_NAME_CN deptName
							  FROM T_PRJT_RISK_CONTROL TPRCL
				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
				   LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
				   LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
				   LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
							 WHERE TPRCL.STATUS=0 
				               AND TPRCL.PRC_NODE>=1 
				               AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;2 AND STATE!=0) 			 
							   AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=1
							   AND C.DECP_ID IS NOT NULL
				          GROUP BY C.DECP_ID,C.DECP_NAME_CN
				        UNION ALL<!-- 3级评审 -->
				      SELECT COUNT(TPRCL.CREDIT_ID) auditCount,
				             C.DECP_ID deptId,
				             C.DECP_NAME_CN deptName
							  FROM T_PRJT_RISK_CONTROL TPRCL
				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
				   LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
				   LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
				   LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
							 WHERE TPRCL.STATUS=0 
			         		   AND TPRCL.PRC_NODE>=2 
				               AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;3 AND STATE!=0) 			 
							   AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=2
							   AND C.DECP_ID IS NOT NULL
				          GROUP BY C.DECP_ID,C.DECP_NAME_CN
				        UNION ALL<!-- 4级评审 -->
				      SELECT COUNT(TPRCL.CREDIT_ID) auditCount,
				             C.DECP_ID deptId,
				             C.DECP_NAME_CN deptName
							  FROM T_PRJT_RISK_CONTROL TPRCL
				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
				   LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
				   LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
				   LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
							 WHERE TPRCL.STATUS=0 
				               AND TPRCL.PRC_NODE>=3 
				         	   AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;4 AND STATE!=0) 			 
							   AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=3
							   AND C.DECP_ID IS NOT NULL
			    		  GROUP BY C.DECP_ID,C.DECP_NAME_CN
				    ) O
				  GROUP BY O.deptId,O.deptName
		</select>
		
		<!-- 当前已核准案件, 当日查询,并且在有效期内的已核准未拨款金额,件数 -->
		<select id="getHasApproveCountAmount" resultClass="com.brick.bussinessReport.to.AchievementTo">
				      SELECT COUNT(TPC.ID) hasApproveCount,
				             ROUND(
				             SUM(
				             CASE WHEN PRJT.APPRORIATEMON IS NULL
				      					  THEN 0
				      					  ELSE PRJT.APPRORIATEMON/1000
				      					   END +
				      			 CASE WHEN PRJT1.APPRORIATEMON IS NULL
				      					  THEN 0
				      					  ELSE PRJT1.APPRORIATEMON/1000
				      					   END
				                 )
				                   ,0) hasApproveAmount,
				             C.DECP_ID deptId,C.DECP_NAME_CN deptName     
								FROM T_PRJT_CREDIT TPC
				   LEFT JOIN T_USER_USER TUSER ON TPC.SENSOR_ID=TUSER.ID
				   LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
				   LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
				   LEFT JOIN (
				                  SELECT T.CREDIT_ID,
				    					           SUM(T.PAY_MONEY) PAY_MONEY,
				    					           MIN(T.PAY_DATE) PAY_DATE
				    				        FROM T_SUPL_PLAYDETIL T 
				    				       WHERE BACKSTATE='0' 
				    					       AND STATUS=0
				    				  	     AND STATE=3 
				    			      GROUP BY T.CREDIT_ID
				                
				              ) TT ON TPC.ID=TT.CREDIT_ID
				        	    LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT ON TPC.ID=PRJT.CREDIT_ID AND PRJT.STATUS=0 AND PRJT.TYPE=1 <!-- Type=1 是指交机后的拨款 -->        	    
				        	    LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT1 ON TPC.ID=PRJT1.CREDIT_ID AND PRJT1.STATUS=0 AND PRJT1.TYPE=0 <!-- Type=0 是指交机前的拨款 -->        	    
									WHERE TPC.STATUS=0 
				          			  AND (TPC.WIND_STATE=1 OR TPC.WIND_STATE=2)  				
					   				  AND (TPC.FINANCECONTRACT_DATE IS NULL) 
					          		  AND (TT.PAY_MONEY&lt;=0 OR TT.PAY_MONEY IS NULL)
									  AND DATEDIFF(DAY,TPC.WIND_RESULT_DATE,GETDATE())&lt;=TPC.VALID_DAY
									  AND C.DECP_ID IS NOT NULL
					             GROUP BY C.DECP_ID,C.DECP_NAME_CN
		</select>
		
		<!-- 本月总拨款案件,金额 -->
		<!-- 本月总拨款(包含尾款) -->
		<select id="getAchievementMoney" resultClass="com.brick.bussinessReport.to.AchievementTo">
	                      SELECT ROUND(SUM(PAY.PAY_MONEY)/1000,2) achievementMoney,
			                     C.DECP_ID deptId,
			                     C.DECP_NAME_CN deptName
			                FROM T_SUPL_PLAYDETIL PAY
			           LEFT JOIN T_PRJT_CREDIT TPC ON PAY.CREDIT_ID=TPC.ID AND TPC.STATUS=0
			           LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
			           LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
			           LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
			               WHERE PAY.STATUS=0
                       		 AND CONVERT(DATE,PAY.PAY_DATE) BETWEEN CONVERT(DATE,#startTime#) AND CONVERT(DATE,#endTime#)
                        	 AND C.DECP_ID IS NOT NULL
                        	 AND PAY.BACKSTATE=0	 
			            GROUP BY C.DECP_ID,C.DECP_NAME_CN
		</select>
		<!-- 本月总件数(不包含尾款) -->
		<select id="getAchievementCount" resultClass="com.brick.bussinessReport.to.AchievementTo">
			            SELECT COUNT(O.achievementCount) achievementCount,
				               O.deptId deptId,
				               O.deptName deptName
				          FROM
				                    (
				                         SELECT COUNT(TPC.ID) achievementCount,
		    			                        C.DECP_ID deptId,
		    			                        C.DECP_NAME_CN deptName,
				                                TPC.ID
				    			                FROM T_PRJT_CREDIT TPC
				    			           LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPC.ID AND PAY.STATUS=0
				    			           LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
				    			           LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
				    			           LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
				    			               WHERE TPC.STATUS=0
				                      		 	 AND CONVERT(DATE,PAY.PAY_DATE) BETWEEN CONVERT(DATE,#startTime#) AND CONVERT(DATE,#endTime#)
				                           	 	 AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)=CONVERT(DATE,PAY.PAY_DATE)
				                           	 	 AND C.DECP_ID IS NOT NULL
				                           	 	 AND PAY.BACKSTATE=0
				    			            GROUP BY C.DECP_ID,C.DECP_NAME_CN,TPC.ID
				                     ) O
				                     GROUP BY O.deptId,O.deptName
		</select>
		<!-- 获得当月尾款金额,件数 -->
		<select id="getLastAchievementCountMoney" resultClass="com.brick.bussinessReport.to.AchievementTo">
                   		  SELECT COUNT(TPC.ID) lastAchievementCount,
                       			 SUM(PAY.PAY_MONEY)/1000 lastAchievementMoney,
			                     C.DECP_ID deptId,
			                     C.DECP_NAME_CN deptName
			                FROM T_PRJT_CREDIT TPC
			           LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPC.ID AND PAY.STATUS=0
			           LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
			           LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
			           LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
			               WHERE TPC.STATUS=0
                		 	 AND CONVERT(DATE,PAY.PAY_DATE) BETWEEN CONVERT(DATE,#startTime#) AND CONVERT(DATE,#endTime#)
                   		 	 AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)!=CONVERT(DATE,PAY.PAY_DATE)
                   		 	 AND C.DECP_ID IS NOT NULL
                   		 	 AND PAY.BACKSTATE=0
			            GROUP BY C.DECP_ID,C.DECP_NAME_CN
		</select>
		
		<select id="getFinanceDateInOneDayCount" resultClass="com.brick.bussinessReport.to.AchievementTo">
				         SELECT COUNT(TPC.ID)-1 lastAchievementCount,
  			                    C.DECP_ID deptId,
   			                    C.DECP_NAME_CN deptName,
                                TPC.ID creditId
    			                FROM T_PRJT_CREDIT TPC
    			           LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPC.ID AND PAY.STATUS=0
    			           LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
    			           LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
    			           LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
    			               WHERE TPC.STATUS=0
                      		 	 AND MONTH(PAY.PAY_DATE)=MONTH(GETDATE())
                      		 	 AND YEAR(PAY.PAY_DATE)=YEAR(GETDATE())
                           	 	 AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)=CONVERT(DATE,PAY.PAY_DATE)
                           	 	 AND C.DECP_ID IS NOT NULL
                           	 	 AND PAY.BACKSTATE=0
    			            GROUP BY C.DECP_ID,C.DECP_NAME_CN,TPC.ID
                      		  HAVING COUNT(TPC.ID)>1
		</select>
		
		<select id="getFinanceDateInOneDayMoney" resultClass="com.brick.bussinessReport.to.AchievementTo">
				    SELECT ROUND(SUM(PAY.PAY_MONEY)/1000,2) lastAchievementMoney,
				           C.DECP_ID deptId,
				           C.DECP_NAME_CN deptName
				      FROM T_SUPL_PLAYDETIL PAY 
				 LEFT JOIN T_PRJT_CREDIT TPC ON PAY.CREDIT_ID=TPC.ID AND TPC.STATUS=0
				 LEFT JOIN T_USER_USER TUSER ON TPC.ORG_SENSOR_ID=TUSER.ID
				 LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
				 LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
				     WHERE PAY.ID NOT IN
				             (
				             SELECT TOP 1 ID 
				               FROM T_SUPL_PLAYDETIL 
				              WHERE CREDIT_ID=#creditId#
				              ORDER BY PAY_DATE
				              )
				       AND CREDIT_ID=#creditId#
				       AND PAY.BACKSTATE=0
				       GROUP BY C.DECP_ID,C.DECP_NAME_CN
		</select>
		
		<!-- 获得隔日工作日 -->
		<select id="getNextWorkDay" resultClass="com.brick.bussinessReport.to.AchievementTo">
				SELECT DAY_TYPE dayType,CONVERT(VARCHAR,DATE,23) date FROM T_DAY_TYPE WHERE CONVERT(DATE,DATE)=CONVERT(DATE,#DATE#)
		</select>
		
		<!-- 获得隔日拨款金额 -->
		<select id="getNextDayPayMoney" resultClass="com.brick.bussinessReport.to.AchievementTo">
	          		SELECT SUM(PAY.PAY_MONEY/1000) nextDayPayMoney,
				           C.DECP_ID deptId,
				           C.DECP_NAME_CN deptName
				      FROM T_SUPL_PLAYDETIL PAY 
				 LEFT JOIN T_PRJT_CREDIT TPC ON PAY.CREDIT_ID=TPC.ID AND TPC.STATUS=0
				 LEFT JOIN T_USER_USER TUSER ON TPC.SENSOR_ID=TUSER.ID
				 LEFT JOIN T_DEPT_DEPARTMENT P ON TUSER.DEPT_ID=P.ID AND P.STATUS=0
				 LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P.DECP_ID AND C.STATUS=0
				     WHERE PAY.STATUS=0
				       AND (CONVERT(DATE,PAY.PAY_DATE)=CONVERT(DATE,'1900-1-1') OR PAY.PAY_DATE IS NULL)
	             	   AND CONVERT(DATE,PAY.EXPECTEDDATE)&lt;=CONVERT(DATE,#DATE#)
	             	   AND PAY.DEPARTMENTSTATUS=1 AND PAY.EXAMSTATUS=1 AND PAY.FINANCIALSTATUS=1
	             	   AND C.DECP_ID IS NOT NULL
	             	   AND PAY.BACKSTATE=0
				  GROUP BY C.DECP_ID,C.DECP_NAME_CN
		</select>
		
		<!-- 本月任务 -->
		<select id="getTargetMoney" resultClass="com.brick.bussinessReport.to.AchievementTo">
						 SELECT SUM(TAA.EMPL_ACHIEVEMENT) targetMoney,
				                CMPY.DECP_ID deptId,CMPY.DECP_NAME_CN deptName 
						        FROM T_USER_ACHIEVEMENT TAA 
						   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=YEAR(GETDATE())) 
						         AND T.JOB='1' <!-- 1意思指业务员 -->
						   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
						   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
						       WHERE TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
		                 		 AND TAA.EMPL_MONTH=CONVERT(VARCHAR,MONTH(GETDATE()))
						         AND TAA.STATUS=0
						         AND CMPY.DECP_ID IS NOT NULL
						    GROUP BY TAA.EMPL_MONTH,CMPY.DECP_ID,CMPY.DECP_NAME_CN
		</select>
		
		<insert id="insertData" parameterClass="com.brick.bussinessReport.to.AchievementTo">
				INSERT INTO T_ACHIEVEMENT_CASE
				(ACHIEVEMENT_ID,DEPT_ID,DEPT_NAME,PAY_COUNT,PAY_MONEY,APPROVE_COUNT,PENDING_APPROVE_COUNT,CAUTION_COUNT,AUDIT_COUNT,HAS_APPROVE_COUNT,
				 HAS_APPROVE_AMOUNT,ACHIEVEMENT_COUNT,ACHIEVEMENT_MONEY,TARGET_MONEY,CREATE_ON,STATUS,LAST_ACHIEVEMENT_COUNT,LAST_ACHIEVEMENT_MONEY,NEXT_DAY_PAY_MONEY)
				VALUES
				(#achievementId#,#deptId#,#deptName#,#payCount#,#payMoney#,#approveCount#,#pendingApproveCount#,#cautionCount#,#auditCount#,#hasApproveCount#,
				 #hasApproveAmount#,#achievementCount#,#achievementMoney#,#targetMoney#,GETDATE(),0,#lastAchievementCount#,ROUND(#lastAchievementMoney#,2),#nextDayPayMoney#)
		</insert>
		
		<select id="query" resultClass="com.brick.bussinessReport.to.AchievementTo">
				SELECT DEPT_ID deptId,DEPT_NAME deptName,PAY_COUNT payCount,
					   PAY_MONEY payMoney,APPROVE_COUNT approveCount,PENDING_APPROVE_COUNT pendingApproveCount,
					   CAUTION_COUNT cautionCount,AUDIT_COUNT auditCount,HAS_APPROVE_COUNT hasApproveCount,HAS_APPROVE_AMOUNT hasApproveAmount,
					   ACHIEVEMENT_COUNT achievementCount,ACHIEVEMENT_MONEY achievementMoney,TARGET_MONEY targetMoney,
					   LAST_ACHIEVEMENT_COUNT lastAchievementCount,LAST_ACHIEVEMENT_MONEY lastAchievementMoney,
					   case when TARGET_MONEY > 0 then ROUND(ACHIEVEMENT_MONEY/TARGET_MONEY*100,2) else 0 end as achievement,
					   NEXT_DAY_PAY_MONEY nextDayPayMoney
				  FROM T_ACHIEVEMENT_CASE TAC
			 LEFT JOIN T_DEPT_COMPANY TDC ON TDC.DECP_ID=TAC.DEPT_ID AND TDC.STATUS=0	  
			  	 WHERE TAC.STATUS=0
			  	   AND CONVERT(DATE,CREATE_ON)=CONVERT(DATE,#DATE#)
		  	   <isNotEmpty property="DEPT_ID">
		  	   	   AND DEPT_ID=#DEPT_ID#
		  	   </isNotEmpty>
		  	   	<isNotEmpty property="isCar">
		  	   	   <isEqual prepend="AND" property="isCar" compareValue="no">
		  	   	       DEPT_NAME not like '%乘用车%'
		  	   	   </isEqual>
		  	   	   <isEqual prepend="AND" property="isCar" compareValue="yes">
		  	   	       DEPT_NAME  like '%乘用车%'
		  	   	   </isEqual>
		  	   </isNotEmpty>
		  	   
		  	   
		  	   	   ORDER BY [ORDER]
		</select>
		
		<select id="getAvgPayMoney" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
	          SELECT SUM(TSP.PAY_MONEY) payMoney,
	                   COUNT(TPC.ID) payCount,
	                   ROUND(SUM(TSP.PAY_MONEY)/COUNT(TPC.ID),0) avgMoney,
	                   DECP.DECP_ID deptId,
	                   DECP.DECP_NAME_CN deptName,
	                   MONTH(TPC.FINANCECONTRACT_DATE) payMonth,
                 CASE WHEN MONTH(GETDATE())=1 
	                  THEN YEAR(GETDATE())-1
	                  ELSE YEAR(GETDATE())
	                   END payYear
	              FROM T_PRJT_CREDIT TPC 
	         LEFT JOIN (
                         SELECT T4.CREDIT_ID,MIN(TSP.PAY_DATE) PAY_DATE,
                                 MAX(ROUND(ISNULL(T4.LEASE_TOPRIC,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_MCTOAG,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_AG,0),0,1)) PAY_MONEY
                            FROM T_PRJT_CREDITSCHEME  T4
                       LEFT JOIN T_SUPL_PLAYDETIL TSP ON TSP.STATUS=0 AND T4.CREDIT_ID=TSP.CREDIT_ID 
                                 AND TSP.DEPARTMENTSTATUS!=2 AND TSP.EXAMSTATUS!=2 AND TSP.FINANCIALSTATUS!=2
                           WHERE TSP.PAY_DATE IS NOT NULL AND CONVERT(DATE,TSP.PAY_DATE)!=CONVERT(DATE,'1900/1/1')
                        GROUP BY T4.CREDIT_ID
                      ) TSP ON TPC.ID=TSP.CREDIT_ID
	         LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.ORG_SENSOR_ID
	         LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
	         LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0 
	             WHERE TPC.FINANCECONTRACT_DATE IS NOT NULL 
	               AND YEAR(TPC.FINANCECONTRACT_DATE)=
             CASE WHEN MONTH(GETDATE())=1 
                  THEN YEAR(GETDATE())-1
                  ELSE YEAR(GETDATE())
                   END
	               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)=CONVERT(DATE,TSP.PAY_DATE)               
	          GROUP BY DECP.DECP_ID,DECP.DECP_NAME_CN,MONTH(TPC.FINANCECONTRACT_DATE)
		</select>
				
		<select id="getAvgPayMoneyOfCurrentMonth" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
				SELECT ISNULL(SUM(TSP.PAY_MONEY),0) payMoney,
	                   COUNT(TPC.ID) payCount,
	                   ISNULL(ROUND(SUM(TSP.PAY_MONEY)/COUNT(TPC.ID),0),0) avgMoney,
	                   DECP.DECP_ID deptId,
	                   DECP.DECP_NAME_CN deptName,
	                   MONTH(GETDATE()) payMonth,
	                   YEAR(GETDATE()) payYear,
	                   DECP.[ORDER]
	              FROM T_PRJT_CREDIT TPC 
	         LEFT JOIN (
                          SELECT T4.CREDIT_ID,MIN(TSP.PAY_DATE) PAY_DATE,
                                 MAX(ROUND(ISNULL(T4.LEASE_TOPRIC,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_MCTOAG,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_AG,0),0,1)) PAY_MONEY
                            FROM T_PRJT_CREDITSCHEME  T4
                       LEFT JOIN T_SUPL_PLAYDETIL TSP ON TSP.STATUS=0 AND T4.CREDIT_ID=TSP.CREDIT_ID 
                                 AND TSP.DEPARTMENTSTATUS!=2 AND TSP.EXAMSTATUS!=2 AND TSP.FINANCIALSTATUS!=2
                           WHERE TSP.PAY_DATE IS NOT NULL AND CONVERT(DATE,TSP.PAY_DATE)!=CONVERT(DATE,'1900/1/1')
                        GROUP BY T4.CREDIT_ID
                      ) TSP ON TPC.ID=TSP.CREDIT_ID
	         LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID
	         LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
	         LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0 
	             WHERE TPC.FINANCECONTRACT_DATE IS NOT NULL 
	               AND YEAR(TPC.FINANCECONTRACT_DATE)=YEAR(GETDATE())
	               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)=CONVERT(DATE,TSP.PAY_DATE)
	               AND MONTH(TPC.FINANCECONTRACT_DATE)=MONTH(GETDATE())
	               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)&lt;=CONVERT(DATE,#DATE#)
               <isNotEmpty property="DEPT_ID">
		           AND DECP.DECP_ID=#DEPT_ID#
	           </isNotEmpty> 
	          GROUP BY DECP.DECP_ID,DECP.DECP_NAME_CN,DECP.[ORDER]
	          ORDER BY DECP.[ORDER]
		</select>
		
		<select id="getAvgPayMoneyOfCurrentMonthTotal" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
				SELECT SUM(O.payMoney) payMoney, 
				       SUM(O.payCount) payCount, 
				       CASE WHEN SUM(O.payCount)=0 THEN 0 ELSE
				       ISNULL(ROUND(SUM(O.payMoney)/SUM(O.payCount),0),0) END avgMoney,
				       O.payMonth,O.payYear
				  FROM
						(
								SELECT SUM(PAY_MONEY) payMoney,
								       COUNT(1) payCount,
								       MONTH(GETDATE()) payMonth,
								       YEAR(GETDATE()) payYear
								 FROM T_LOAN_CASE 
							    WHERE STATUS=0 
							      AND LOAN_MODE=3 
							      AND CASE_STATUS_ID=2 
							      AND YEAR(PAY_DATE)=YEAR(CONVERT(DATE,#DATE#))
							      AND MONTH(PAY_DATE)=MONTH(CONVERT(DATE,#DATE#))
								UNION ALL
								SELECT ISNULL(SUM(TSP.PAY_MONEY),0) payMoney,
					                   COUNT(TPC.ID) payCount,
					                   <!--ISNULL(ROUND((SUM(TSP.PAY_MONEY))/(COUNT(TPC.ID)),0),0) avgMoney,-->
					                   MONTH(GETDATE()) payMonth,
					                   YEAR(GETDATE()) payYear
					              FROM T_PRJT_CREDIT TPC 
					         LEFT JOIN (
				                          SELECT T4.CREDIT_ID,MIN(TSP.PAY_DATE) PAY_DATE,
				                                 MAX(ROUND(ISNULL(T4.LEASE_TOPRIC,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_MCTOAG,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_AG,0),0,1)) PAY_MONEY
				                            FROM T_PRJT_CREDITSCHEME  T4
				                       LEFT JOIN T_SUPL_PLAYDETIL TSP ON TSP.STATUS=0 AND T4.CREDIT_ID=TSP.CREDIT_ID 
				                                 AND TSP.DEPARTMENTSTATUS!=2 AND TSP.EXAMSTATUS!=2 AND TSP.FINANCIALSTATUS!=2
				                           WHERE TSP.PAY_DATE IS NOT NULL AND CONVERT(DATE,TSP.PAY_DATE)!=CONVERT(DATE,'1900/1/1')
				                        GROUP BY T4.CREDIT_ID
				                      ) TSP ON TPC.ID=TSP.CREDIT_ID
					         LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID
					         LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
					         LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0 
					             WHERE TPC.FINANCECONTRACT_DATE IS NOT NULL 
					               AND YEAR(TPC.FINANCECONTRACT_DATE)=YEAR(CONVERT(DATE,#DATE#))
					               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)=CONVERT(DATE,TSP.PAY_DATE)
					               AND MONTH(TPC.FINANCECONTRACT_DATE)=MONTH(CONVERT(DATE,#DATE#))
					               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)&lt;=CONVERT(DATE,#DATE#)
				               <isNotEmpty property="DEPT_ID">
						           AND DECP.DECP_ID=#DEPT_ID#
					           </isNotEmpty> 
					     ) O
					     GROUP BY O.payMonth,O.payYear
		</select>
		
		<select id="getAvgPayMoneyOfCurrentMonthTotalCar" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
				SELECT SUM(O.payMoney) payMoney, 
				       SUM(O.payCount) payCount,
				       CASE WHEN SUM(O.payCount)=0 THEN 0
				       ELSE ISNULL(ROUND(SUM(O.payMoney)/SUM(O.payCount),0),0) END avgMoney,
				       O.payMonth,O.payYear
				  FROM
						(
								SELECT SUM(PAY_MONEY) payMoney,
								       COUNT(1) payCount,
								       MONTH(CONVERT(DATE,#DATE#)) payMonth,
								       YEAR(CONVERT(DATE,#DATE#)) payYear
								 FROM T_LOAN_CASE 
							    WHERE STATUS=0 
							      AND LOAN_MODE=3 
							      AND CASE_STATUS_ID=2 
							      AND YEAR(PAY_DATE)=YEAR(CONVERT(DATE,#DATE#))
							      AND MONTH(PAY_DATE)=MONTH(CONVERT(DATE,#DATE#))
								UNION ALL
								SELECT ISNULL(SUM(TSP.PAY_MONEY),0) payMoney,
					                   COUNT(TPC.ID) payCount,
					                   <!--ISNULL(ROUND((SUM(TSP.PAY_MONEY))/(COUNT(TPC.ID)),0),0) avgMoney,-->
					                   MONTH(CONVERT(DATE,#DATE#)) payMonth,
					                   YEAR(CONVERT(DATE,#DATE#)) payYear
					              FROM T_PRJT_CREDIT TPC 
					         LEFT JOIN (
				                          SELECT T4.CREDIT_ID,MIN(TSP.PAY_DATE) PAY_DATE,
				                                 MAX(ROUND(ISNULL(T4.LEASE_TOPRIC,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_MCTOAG,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_AG,0),0,1)) PAY_MONEY
				                            FROM T_PRJT_CREDITSCHEME  T4
				                       LEFT JOIN T_SUPL_PLAYDETIL TSP ON TSP.STATUS=0 AND T4.CREDIT_ID=TSP.CREDIT_ID 
				                                 AND TSP.DEPARTMENTSTATUS!=2 AND TSP.EXAMSTATUS!=2 AND TSP.FINANCIALSTATUS!=2
				                           WHERE TSP.PAY_DATE IS NOT NULL AND CONVERT(DATE,TSP.PAY_DATE)!=CONVERT(DATE,'1900/1/1')
				                        GROUP BY T4.CREDIT_ID
				                      ) TSP ON TPC.ID=TSP.CREDIT_ID
					         LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID
					         LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
					         LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0 
					             WHERE TPC.FINANCECONTRACT_DATE IS NOT NULL 
					               AND YEAR(TPC.FINANCECONTRACT_DATE)=YEAR(CONVERT(DATE,#DATE#))
					               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)=CONVERT(DATE,TSP.PAY_DATE)
					               AND MONTH(TPC.FINANCECONTRACT_DATE)=MONTH(CONVERT(DATE,#DATE#))
					               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)&lt;=CONVERT(DATE,#DATE#)
					               AND TPC.PRODUCTION_TYPE=3
				               <isNotEmpty property="DEPT_ID">
						           AND DECP.DECP_ID=#DEPT_ID#
					           </isNotEmpty> 
					     ) O
					     GROUP BY O.payMonth,O.payYear
		</select>
		
		<select id="getAvgPayMoneyOfCurrentMonthTotalEqu" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
				SELECT ISNULL(SUM(TSP.PAY_MONEY),0) payMoney,
	                   COUNT(TPC.ID) payCount,
	                   ISNULL(ROUND((SUM(TSP.PAY_MONEY))/(COUNT(TPC.ID)),0),0) avgMoney,
	                   MONTH(CONVERT(DATE,#DATE#)) payMonth,
	                   YEAR(CONVERT(DATE,#DATE#)) payYear
	              FROM T_PRJT_CREDIT TPC 
	         LEFT JOIN (
                          SELECT T4.CREDIT_ID,MIN(TSP.PAY_DATE) PAY_DATE,
                                 MAX(ROUND(ISNULL(T4.LEASE_TOPRIC,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_MCTOAG,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_AG,0),0,1)) PAY_MONEY
                            FROM T_PRJT_CREDITSCHEME  T4
                       LEFT JOIN T_SUPL_PLAYDETIL TSP ON TSP.STATUS=0 AND T4.CREDIT_ID=TSP.CREDIT_ID 
                                 AND TSP.DEPARTMENTSTATUS!=2 AND TSP.EXAMSTATUS!=2 AND TSP.FINANCIALSTATUS!=2
                           WHERE TSP.PAY_DATE IS NOT NULL AND CONVERT(DATE,TSP.PAY_DATE)!=CONVERT(DATE,'1900/1/1')
                        GROUP BY T4.CREDIT_ID
                      ) TSP ON TPC.ID=TSP.CREDIT_ID
	         LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID
	         LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
	         LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0 
	             WHERE TPC.FINANCECONTRACT_DATE IS NOT NULL 
	               AND YEAR(TPC.FINANCECONTRACT_DATE)=YEAR(CONVERT(DATE,#DATE#))
	               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)=CONVERT(DATE,TSP.PAY_DATE)
	               AND MONTH(TPC.FINANCECONTRACT_DATE)=MONTH(CONVERT(DATE,#DATE#))
	               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)&lt;=CONVERT(DATE,#DATE#)
	               AND TPC.PRODUCTION_TYPE=1
               <isNotEmpty property="DEPT_ID">
		           AND DECP.DECP_ID=#DEPT_ID#
	           </isNotEmpty> 
		</select>
		
		<select id="getAvgPayMoneyOfCurrentMonthTotalMotor" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
				SELECT ISNULL(SUM(TSP.PAY_MONEY),0) payMoney,
	                   COUNT(TPC.ID) payCount,
	                   ISNULL(ROUND((SUM(TSP.PAY_MONEY))/(COUNT(TPC.ID)),0),0) avgMoney,
	                   MONTH(CONVERT(DATE,#DATE#)) payMonth,
	                   YEAR(CONVERT(DATE,#DATE#)) payYear
	              FROM T_PRJT_CREDIT TPC 
	         LEFT JOIN (
                          SELECT T4.CREDIT_ID,MIN(TSP.PAY_DATE) PAY_DATE,
                                 MAX(ROUND(ISNULL(T4.LEASE_TOPRIC,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_MCTOAG,0),0,1)-ROUND(ISNULL(T4.PLEDGE_ENTER_AG,0),0,1)) PAY_MONEY
                            FROM T_PRJT_CREDITSCHEME  T4
                       LEFT JOIN T_SUPL_PLAYDETIL TSP ON TSP.STATUS=0 AND T4.CREDIT_ID=TSP.CREDIT_ID 
                                 AND TSP.DEPARTMENTSTATUS!=2 AND TSP.EXAMSTATUS!=2 AND TSP.FINANCIALSTATUS!=2
                           WHERE TSP.PAY_DATE IS NOT NULL AND CONVERT(DATE,TSP.PAY_DATE)!=CONVERT(DATE,'1900/1/1')
                        GROUP BY T4.CREDIT_ID
                      ) TSP ON TPC.ID=TSP.CREDIT_ID
	         LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID
	         LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
	         LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0 
	             WHERE TPC.FINANCECONTRACT_DATE IS NOT NULL 
	               AND YEAR(TPC.FINANCECONTRACT_DATE)=YEAR(CONVERT(DATE,#DATE#))
	               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)=CONVERT(DATE,TSP.PAY_DATE)
	               AND MONTH(TPC.FINANCECONTRACT_DATE)=MONTH(CONVERT(DATE,#DATE#))
	               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)&lt;=CONVERT(DATE,#DATE#)
	               AND TPC.PRODUCTION_TYPE=2
               <isNotEmpty property="DEPT_ID">
		           AND DECP.DECP_ID=#DEPT_ID#
	           </isNotEmpty> 
		</select>
		
		<insert id="insertAvgPayMoney" parameterClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
				INSERT INTO T_AVG_PAY_MONEY
				(AVG_PAY_MONEY_ID,DEPT_ID,DEPT_NAME,PAY_YEAR,CREATE_ON,
				 PAY_MONEY_1,AVG_MONEY_1,PAY_COUNT_1,PAY_MONEY_2,AVG_MONEY_2,PAY_COUNT_2,PAY_MONEY_3,AVG_MONEY_3,PAY_COUNT_3,
				 PAY_MONEY_4,AVG_MONEY_4,PAY_COUNT_4,PAY_MONEY_5,AVG_MONEY_5,PAY_COUNT_5,PAY_MONEY_6,AVG_MONEY_6,PAY_COUNT_6,
				 PAY_MONEY_7,AVG_MONEY_7,PAY_COUNT_7,PAY_MONEY_8,AVG_MONEY_8,PAY_COUNT_8,PAY_MONEY_9,AVG_MONEY_9,PAY_COUNT_9,
				 PAY_MONEY_10,AVG_MONEY_10,PAY_COUNT_10,PAY_MONEY_11,AVG_MONEY_11,PAY_COUNT_11,PAY_MONEY_12,AVG_MONEY_12,PAY_COUNT_12)
				VALUES
				(#avgPayMoneyId#,#deptId#,#deptName#,#payYear#,GETDATE(),
				 #payMoney_1#,#avgMoney_1#,#payCount_1#,#payMoney_2#,#avgMoney_2#,#payCount_2#,#payMoney_3#,#avgMoney_3#,#payCount_3#,
				 #payMoney_4#,#avgMoney_4#,#payCount_4#,#payMoney_5#,#avgMoney_5#,#payCount_5#,#payMoney_6#,#avgMoney_6#,#payCount_6#,
				 #payMoney_7#,#avgMoney_7#,#payCount_7#,#payMoney_8#,#avgMoney_8#,#payCount_8#,#payMoney_9#,#avgMoney_9#,#payCount_9#,
				 #payMoney_10#,#avgMoney_10#,#payCount_10#,#payMoney_11#,#avgMoney_11#,#payCount_11#,#payMoney_12#,#avgMoney_12#,#payCount_12#)
		</insert>
		
		<select id="getLoanInfoByAvg" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
    		SELECT SUM(PAY_MONEY) payMoney,
			       COUNT(PAY_MONEY) payCount,
			       MONTH(PAY_DATE) payMonth,DEPT_ID deptId 
		      FROM T_LOAN_CASE
		     WHERE STATUS=0 
	           AND YEAR(PAY_DATE)=YEAR(GETDATE())
		  GROUP BY MONTH(PAY_DATE),DEPT_ID 
    	</select>
    	
    	<!-- 桌面平均拨款金额栏位 -->
    	<select id="getAvgPayMoneyGroupByMonth" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
    			    SELECT ISNULL(CASE WHEN SUM(PAY_COUNT_1)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=1)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_1)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty> 
					                                              AND MONTH(PAY_DATE)=1))
				                  			 /
				                  			 (SUM(PAY_COUNT_1)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty> 
					                                              AND MONTH(PAY_DATE)=1))
				                  			 ,0)
				                   END,0) avgMoney_1,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_2)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=2)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_2)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty> 
					                                              AND MONTH(PAY_DATE)=2))
				                  			 /
				                  			 (SUM(PAY_COUNT_2)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=2))
				                  			 ,0)
				                   END,0) avgMoney_2,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_3)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=3)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_3)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=3))
				                  			 /
				                  			 (SUM(PAY_COUNT_3)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=3))
				                  			 ,0)
				                   END,0) avgMoney_3,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_4)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=4)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_4)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=4))
				                  			 /
				                  			 (SUM(PAY_COUNT_4)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=4))
				                  			 ,0)
				                   END,0) avgMoney_4,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_5)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=5)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_5)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=5))
				                  			 /
				                  			 (SUM(PAY_COUNT_5)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=5))
				                  			 ,0)
				                   END,0) avgMoney_5,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_6)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=6)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_6)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=6))
				                  			 /
				                  			 (SUM(PAY_COUNT_6)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=6))
				                  			 ,0)
				                   END,0) avgMoney_6,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_7)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=7)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_7)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=7))
				                  			 /
				                  			 (SUM(PAY_COUNT_7)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=7))
				                  			 ,0)
				                   END,0) avgMoney_7,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_8)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=8)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_8)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=8))
				                  			 /
				                  			 (SUM(PAY_COUNT_8)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=8))
				                  			 ,0)
				                   END,0) avgMoney_8,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_9)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=9)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_9)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=9))
				                  			 /
				                  			 (SUM(PAY_COUNT_9)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=9))
				                  			 ,0)
				                   END,0) avgMoney_9,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_10)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=10)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_10)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=10))
				                  			 /
				                  			 (SUM(PAY_COUNT_10)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=10))
				                  			 ,0)
				                   END,0) avgMoney_10,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_11)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=11)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_11)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=11))
				                  			 /
				                  			 (SUM(PAY_COUNT_11)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=11))
				                  			 ,0)
				                   END,0) avgMoney_11,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_12)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=12)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_12)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=12))
				                  			 /
				                  			 (SUM(PAY_COUNT_12)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=12))
				                  			 ,0)
				                   END,0) avgMoney_12,
		                   ISNULL(
				           ROUND(
				           (ISNULL(SUM(PAY_MONEY_1),0)+ISNULL(SUM(PAY_MONEY_2),0)+ISNULL(SUM(PAY_MONEY_3),0)+ISNULL(SUM(PAY_MONEY_4),0)+ISNULL(SUM(PAY_MONEY_5),0)+ISNULL(SUM(PAY_MONEY_6),0)+
				           ISNULL(SUM(PAY_MONEY_7),0)+ISNULL(SUM(PAY_MONEY_8),0)+ISNULL(SUM(PAY_MONEY_9),0)+ISNULL(SUM(PAY_MONEY_10),0)+ISNULL(SUM(PAY_MONEY_11),0)+ISNULL(SUM(PAY_MONEY_12),0)+ISNULL(#payMoney#,0)<!-- +ISNULL(#loanMoney#,0) -->
				           +(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty> 
					                                             )
				           )/
				           (SUM(PAY_COUNT_1)+SUM(PAY_COUNT_2)+SUM(PAY_COUNT_3)+SUM(PAY_COUNT_4)+SUM(PAY_COUNT_5)+SUM(PAY_COUNT_6)+
				           SUM(PAY_COUNT_7)+SUM(PAY_COUNT_8)+SUM(PAY_COUNT_9)+SUM(PAY_COUNT_10)+SUM(PAY_COUNT_11)+SUM(PAY_COUNT_12)+ISNULL(#payCount#,0)<!-- +ISNULL(#loanCount#,0) -->
				           +(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty> 
					                                             )
				           ),0),0)           
				           avgMoney
				      FROM T_AVG_PAY_MONEY
				     WHERE
				     	<isEmpty property="searchDate">
				     		MONTH(CREATE_ON)=MONTH(GETDATE())
				       		AND YEAR(CREATE_ON)=YEAR(GETDATE())
				     	</isEmpty>
				     	<isNotEmpty property="searchDate">
				     		MONTH(CREATE_ON)=MONTH(CONVERT(DATE,#searchDate#))
				       		AND YEAR(CREATE_ON)=YEAR(CONVERT(DATE,#searchDate#))
				     	</isNotEmpty>
    	</select>
    	
    	<select id="getAvgPayMoneyGroupByMonthCar" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
    			    SELECT ISNULL(CASE WHEN SUM(PAY_COUNT_1)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=1)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_1)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty> 
					                                              AND MONTH(PAY_DATE)=1))
				                  			 /
				                  			 (SUM(PAY_COUNT_1)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty> 
					                                              AND MONTH(PAY_DATE)=1))
				                  			 ,0)
				                   END,0) avgMoney_1,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_2)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=2)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_2)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty> 
					                                              AND MONTH(PAY_DATE)=2))
				                  			 /
				                  			 (SUM(PAY_COUNT_2)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=2))
				                  			 ,0)
				                   END,0) avgMoney_2,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_3)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=3)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_3)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=3))
				                  			 /
				                  			 (SUM(PAY_COUNT_3)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=3))
				                  			 ,0)
				                   END,0) avgMoney_3,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_4)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=4)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_4)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=4))
				                  			 /
				                  			 (SUM(PAY_COUNT_4)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=4))
				                  			 ,0)
				                   END,0) avgMoney_4,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_5)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=5)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_5)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=5))
				                  			 /
				                  			 (SUM(PAY_COUNT_5)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=5))
				                  			 ,0)
				                   END,0) avgMoney_5,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_6)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=6)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_6)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=6))
				                  			 /
				                  			 (SUM(PAY_COUNT_6)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=6))
				                  			 ,0)
				                   END,0) avgMoney_6,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_7)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=7)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_7)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=7))
				                  			 /
				                  			 (SUM(PAY_COUNT_7)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=7))
				                  			 ,0)
				                   END,0) avgMoney_7,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_8)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=8)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_8)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=8))
				                  			 /
				                  			 (SUM(PAY_COUNT_8)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=8))
				                  			 ,0)
				                   END,0) avgMoney_8,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_9)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=9)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_9)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=9))
				                  			 /
				                  			 (SUM(PAY_COUNT_9)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=9))
				                  			 ,0)
				                   END,0) avgMoney_9,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_10)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=10)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_10)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=10))
				                  			 /
				                  			 (SUM(PAY_COUNT_10)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=10))
				                  			 ,0)
				                   END,0) avgMoney_10,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_11)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=11)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_11)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=11))
				                  			 /
				                  			 (SUM(PAY_COUNT_11)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=11))
				                  			 ,0)
				                   END,0) avgMoney_11,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_12)=0 AND (SELECT ISNULL(COUNT(1),0) 
						                                             FROM T_LOAN_CASE 
						                                            WHERE STATUS=0 
						                                              AND LOAN_MODE=3 
						                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
						                                              AND MONTH(PAY_DATE)=12)=0
				                  THEN 0 
				                  ELSE ROUND(
				                  			 (SUM(PAY_MONEY_12)+(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=12))
				                  			 /
				                  			 (SUM(PAY_COUNT_12)+(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty>
					                                              AND MONTH(PAY_DATE)=12))
				                  			 ,0)
				                   END,0) avgMoney_12,
		                   ISNULL(
				           ROUND(
				           (ISNULL(SUM(PAY_MONEY_1),0)+ISNULL(SUM(PAY_MONEY_2),0)+ISNULL(SUM(PAY_MONEY_3),0)+ISNULL(SUM(PAY_MONEY_4),0)+ISNULL(SUM(PAY_MONEY_5),0)+ISNULL(SUM(PAY_MONEY_6),0)+
				           ISNULL(SUM(PAY_MONEY_7),0)+ISNULL(SUM(PAY_MONEY_8),0)+ISNULL(SUM(PAY_MONEY_9),0)+ISNULL(SUM(PAY_MONEY_10),0)+ISNULL(SUM(PAY_MONEY_11),0)+ISNULL(SUM(PAY_MONEY_12),0)+ISNULL(#payMoney#,0)<!-- +ISNULL(#loanMoney#,0) -->
				           +(SELECT ISNULL(SUM(ISNULL(PAY_MONEY,0)),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty> 
					                                             )
				           )/
				           (SUM(PAY_COUNT_1)+SUM(PAY_COUNT_2)+SUM(PAY_COUNT_3)+SUM(PAY_COUNT_4)+SUM(PAY_COUNT_5)+SUM(PAY_COUNT_6)+
				           SUM(PAY_COUNT_7)+SUM(PAY_COUNT_8)+SUM(PAY_COUNT_9)+SUM(PAY_COUNT_10)+SUM(PAY_COUNT_11)+SUM(PAY_COUNT_12)+ISNULL(#payCount#,0)<!-- +ISNULL(#loanCount#,0) -->
				           +(SELECT ISNULL(COUNT(1),0) 
					                                             FROM T_LOAN_CASE 
					                                            WHERE STATUS=0 
					                                              AND LOAN_MODE=3 
					                                              AND CASE_STATUS_ID=2 AND YEAR(PAY_DATE)=
						                                              <isEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,GETDATE()))
						                                              </isEmpty>
						                                              <isNotEmpty property="searchDate">
						                                              		YEAR(CONVERT(DATE,#searchDate#))
						                                              </isNotEmpty> 
					                                             )
				           ),0),0)           
				           avgMoney
				      FROM T_AVG_PAY_MONEY
				     WHERE
				     	<isEmpty property="searchDate">
				     		MONTH(CREATE_ON)=MONTH(GETDATE())
				       		AND YEAR(CREATE_ON)=YEAR(GETDATE())
				     	</isEmpty>
				     	<isNotEmpty property="searchDate">
				     		MONTH(CREATE_ON)=MONTH(CONVERT(DATE,#searchDate#))
				       		AND YEAR(CREATE_ON)=YEAR(CONVERT(DATE,#searchDate#))
				       		AND DEPT_NAME LIKE '%$cmpyName$%'
				     	</isNotEmpty>
    	</select>
    	
    	<select id="getAvgPayMoneyGroupByMonthEqu" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
    			    SELECT ISNULL(CASE WHEN SUM(PAY_COUNT_1)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_1)/SUM(PAY_COUNT_1),0)
				                   END,0) avgMoney_1,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_2)=0 
				                  THEN 0 
			                	  ELSE ROUND(SUM(PAY_MONEY_2)/SUM(PAY_COUNT_2),0)
				                  END,0) avgMoney_2,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_3)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_3)/SUM(PAY_COUNT_3),0)
				                   END,0) avgMoney_3,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_4)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_4)/SUM(PAY_COUNT_4),0)
				                   END,0) avgMoney_4,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_5)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_5)/SUM(PAY_COUNT_5),0)
				                   END,0) avgMoney_5,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_6)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_6)/SUM(PAY_COUNT_6),0)
				                   END,0) avgMoney_6,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_7)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_7)/SUM(PAY_COUNT_7),0)
				                   END,0) avgMoney_7,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_8)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_8)/SUM(PAY_COUNT_8),0)
				                   END,0) avgMoney_8,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_9)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_9)/SUM(PAY_COUNT_9),0)
				                   END,0) avgMoney_9,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_10)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_10)/SUM(PAY_COUNT_10),0)
				                   END,0) avgMoney_10,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_11)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_11)/SUM(PAY_COUNT_11),0)
				                   END,0) avgMoney_11,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_12)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_12)/SUM(PAY_COUNT_12),0)
				                   END,0) avgMoney_12,
		                   ISNULL(
				           ROUND(
				           (ISNULL(SUM(PAY_MONEY_1),0)+ISNULL(SUM(PAY_MONEY_2),0)+ISNULL(SUM(PAY_MONEY_3),0)+ISNULL(SUM(PAY_MONEY_4),0)+ISNULL(SUM(PAY_MONEY_5),0)+ISNULL(SUM(PAY_MONEY_6),0)+
				           ISNULL(SUM(PAY_MONEY_7),0)+ISNULL(SUM(PAY_MONEY_8),0)+ISNULL(SUM(PAY_MONEY_9),0)+ISNULL(SUM(PAY_MONEY_10),0)+ISNULL(SUM(PAY_MONEY_11),0)+ISNULL(SUM(PAY_MONEY_12),0)+ISNULL(#payMoney#,0)<!-- +ISNULL(#loanMoney#,0) -->)/
				           (SUM(PAY_COUNT_1)+SUM(PAY_COUNT_2)+SUM(PAY_COUNT_3)+SUM(PAY_COUNT_4)+SUM(PAY_COUNT_5)+SUM(PAY_COUNT_6)+
				           SUM(PAY_COUNT_7)+SUM(PAY_COUNT_8)+SUM(PAY_COUNT_9)+SUM(PAY_COUNT_10)+SUM(PAY_COUNT_11)+SUM(PAY_COUNT_12)+ISNULL(#payCount#,0)<!-- +ISNULL(#loanCount#,0) -->),0),0)           
				           avgMoney
				      FROM T_AVG_PAY_MONEY
				     WHERE
				     	<isEmpty property="searchDate">
				     		MONTH(CREATE_ON)=MONTH(GETDATE())
				       		AND YEAR(CREATE_ON)=YEAR(GETDATE())
				     	</isEmpty>
				     	<isNotEmpty property="searchDate">
				     		MONTH(CREATE_ON)=MONTH(CONVERT(DATE,#searchDate#))
				       		AND YEAR(CREATE_ON)=YEAR(CONVERT(DATE,#searchDate#))
				       		AND DEPT_NAME LIKE '%$cmpyName$%'
				     	</isNotEmpty>
    	</select>
    	
    	<select id="getAvgPayMoneyGroupByMonthMotor" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
    			    SELECT ISNULL(CASE WHEN SUM(PAY_COUNT_1)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_1)/SUM(PAY_COUNT_1),0)
				                   END,0) avgMoney_1,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_2)=0 
				                  THEN 0 
			                	  ELSE ROUND(SUM(PAY_MONEY_2)/SUM(PAY_COUNT_2),0)
				                  END,0) avgMoney_2,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_3)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_3)/SUM(PAY_COUNT_3),0)
				                   END,0) avgMoney_3,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_4)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_4)/SUM(PAY_COUNT_4),0)
				                   END,0) avgMoney_4,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_5)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_5)/SUM(PAY_COUNT_5),0)
				                   END,0) avgMoney_5,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_6)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_6)/SUM(PAY_COUNT_6),0)
				                   END,0) avgMoney_6,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_7)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_7)/SUM(PAY_COUNT_7),0)
				                   END,0) avgMoney_7,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_8)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_8)/SUM(PAY_COUNT_8),0)
				                   END,0) avgMoney_8,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_9)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_9)/SUM(PAY_COUNT_9),0)
				                   END,0) avgMoney_9,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_10)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_10)/SUM(PAY_COUNT_10),0)
				                   END,0) avgMoney_10,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_11)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_11)/SUM(PAY_COUNT_11),0)
				                   END,0) avgMoney_11,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_12)=0 
				                  THEN 0 
				                  ELSE ROUND(SUM(PAY_MONEY_12)/SUM(PAY_COUNT_12),0)
				                   END,0) avgMoney_12,
		                   ISNULL(
				           ROUND(
				           (ISNULL(SUM(PAY_MONEY_1),0)+ISNULL(SUM(PAY_MONEY_2),0)+ISNULL(SUM(PAY_MONEY_3),0)+ISNULL(SUM(PAY_MONEY_4),0)+ISNULL(SUM(PAY_MONEY_5),0)+ISNULL(SUM(PAY_MONEY_6),0)+
				           ISNULL(SUM(PAY_MONEY_7),0)+ISNULL(SUM(PAY_MONEY_8),0)+ISNULL(SUM(PAY_MONEY_9),0)+ISNULL(SUM(PAY_MONEY_10),0)+ISNULL(SUM(PAY_MONEY_11),0)+ISNULL(SUM(PAY_MONEY_12),0)+ISNULL(#payMoney#,0)<!-- +ISNULL(#loanMoney#,0) -->)/
				           (SUM(PAY_COUNT_1)+SUM(PAY_COUNT_2)+SUM(PAY_COUNT_3)+SUM(PAY_COUNT_4)+SUM(PAY_COUNT_5)+SUM(PAY_COUNT_6)+
				           SUM(PAY_COUNT_7)+SUM(PAY_COUNT_8)+SUM(PAY_COUNT_9)+SUM(PAY_COUNT_10)+SUM(PAY_COUNT_11)+SUM(PAY_COUNT_12)+ISNULL(#payCount#,0)<!-- +ISNULL(#loanCount#,0) -->),0),0)           
				           avgMoney
				      FROM T_AVG_PAY_MONEY
				     WHERE
				     	<isEmpty property="searchDate">
				     		MONTH(CREATE_ON)=MONTH(GETDATE())
				       		AND YEAR(CREATE_ON)=YEAR(GETDATE())
				     	</isEmpty>
				     	<isNotEmpty property="searchDate">
				     		MONTH(CREATE_ON)=MONTH(CONVERT(DATE,#searchDate#))
				       		AND YEAR(CREATE_ON)=YEAR(CONVERT(DATE,#searchDate#))
				       		AND DEPT_NAME LIKE '%$cmpyName$%'
				     	</isNotEmpty>
    	</select>
    	
    	<select id="getAvgPayMoneyGroupByDept" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
  			      SELECT DEPT_ID deptId,DEPT_NAME deptName,
			             AVG_MONEY_1 avgMoney_1,AVG_MONEY_2 avgMoney_2,AVG_MONEY_3 avgMoney_3,AVG_MONEY_4 avgMoney_4,
			             AVG_MONEY_5 avgMoney_5,AVG_MONEY_6 avgMoney_6,AVG_MONEY_7 avgMoney_7,AVG_MONEY_8 avgMoney_8,
			             AVG_MONEY_9 avgMoney_9,AVG_MONEY_10 avgMoney_10,AVG_MONEY_11 avgMoney_11,AVG_MONEY_12 avgMoney_12
			        FROM T_AVG_PAY_MONEY
			       WHERE MONTH(CREATE_ON)=MONTH(#DATE#)
			         AND YEAR(CREATE_ON)=YEAR(#DATE#)
			       <isNotEmpty property="DEPT_ID">
			         AND DEPT_ID=#DEPT_ID#
		           </isNotEmpty>
    	</select>
    	
    	<select id="getAvgPayMoneyTotal" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
    				SELECT ISNULL(CASE WHEN SUM(PAY_COUNT_1)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_1)/SUM(PAY_COUNT_1),0)
				                 END,0) avgMoney_1,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_2)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_2)/SUM(PAY_COUNT_2),0)
				                 END,0) avgMoney_2,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_3)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_3)/SUM(PAY_COUNT_3),0)
				                 END,0) avgMoney_3,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_4)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_4)/SUM(PAY_COUNT_4),0)
				                 END,0) avgMoney_4,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_5)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_5)/SUM(PAY_COUNT_5),0)
				                 END,0) avgMoney_5,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_6)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_6)/SUM(PAY_COUNT_6),0)
				                 END,0) avgMoney_6,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_7)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_7)/SUM(PAY_COUNT_7),0)
				                 END,0) avgMoney_7,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_8)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_8)/SUM(PAY_COUNT_8),0)
				                 END,0) avgMoney_8,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_9)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_9)/SUM(PAY_COUNT_9),0)
				                 END,0) avgMoney_9,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_10)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_10)/SUM(PAY_COUNT_10),0)
				                 END,0) avgMoney_10,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_11)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_11)/SUM(PAY_COUNT_11),0)
				                 END,0) avgMoney_11,
				           ISNULL(CASE WHEN SUM(PAY_COUNT_12)=0 
				                THEN 0 
				                ELSE ROUND(SUM(PAY_MONEY_12)/SUM(PAY_COUNT_12),0)
				                 END,0) avgMoney_12
			      FROM T_AVG_PAY_MONEY
			     WHERE MONTH(CREATE_ON)=MONTH(#DATE#)
			       AND YEAR(CREATE_ON)=YEAR(#DATE#)
		       <isNotEmpty property="DEPT_ID">
		           AND DEPT_ID=#DEPT_ID#
	           </isNotEmpty>
    	</select>
    	
    	<select id="getPayMoneyPayCountCurrentMonth" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
                SELECT ISNULL(SUM(TSP.PAY_MONEY),0) payMoney,
	                   COUNT(TPC.ID) payCount,	                   	                   
	                   MONTH(GETDATE()) payMonth,
	                   YEAR(GETDATE()) payYear,
                       '重车类型' moneyType
	              FROM T_PRJT_CREDIT TPC 
	         LEFT JOIN T_SUPL_PLAYDETIL TSP ON TSP.STATUS=0 AND TPC.ID=TSP.CREDIT_ID	         
	             WHERE TPC.FINANCECONTRACT_DATE IS NOT NULL 
	               AND YEAR(TPC.FINANCECONTRACT_DATE)=YEAR(GETDATE())
	               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)=CONVERT(DATE,TSP.PAY_DATE)
	               AND MONTH(TPC.FINANCECONTRACT_DATE)=MONTH(GETDATE())
                   AND TSP.BACKSTATE=0
                   AND (TPC.CONTRACT_TYPE=3 OR TPC.CONTRACT_TYPE=4)<!-- 重车类型合同号是3 -->
	               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)&lt;=CONVERT(DATE,#DATE#)
                 UNION ALL
                SELECT ISNULL(SUM(TSP.PAY_MONEY),0) payMoney,
	                   COUNT(TPC.ID) payCount,	                   	                   
	                   MONTH(GETDATE()) payMonth,
	                   YEAR(GETDATE()) payYear,
                       '设备款类型' moneyType
                  FROM T_PRJT_CREDIT TPC 
	         LEFT JOIN T_SUPL_PLAYDETIL TSP ON TSP.STATUS=0 AND TPC.ID=TSP.CREDIT_ID	         
	             WHERE TPC.FINANCECONTRACT_DATE IS NOT NULL 
	               AND YEAR(TPC.FINANCECONTRACT_DATE)=YEAR(GETDATE())
	               AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)=CONVERT(DATE,TSP.PAY_DATE)
	               AND MONTH(TPC.FINANCECONTRACT_DATE)=MONTH(GETDATE())
	               AND TSP.BACKSTATE=0
              	   AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE)&lt;=CONVERT(DATE,#DATE#)
    	</select>
    	
    	<!--案件进度时间比较 获得数据SQL -->
    	<select id="getCaseCompareDay" resultClass="com.brick.batchjob.to.CaseCompareDayTo">
    	SELECT O1.userId,O1.deptId,O1.creditId,O1.leaseCode,O1.custName,O1.userName,O1.deptName,O1.a_g,MIN(O1.payDate) payDate,O1.a_b,
   			   O1.auditDate,O1.b_c,O1.confirmDate,O1.c_d,O1.lastRiskDate,O1.d_e,O1.firstRiskDate,O1.e_f,O1.creditCreateDate,O1.visitDate,O1.f_g
		  FROM
    			(
	    			    SELECT DISTINCT O.USER_ID userId,O.DEPT_ID deptId,O.CREDIT_ID creditId,O.LEASE_CODE leaseCode,O.CUST_NAME custName,O.NAME userName,O.DECP_NAME_CN deptName,
					           ISNULL(ROUND(DATEDIFF(SECOND,O.CREATE_DATE,O.PAY_DATE)/86400.,2),0) a_g,<!-- 拨款时间减去报告生成时间 -->
					           O.PAY_DATE payDate,
					           ISNULL(ROUND(DATEDIFF(SECOND,O.LOG_CREATE_DATE,O.PAY_DATE)/86400.,2),0) a_b,<!-- 拨款时间减去业管初审时间 -->
					           O.LOG_CREATE_DATE auditDate,
					           ISNULL(ROUND(DATEDIFF(SECOND,O.WIND_RESULT_DATE,O.LOG_CREATE_DATE)/86400.,2),0) b_c,<!-- 业管初审时间减去审查核准时间 -->
					           O.WIND_RESULT_DATE confirmDate,
					           ISNULL(ROUND(DATEDIFF(SECOND,MAX(O.CREATE_TIME),O.WIND_RESULT_DATE)/86400.,2),0) c_d,<!-- 审查核准时间减去最终提交风控时间 -->
					           MAX(O.CREATE_TIME) lastRiskDate,
					           ISNULL(ROUND(DATEDIFF(SECOND,MIN(O.CREATE_TIME),MAX(O.CREATE_TIME))/86400.,2),0) d_e,<!-- 最终提交风控时间减去初次提交风控时间 -->
					           MIN(O.CREATE_TIME) firstRiskDate,
					           ISNULL(ROUND(DATEDIFF(SECOND,MIN(O.REAL_VISIT_DATE),MIN(O.CREATE_TIME))/86400.,2),0) e_f,<!-- 初次提交风控时间减去访厂时间 -->
					           MIN(CONVERT(DATETIME,O.REAL_VISIT_DATE)) visitDate,
					           ISNULL(ROUND(DATEDIFF(SECOND,O.CREATE_DATE,MIN(O.REAL_VISIT_DATE))/86400.,1),0) f_g,<!-- 访厂时间减去报告生成时间 -->
					           O.CREATE_DATE creditCreateDate FROM
			    						(
										    SELECT DISTINCT TPC.LEASE_CODE,TCC.CUST_NAME,TUSER.NAME,DECP.DECP_NAME_CN,PAY.CREDIT_ID,PAY.PAY_DATE,
										           TPC.WIND_RESULT_DATE,
										           TPRC.COMMIT_TIME CREATE_TIME, <!-- TPCO.CREATE_TIME, -->
										           TPC.CREATE_DATE,TSL.CREATE_DATE LOG_CREATE_DATE,
										           TUSER.ID USER_ID,DECP.DECP_ID DEPT_ID,TPVT.REAL_VISIT_DATE
										      FROM T_SUPL_PLAYDETIL PAY
										 LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID=PAY.CREDIT_ID AND TPC.STATUS=0
										 LEFT JOIN T_PRJT_VISIT TPVT ON PAY.CREDIT_ID=TPVT.CREDIT_ID AND TPVT.STATUS=0 AND TPVT.VISIT_STATUS>=3
										 LEFT JOIN T_USER_USER TUSER ON TPC.SENSOR_ID=TUSER.ID
										 LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUSER.DEPT_ID=DEPT.ID AND DEPT.STATUS = 0
										 LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS = 0 
										 LEFT JOIN T_CUST_CUSTOMER TCC ON TPC.CUST_ID=TCC.CUST_ID AND TCC.STATUS=0
										 LEFT JOIN T_PRJT_RISK_CONTROL TPRC ON PAY.CREDIT_ID=TPRC.CREDIT_ID AND TPRC.STATUS=0
										 <!-- LEFT JOIN T_PRJT_CREDITMEMO TPCO ON TPCO.TPRC_ID=TPRC.PRC_ID AND TPCO.STATUS=0 -->
										 LEFT JOIN (
										            SELECT MAX(CREATE_DATE) CREATE_DATE,CREDIT_ID FROM T_SYS_BUSINESSLOG 
										             WHERE LOG_TITLE=#TITLE# AND STATUS=0<!--param: 初审 -->
										          GROUP BY CREDIT_ID
										            ) TSL ON TSL.CREDIT_ID=PAY.CREDIT_ID
										     WHERE PAY.STATUS=0 
										       AND PAY.BACKSTATE=0
										       AND CONVERT(DATE,PAY.PAY_DATE)=CONVERT(DATE,TPC.FINANCECONTRACT_DATE)
										       AND MONTH(PAY.PAY_DATE)=MONTH(GETDATE())
										       AND YEAR(PAY.PAY_DATE)=YEAR(GETDATE())
							            ) O                      
					    GROUP BY O.LEASE_CODE,O.PAY_DATE,O.WIND_RESULT_DATE,O.USER_ID,O.DEPT_ID,
					             O.CREATE_DATE,O.NAME,O.DECP_NAME_CN,O.CUST_NAME,O.LOG_CREATE_DATE,O.CREDIT_ID    
				   ) O1
				   GROUP BY O1.userId,O1.deptId,O1.creditId,O1.leaseCode,O1.custName,O1.userName,O1.deptName,O1.a_g,O1.a_b,
   			   				O1.auditDate,O1.b_c,O1.confirmDate,O1.c_d,O1.lastRiskDate,O1.d_e,O1.firstRiskDate,O1.e_f,O1.creditCreateDate,O1.visitDate,O1.f_g
    	</select>
    	
    	<insert id="insertCaseCompareDay" parameterClass="com.brick.batchjob.to.CaseCompareDayTo">
    			INSERT INTO T_CASE_COMPARE
    			(CASE_COMPARE_DAY_ID,CREDIT_ID,LEASE_CODE,CUST_NAME,USER_NAME,DEPT_NAME,A_F,PAY_DATE,A_B,
    			 AUDIT_DATE,B_C,CONFIRM_DATE,LAST_RISK_DATE,FIRST_RISK_DATE,D_E,E_F,CREDIT_CREATE_DATE,CREATE_ON,
    			 USER_ID,DEPT_ID,C_D,VISIT_DATE,F_G,A_G)
    			VALUES
    			(#caseCompareDayId#,#creditId#,#leaseCode#,#custName#,#userName#,#deptName#,#a_f#,#payDate#,#a_b#,
    			 #auditDate#,#b_c#,#confirmDate#,#lastRiskDate#,#firstRiskDate#,#d_e#,#e_f#,#creditCreateDate#,GETDATE(),
    			 #userId#,#deptId#,#c_d#,#visitDate#,#f_g#,#a_g#)
    	</insert>
    	
    	<select id="queryCaseCompareDay" resultClass="com.brick.batchjob.to.CaseCompareDayTo">
    			SELECT CREDIT_ID creditId,LEASE_CODE leaseCode,CUST_NAME custName,USER_NAME userName,DEPT_NAME deptName,A_F a_f,
   					   PAY_DATE payDate,A_B a_b,AUDIT_DATE auditDate,B_C b_c,CONFIRM_DATE confirmDate,LAST_RISK_DATE lastRiskDate,C_D c_d,
   					   FIRST_RISK_DATE firstRiskDate,D_E d_e,E_F e_f,CREDIT_CREATE_DATE creditCreateDate,USER_ID userId,DEPT_ID deptId,
   					   A_G a_g,F_G f_g,VISIT_DATE visitDate
    			  FROM T_CASE_COMPARE
    			 WHERE
    		 <isEqual property="IS_CURRENT_MONTH" compareValue="Y">   
    			   CONVERT(DATE,CREATE_ON)=CONVERT(DATE,GETDATE()-1)
    	     </isEqual>
    	     <isEqual property="IS_CURRENT_MONTH" compareValue="N">
    	     	   CONVERT(DATE,CREATE_ON)=CONVERT(DATE,#DATE#)
    	     </isEqual>
   			 <isNotEmpty property="USER_ID">
   			 	   AND USER_ID=#USER_ID#
   			 </isNotEmpty>
   			 <isNotEmpty property="DEPT_ID">
   			       AND DEPT_ID=#DEPT_ID#
   			 </isNotEmpty>
   			 <isNotEmpty property="A-G">
   			 	   <!-- AND A_F>#A-F# -->AND A_G>#A-G#
   			 </isNotEmpty>
   			 <isNotEmpty property="A-B">
   			 	   AND A_B>#A-B#
   			 </isNotEmpty>
   			 <isNotEmpty property="B-C">
   			       AND B_C>#B-C#
   			 </isNotEmpty>
   			 <isNotEmpty property="C-D">
   			 	   AND C_D>#C-D#
   			 </isNotEmpty>
   			 <isNotEmpty property="D-E">
   			 	   AND D_E>#D-E#
   			 </isNotEmpty>
   			 <isNotEmpty property="E-F">
   			 	   AND E_F>#E-F#
   			 </isNotEmpty>
   			 <isNotEmpty property="F-G">
   			 	   AND F_G>#F-G#
   			 </isNotEmpty>
   			 <isNotEmpty property="CONTENT">
   			 	   AND 
   			 	   (
   			 	   	  LEASE_CODE LIKE '%$CONTENT$%' 
   			 	   	  OR
   			 	   	  CUST_NAME LIKE '%$CONTENT$%'
   			 	   	  OR
   			 	   	  USER_NAME LIKE '%$CONTENT$%'
   			 	   )
   			 </isNotEmpty>
   			 	ORDER BY $TYPE$ $SORT$
    	</select>
    	
    	<select id="getCaseCompareDateList" resultClass="com.brick.batchjob.to.CaseCompareDayTo">
   		          SELECT DISTINCT MAX(CONVERT(DATE,CREATE_ON)) createOnCode,CONVERT(VARCHAR,YEAR(CREATE_ON))+'-'+CONVERT(VARCHAR,MONTH(CREATE_ON)) createOnDescr 
	  			  	FROM T_CASE_COMPARE
		           <!--WHERE CONVERT(DATE,CREATE_ON)>CONVERT(DATE,'2012-5-31')  2012-5-31号前的数据有问题 -->
		        GROUP BY CONVERT(VARCHAR,YEAR(CREATE_ON))+'-'+CONVERT(VARCHAR,MONTH(CREATE_ON))
		        ORDER BY MAX(CONVERT(DATE,CREATE_ON))	   
    	</select>
    	
    	<select id="getCaseCompareUserList" resultClass="com.brick.batchjob.to.CaseCompareDayTo">
    			SELECT DISTINCT USER_ID userId,USER_NAME userName 
				  FROM T_CASE_COMPARE 
    	</select>
    	
    	<select id="getCaseCompareDeptList" resultClass="com.brick.batchjob.to.CaseCompareDayTo">
    			SELECT DISTINCT DEPT_ID deptId,DEPT_NAME deptName,[ORDER]
  				  FROM T_CASE_COMPARE
             LEFT JOIN T_DEPT_COMPANY ON DECP_ID=DEPT_ID AND STATUS=0
              ORDER BY [ORDER] 
    	</select>
    	
    	<select id="avgCaseCompareDay" resultClass="com.brick.batchjob.to.CaseCompareDayTo">
		        SELECT DEPT_ID deptId,DEPT_NAME deptName,[ORDER],
		               COUNT(DEPT_ID) countCase,
		               ROUND(AVG(F_G),2) f_g,ROUND(SUM(F_G),2) f_g_sum,
		               ROUND(AVG(E_F),2) e_f,ROUND(SUM(E_F),2) e_f_sum,
		               ROUND(AVG(B_C),2) b_c,ROUND(SUM(B_C),2) b_c_sum,
		               ROUND(AVG(A_B),2) a_b,ROUND(SUM(A_B),2) a_b_sum
		          FROM T_CASE_COMPARE
		     LEFT JOIN T_DEPT_COMPANY ON DECP_ID=DEPT_ID AND STATUS=0
		         WHERE CONVERT(DATE,CREATE_ON)=CONVERT(DATE,GETDATE()-1)
		      GROUP BY DEPT_ID,DEPT_NAME,[ORDER]
		      ORDER BY [ORDER]
    	</select>
    	
    	<select id="getCEAvgComapreDay" resultClass="com.brick.batchjob.to.CaseCompareDayTo">
    			SELECT DEPT_ID deptId,DEPT_NAME deptName,
		               ROUND(AVG((C_D+D_E)),2) c_e,
		               ROUND(AVG(A_G),2) a_g, 
		               'ONE_TIME_PASS' c_eType
		          FROM T_CASE_COMPARE
		         WHERE CONVERT(DATE,CREATE_ON)=CONVERT(DATE,GETDATE()-1)
		           AND LAST_RISK_DATE=FIRST_RISK_DATE<!-- 一次过案是指   初次提交风控时间=最终提交风控时间 -->
		      GROUP BY DEPT_ID,DEPT_NAME
		        UNION
		        SELECT DEPT_ID deptId,DEPT_NAME deptName,
		               ROUND(AVG((C_D+D_E)),2) c_e,
		               ROUND(AVG(A_G),2) a_g,
		               'NOT_ONE_TIME_PASS' c_eType
		          FROM T_CASE_COMPARE
		         WHERE CONVERT(DATE,CREATE_ON)=CONVERT(DATE,GETDATE()-1)
		           AND LAST_RISK_DATE!=FIRST_RISK_DATE<!-- 非一次过按是指   初次提交风控时间!=最终提交风控时间 -->
		      GROUP BY DEPT_ID,DEPT_NAME
    	</select>
    	
    	<select id="getCETotalAvgComapreDay" resultClass="com.brick.batchjob.to.CaseCompareDayTo">
    			SELECT ISNULL(ROUND(AVG((C_D+D_E)),2),0) c_e,
    				   ISNULL(ROUND(AVG(A_G),2),0) a_g,
		               'ONE_TIME_PASS' c_eType
		          FROM T_CASE_COMPARE
		         WHERE CONVERT(DATE,CREATE_ON)=CONVERT(DATE,GETDATE()-1)
		           AND LAST_RISK_DATE=FIRST_RISK_DATE
		        UNION
		        SELECT ISNULL(ROUND(AVG((C_D+D_E)),2),0) c_e,
		        	   ISNULL(ROUND(AVG(A_G),2),0) a_g,
		               'NOT_ONE_TIME_PASS' c_eType
		          FROM T_CASE_COMPARE
		         WHERE CONVERT(DATE,CREATE_ON)=CONVERT(DATE,GETDATE()-1)
		           AND LAST_RISK_DATE!=FIRST_RISK_DATE
    	</select>
    	
    	<select id="getSuplUnitPriceAccrualTRByContract" resultClass="com.brick.batchjob.to.SupplerContributeTo">
			        SELECT TSSR.ID suplId,TSSR.NAME suplName,
			               ROUND(SUM(TRCL.UNIT_PRICE),0) unitPrice,
			               ROUND(O.accrual,0) accrual,ROUND(O.tr,3) tr,TRCT.LEASE_CODE leaseCode,
			               TRCT.RECT_ID rectId,TRCL.RECP_ID recpId
			          FROM T_SUPL_SUPPLIER TSSR          
			     LEFT JOIN T_SUPL_EQUIPMENT TSET ON TSSR.ID=TSET.SUPPLIER_ID
			     LEFT JOIN T_EQMT_EQUIPMENT TEET ON TSET.SUEQ_ID=TEET.SUEQ_ID
			     LEFT JOIN T_RENT_CONTRACTDETAIL TRCL ON TEET.EQMT_ID=TRCL.EQMT_ID
			     LEFT JOIN T_RENT_CONTRACT TRCT ON TRCL.RECT_ID=TRCT.RECT_ID
			     LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TRCT.PRCD_ID=TPCE.CREDIT_ID     
			     LEFT JOIN T_PRJT_CREDIT TPCT ON TPCE.CREDIT_ID=TPCT.ID
			     LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID     
			     LEFT JOIN (
				                SELECT T.RECT_ID,SUM(T1.REN_PRICE) accrual,T.TR_IRR_RATE tr
				                  FROM T_RENT_COLLECTIONPLAN T
				             LEFT JOIN T_RENT_COLLECTIONDETAIL T1 ON T1.RECP_ID=T.RECP_ID
				                 WHERE T.STATUS=0 AND T1.STATUS=0
				              GROUP BY T.RECT_ID,T.TR_IRR_RATE
			                ) O ON TRCT.RECT_ID=O.RECT_ID     
			         WHERE TSSR.STATUS=0
			           AND TSET.STATUS=0
			           AND TEET.STATUS=0
			           AND TRCL.STATUS=0
			           AND TRCT.STATUS=0
			           AND TPCE.STATUS=0
			           AND TPCT.STATUS=0
			           AND TCCR.STATUS=0
			           AND TPCT.FINANCECONTRACT_DATE IS NOT NULL
			           GROUP BY TSSR.ID,TSSR.NAME,TRCT.LEASE_CODE,O.accrual,O.tr,TRCT.RECT_ID,TRCL.RECP_ID        
    	</select>
    	
    	<select id="getDunCountResult" resultClass="com.brick.batchjob.to.SupplerContributeTo">
	    	  SELECT COUNT(O.RECD_PERIOD) dunCountByLease,O.recpId 
	      		FROM
		          (
                    SELECT TFCB.RECD_PERIOD,TFCB.RECP_ID recpId
                    					  FROM T_FINA_COLLECTIONBILL TFCB
                     			 LEFT JOIN T_FINA_INCOME TFI ON TFCB.FIIN_ID=TFI.FIIN_ID
                    		 			 WHERE (TFCB.FICB_STATE=4 OR TFCB.FICB_STATE=5)
                    					   AND TFI.RED_TYPE IS NULL AND TFCB.FICB_TYPE='0'
                    					   AND TFCB.FICB_ITEM=#DUN_TYPE#<!-- '租金' -->  
                    					   AND DATEDIFF(D,TFCB.PAY_DATE,OPPOSING_DATE)>=15
                    				  GROUP BY RECP_ID,TFCB.RECD_PERIOD
                              UNION
                    SELECT TRCP.PERIOD_NUM,TRCP.RECP_ID recpId
          			      FROM (          
                    			 SELECT TRCP.RECP_ID,
                        			    TRCD.PAY_DATE,
                        			    TRCD.PERIOD_NUM
                    			   FROM T_RENT_COLLECTIONPLAN TRCP
                  			LEFT JOIN T_RENT_CONTRACT TRC ON TRCP.RECT_ID=TRC.RECT_ID
                  			LEFT JOIN T_RENT_COLLECTIONDETAIL TRCD ON TRCP.RECP_ID=TRCD.RECP_ID
                    			  WHERE TRCP.STATUS=0 
                              AND TRC.STATUS=0
                    			    AND (TRCP.FUND_STATUS=0 OR TRCP.FUND_STATUS=1)
                  			      AND TRCD.PAY_DATE&lt;=CAST(GETDATE() AS DATETIME)-1
                    			    AND ISNULL(TRCD.IRR_MONTH_PRICE,0)-ISNULL(TRCD.REDUCE_OWN_PRICE,0)>0.001) TRCP 
          			        LEFT JOIN  
                            			(SELECT TFCB.RECP_ID, MAX(TFI.OPPOSING_DATE) OPPOSING_DATE,MAX(TFCB.RECD_PERIOD) RECD_PERIOD
                            			   FROM T_FINA_COLLECTIONBILL TFCB
                            	  LEFT JOIN T_FINA_INCOME TFI ON TFCB.FIIN_ID=TFI.FIIN_ID
                            			  WHERE TFI.OPPOSING_DATE&lt;=CAST(GETDATE() AS DATETIME)
                            			    AND (TFCB.FICB_STATE=4 OR TFCB.FICB_STATE=5)
                            			    AND TFI.RED_TYPE IS NULL 
                          			 GROUP BY RECP_ID
                            			 ) TFCD ON TRCP.RECP_ID=TFCD.RECP_ID AND TFCD.RECD_PERIOD=TRCP.PERIOD_NUM
                    			  WHERE (CASE WHEN TFCD.OPPOSING_DATE IS NULL OR TFCD.OPPOSING_DATE&lt;=TRCP.PAY_DATE 
                                        THEN DATEDIFF(D,TRCP.PAY_DATE,GETDATE()) 
                                        ELSE DATEDIFF(D,TFCD.OPPOSING_DATE,GETDATE()) 
                                         END)>0                             
                              AND DATEDIFF(D,TRCP.PAY_DATE,GETDATE())>=15                
                         GROUP BY TRCP.PERIOD_NUM,TRCP.RECP_ID
                            ) O
                            GROUP BY O.recpId
    	</select>
    	
    	<select id="getSuplUnitPriceSumByContract" resultClass="com.brick.batchjob.to.SupplerContributeTo">
  					  SELECT ROUND(SUM(O.UNIT_PRICE),0) unitPrice,O.LEASE_CODE leaseCode
				        FROM (
				                SELECT TSSR.ID,TSSR.NAME SUPL_NAME,SUM(TRCL.UNIT_PRICE) UNIT_PRICE,TRCT.LEASE_CODE
				                          FROM T_SUPL_SUPPLIER TSSR          
				                     LEFT JOIN T_SUPL_EQUIPMENT TSET ON TSSR.ID=TSET.SUPPLIER_ID
				                     LEFT JOIN T_EQMT_EQUIPMENT TEET ON TSET.SUEQ_ID=TEET.SUEQ_ID
				                     LEFT JOIN T_RENT_CONTRACTDETAIL TRCL ON TEET.EQMT_ID=TRCL.EQMT_ID
				                     LEFT JOIN T_RENT_CONTRACT TRCT ON TRCL.RECT_ID=TRCT.RECT_ID
				                     LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TRCT.PRCD_ID=TPCE.CREDIT_ID                     
				                     LEFT JOIN T_PRJT_CREDIT TPCT ON TPCE.CREDIT_ID=TPCT.ID
				                     LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID
				                         WHERE TSSR.STATUS=0
				                           AND TSET.STATUS=0
				                           AND TEET.STATUS=0
				                           AND TRCL.STATUS=0
				                           AND TRCT.STATUS=0
				                           AND TPCE.STATUS=0
				                           AND TPCT.STATUS=0
				                           AND TCCR.STATUS=0
				                           AND TPCT.FINANCECONTRACT_DATE IS NOT NULL                           
				                           GROUP BY TSSR.ID,TSSR.NAME,TRCT.LEASE_CODE
				                           ) O
				                       GROUP BY O.LEASE_CODE
				                       HAVING COUNT(O.LEASE_CODE)>1
    	</select>
    	
    	<select id="getPayMoneyByContract" resultClass="com.brick.batchjob.to.SupplerContributeTo">
    			                SELECT DISTINCT TPCT.CUST_ID custId,TCCR.CUST_NAME custName,TPCT.ID creditId,TSSR.ID suplId,TSSR.NAME suplName,TRCT.LEASE_CODE leaseCode,
						               ISNULL(ISNULL(TPCE.LEASE_TOPRIC,0)-ISNULL(TPCE.PLEDGE_PRICE,0),0) payMoney
						          FROM T_SUPL_SUPPLIER TSSR          
						     LEFT JOIN T_SUPL_EQUIPMENT TSET ON TSSR.ID=TSET.SUPPLIER_ID
						     LEFT JOIN T_EQMT_EQUIPMENT TEET ON TSET.SUEQ_ID=TEET.SUEQ_ID
						     LEFT JOIN T_RENT_CONTRACTDETAIL TRCL ON TEET.EQMT_ID=TRCL.EQMT_ID
						     LEFT JOIN T_RENT_CONTRACT TRCT ON TRCL.RECT_ID=TRCT.RECT_ID
						     LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TRCT.PRCD_ID=TPCE.CREDIT_ID     
						     LEFT JOIN T_PRJT_CREDIT TPCT ON TPCE.CREDIT_ID=TPCT.ID
						     LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID
						         WHERE TSSR.STATUS=0
						           AND TSET.STATUS=0
						           AND TEET.STATUS=0
						           AND TRCL.STATUS=0
						           AND TRCT.STATUS=0
						           AND TPCE.STATUS=0
						           AND TPCT.STATUS=0
						           AND TCCR.STATUS=0
						           AND TPCT.FINANCECONTRACT_DATE IS NOT NULL
    	</select>
    	
    	<select id="getLeaseCountBySupl" resultClass="com.brick.batchjob.to.SupplerContributeTo">
   				      SELECT COUNT(O.leaseCode) leaseCount,O.suplId,O.suplName
				        FROM (
				                  SELECT TSSR.ID suplId,TSSR.NAME suplName,SUM(TRCL.UNIT_PRICE) unitPrice,TRCT.LEASE_CODE leaseCode
				                    FROM T_SUPL_SUPPLIER TSSR          
				               LEFT JOIN T_SUPL_EQUIPMENT TSET ON TSSR.ID=TSET.SUPPLIER_ID
				               LEFT JOIN T_EQMT_EQUIPMENT TEET ON TSET.SUEQ_ID=TEET.SUEQ_ID
				               LEFT JOIN T_RENT_CONTRACTDETAIL TRCL ON TEET.EQMT_ID=TRCL.EQMT_ID
				               LEFT JOIN T_RENT_CONTRACT TRCT ON TRCL.RECT_ID=TRCT.RECT_ID
				               LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TRCT.PRCD_ID=TPCE.CREDIT_ID     
				               LEFT JOIN T_PRJT_CREDIT TPCT ON TPCE.CREDIT_ID=TPCT.ID
				               LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID
				                   WHERE TSSR.STATUS=0
				                     AND TSET.STATUS=0
				                     AND TEET.STATUS=0
				                     AND TRCL.STATUS=0
				                     AND TRCT.STATUS=0
				                     AND TPCE.STATUS=0
				                     AND TPCT.STATUS=0
				                     AND TCCR.STATUS=0
				                     AND TPCT.FINANCECONTRACT_DATE IS NOT NULL           
				                     GROUP BY TSSR.ID,TSSR.NAME,TRCT.LEASE_CODE
				              ) O
				              GROUP BY O.suplId,O.suplName
    	</select>
    	
    	<select id="getEquipmentCountBySupl" resultClass="com.brick.batchjob.to.SupplerContributeTo">
    			    SELECT COUNT(O.equipmentId) equipmentCount,O.suplId,O.suplName
				      FROM
				                (
				                SELECT TSSR.ID suplId,TSSR.NAME suplName,TRCL.EQMT_ID equipmentId,SUM(TRCL.UNIT_PRICE) unitPrice,TRCT.LEASE_CODE leaseCode
				                                    FROM T_SUPL_SUPPLIER TSSR          
				                               LEFT JOIN T_SUPL_EQUIPMENT TSET ON TSSR.ID=TSET.SUPPLIER_ID
				                               LEFT JOIN T_EQMT_EQUIPMENT TEET ON TSET.SUEQ_ID=TEET.SUEQ_ID
				                               LEFT JOIN T_RENT_CONTRACTDETAIL TRCL ON TEET.EQMT_ID=TRCL.EQMT_ID
				                               LEFT JOIN T_RENT_CONTRACT TRCT ON TRCL.RECT_ID=TRCT.RECT_ID
				                               LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TRCT.PRCD_ID=TPCE.CREDIT_ID     
				                               LEFT JOIN T_PRJT_CREDIT TPCT ON TPCE.CREDIT_ID=TPCT.ID
				                               LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID
				                                   WHERE TSSR.STATUS=0
				                                     AND TSET.STATUS=0
				                                     AND TEET.STATUS=0
				                                     AND TRCL.STATUS=0
				                                     AND TRCT.STATUS=0
				                                     AND TPCE.STATUS=0
				                                     AND TPCT.STATUS=0
				                                     AND TCCR.STATUS=0
				                                     AND TPCT.FINANCECONTRACT_DATE IS NOT NULL           
				                                     GROUP BY TSSR.ID,TSSR.NAME,TRCL.EQMT_ID,TRCT.LEASE_CODE
				                                     ) O
				                                     GROUP BY O.suplId,O.suplName
    	</select>
    	
    	<select id="getGrantPrice" resultClass="com.brick.batchjob.to.SupplerContributeTo">
    			  SELECT DISTINCT PRODUCT_ID suplId,ISNULL(GRANT_PRICE,0) grantPrice
					FROM T_PRODUCT_GRANTPLAN
				 WHERE STATUS=0
    	</select>
    	
    	<insert id="insertSuplContribute" parameterClass="com.brick.batchjob.to.SupplerContributeTo">
    			  INSERT INTO T_SUPPLER_CONTRIBUTE
    			  (SUPPLER_CONTRIBUTE_ID,SUPL_ID,SUPL_NAME,UNIT_PRICE,PAY_MONEY,LEASE_COUNT,EQUIPMENT_COUNT,ACCRUAL,TR,PRORATE,
    			   GRANT_PRICE,REST_GRANT_PRICE,STATUS,CREATE_ON,CREDIT_ID,CUST_ID,CUST_NAME,LEASE_CODE,REST_MONEY,REST_PERIOD,
    			   RECT_ID,RECP_ID,DUN_COUNT_BY_SUPL,DUN_COUNT_BY_LEASE) VALUES
    			  (#supplerContributeId#,#suplId#,#suplName#,#unitPrice#,#payMoney#,#leaseCount#,#equipmentCount#,#accrual#,#tr#,#prorate#,
    			   #grantPrice#,#restGrantPrice#,0,GETDATE(),#creditId#,#custId#,#custName#,#leaseCode#,#restMoney#,#restPeriod#,#rectId#,
    			   #recpId#,#dunCountBySupl#,#dunCountByLease#)
    	</insert>
    	
    	<select id="getSuplContributeTotalCount" resultClass="java.lang.Integer">
    				SELECT COUNT(O.suplId) FROM
    				(
    					SELECT SUPL_ID suplId,
				               SUPL_NAME suplName,
				               ROUND(SUM(PAY_MONEY),0) payMoney,
				               ROUND(SUM(ACCRUAL),0) accrual,
				               ROUND(AVG(TR),2) tr,
				               LEASE_COUNT leaseCount,
				               EQUIPMENT_COUNT equipmentCount,
				               GRANT_PRICE grantPrice,
				               REST_GRANT_PRICE restGrantPrice,
				               SUM(DUN_COUNT_BY_SUPL) dunCountBySupl,
				               ROUND(SUM(DUN_COUNT_BY_SUPL)/(LEASE_COUNT+0.0)*100,2) [percent]
				          FROM T_SUPPLER_CONTRIBUTE
				         WHERE STATUS=0
				           AND CONVERT(DATE,CREATE_ON)=CONVERT(DATE,GETDATE()-1)
				           <isNotEmpty property="SUPL_NAME">
				           AND SUPL_NAME LIKE '%$SUPL_NAME$%'
				           </isNotEmpty>
				      GROUP BY SUPL_ID,SUPL_NAME,
				               LEASE_COUNT,EQUIPMENT_COUNT,
				               GRANT_PRICE,REST_GRANT_PRICE
				     ) O
    	</select>
    	
    	<select id="getSuplContributeTotal" resultClass="com.brick.batchjob.to.SupplerContributeTo">
			SELECT t.SUPL_ID suplId,
			       t.SUPL_NAME suplName,
			       ROUND(SUM(t.PAY_MONEY),0) payMoney,
			       ROUND(SUM(t.ACCRUAL),0) accrual,
			       ROUND(AVG(t.TR),3) tr,
			       t.LEASE_COUNT leaseCount,
			       t.EQUIPMENT_COUNT equipmentCount,
			       t.GRANT_PRICE grantPrice,
			       t.REST_GRANT_PRICE restGrantPrice,
			       SUM(t.DUN_COUNT_BY_SUPL) dunCountBySupl,
			       ROUND(SUM(t.DUN_COUNT_BY_SUPL)/(t.LEASE_COUNT+0.0)*100,2) [percent]
			FROM T_SUPPLER_CONTRIBUTE t
			WHERE t.STATUS=0 AND CONVERT(DATE,t.CREATE_ON)=CONVERT(DATE,GETDATE()-1)
			 <isNotEmpty property="SUPL_NAME">
			 AND SUPL_NAME LIKE '%$SUPL_NAME$%'
			 </isNotEmpty>
			GROUP BY t.SUPL_ID,t.SUPL_NAME,t.LEASE_COUNT,t.EQUIPMENT_COUNT,t.GRANT_PRICE,t.REST_GRANT_PRICE
    	</select>
    	<!-- 以下增加起租日期、TR zhangbo20121228-->
    	<select id="getDetailBySuplId" resultClass="com.brick.batchjob.to.SupplerContributeTo">
	                  SELECT TSCE.CUST_NAME custName,
				             TSCE.LEASE_CODE leaseCode,
				             TSCE.UNIT_PRICE unitPrice,
				             TSCE.PAY_MONEY payMoney,
				             TSCE.REST_MONEY restMoney,
				             TSCE.REST_PERIOD restPeriod,
				             TSCE.RECT_ID rectId,
				             TSCE.RECP_ID recpId,
				             TSCE.DUN_COUNT_BY_LEASE dunCountByLease,
                     		 TRCN.RECP_CODE recpCode,
                     		 TDDY.FLAG status,
		                      TRCN.FIRST_PAYDATE  firstPaydate,
		                      ISNUll(ROUND(TRCN.TR_IRR_RATE,3),0)trrAte,
		                      isnull(x.total,0) as total_qty
				        FROM T_SUPPLER_CONTRIBUTE TSCE
           		   LEFT JOIN T_RENT_COLLECTIONPLAN TRCN ON TSCE.RECP_ID=TRCN.RECP_ID AND TRCN.STATUS=0
           		   LEFT JOIN T_DATA_DICTIONARY TDDY ON TRCN.SUPL_TRUE=TDDY.CODE AND TDDY.TYPE=#TYPE# AND TDDY.STATUS=0 <!-- '供应商保证' -->
					left join(
							select count(iv.ID) as total,su.ID
							from T_PRJT_INVOICE iv
							left join T_PRJT_CREDIT pc on iv.CREDIT_ID = pc.ID
							left join T_PRJT_CREDITEQUIPMENT ce on ce.CREDIT_ID = pc.ID
							left join T_SUPL_EQUIPMENT ee on ee.SUEQ_ID = ce.SUEQ_ID
							left join T_SUPL_SUPPLIER su on ee.SUPPLIER_ID = su.ID
							where iv.STATUS = 0 and iv.INVOICE_STATUS = 0
							group by su.ID
					) x on x.ID = TSCE.SUPL_ID    
				       
				       WHERE TSCE.STATUS=0
				         AND CONVERT(DATE,TSCE.CREATE_ON)=CONVERT(DATE,GETDATE()-1)
				         AND TSCE.SUPL_ID=#suplId#
				    ORDER BY TRCN.FIRST_PAYDATE
    	</select>
    	<!-- 以上增加起租日期、TR zhangbo20121228-->
    	<!-- 客户案况表的batch job -->
    	<select id="getCustCaseInfo" resultClass="com.brick.batchjob.to.CustomerCaseTo">
    	<!-- 报告驳回状态 -->
    	        SELECT TPCT.ID creditId,
		               '0' caseType,
		               DECP.DECP_ID deptId,
					   DECP.DECP_NAME_CN deptName,
					   TCCR.CUST_ID custId,
					   TCCR.CUST_NAME custName,
					   TPCE.SPONSOR introducer,
		               TDDY.FLAG leaseType,
		               T.CREDIT_VALUE equName,
		               ISNULL(PAY.PAY_MONEY,0) confirmMoney,
		               ISNULL(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0),0) payMoney,                 
		               ISNULL(CONVERT(DATETIME,TPV.REAL_VISIT_DATE),'1900-1-1') visitDate,
		               ISNULL(TPCT.COMMIT_WIND_DATE,'1900-1-1') giveDate,
		               ISNULL(T10.confirmDate,'1900-1-1') confirmDate,
		               ISNULL(PAY.EXPECTEDDATE,'1900-1-1') expectedDate,
		               ISNULL(PAY.PAY_DATE,'1900-1-1') payDate,
		               ISNULL(TPCE.START_DATE,'1900-1-1') startDate
		          FROM T_PRJT_CREDIT TPCT
		          LEFT JOIN T_USER_USER TUUR ON TPCT.SENSOR_ID=TUUR.ID
			   	    LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUUR.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
						  LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
						  LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID AND TCCR.STATUS=0
						  LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID=TPCT.ID AND TPCE.STATUS=0
						  LEFT JOIN T_DATA_DICTIONARY TDDY ON TDDY.TYPE=#TYPE# AND TDDY.CODE=TPCT.CONTRACT_TYPE AND TDDY.STATUS=0 <!-- 融资租赁合同类型 -->
						  LEFT JOIN QUERYCREDIT T ON T.CREDIT_ID=TPCT.ID
						  LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPCT.ID AND PAY.STATUS=0 AND BACKSTATE=0
						  LEFT JOIN T_PRJT_VISIT TPV ON TPCT.ID=TPV.CREDIT_ID AND TPV.STATUS=0 AND TPV.VISIT_STATUS>=3
						  LEFT JOIN (    SELECT MAX(T.CREATE_TIME) confirmDate,T2.ID 
								                    FROM T_PRJT_RISK_CONTROLMEMO T
								            	 LEFT JOIN T_PRJT_RISK_CONTROL T1 ON T.PRC_ID=T1.PRC_ID
								            	 LEFT JOIN T_PRJT_CREDIT T2 ON T2.ID=T1.CREDIT_ID
								                	 WHERE T.STATUS=0 AND T1.STATUS=0 AND T2.STATUS=0 AND T2.STATE=1 AND T2.WIND_STATE=1 AND T.PRCM_LEVEL IS NULL
								            	  GROUP BY T2.ID
								            	) T10 on T10.ID=TPCT.ID
						  LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCT.ID=TPCS.CREDIT_ID AND TPCS.STATUS=0
				         WHERE TPCT.STATE=2 
				           AND TPCT.STATUS=0
    						UNION ALL
    	<!-- 获得案况为资料中,已访厂的案件 -->
    			          SELECT DISTINCT TPCT.ID creditId,
				                 '1' caseType,
				                 DECP.DECP_ID deptId,
						         DECP.DECP_NAME_CN deptName,
				                 TCCR.CUST_ID custId,
						         TCCR.CUST_NAME custName,
				                 TPCE.SPONSOR introducer,
				                 TDDY.FLAG leaseType,
				                 T.CREDIT_VALUE equName,
				                 ISNULL(PAY.PAY_MONEY,0) confirmMoney,
				                 ISNULL(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0),0) payMoney,                 
				                 ISNULL(CONVERT(DATETIME,TPV.REAL_VISIT_DATE),'1900-1-1') visitDate,
				                 ISNULL(TPCT.COMMIT_WIND_DATE,'1900-1-1') giveDate,
				                 ISNULL(T10.confirmDate,'1900-1-1') confirmDate,
				                 ISNULL(PAY.EXPECTEDDATE,'1900-1-1') expectedDate,
				                 ISNULL(PAY.PAY_DATE,'1900-1-1') payDate,
				                 ISNULL(TPCE.START_DATE,'1900-1-1') startDate
				            FROM T_PRJT_CREDIT TPCT
				       LEFT JOIN T_USER_USER TUUR ON TPCT.SENSOR_ID=TUUR.ID
				   	   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUUR.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
					     LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
					     LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID AND TCCR.STATUS=0
				       LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID=TPCT.ID AND TPCE.STATUS=0
				       LEFT JOIN T_DATA_DICTIONARY TDDY ON TDDY.TYPE=#TYPE# AND TDDY.CODE=TPCT.CONTRACT_TYPE AND TDDY.STATUS=0 <!-- 融资租赁合同类型 -->
				       LEFT JOIN QUERYCREDIT T ON T.CREDIT_ID=TPCT.ID
				       LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPCT.ID AND PAY.STATUS=0 AND BACKSTATE=0
				       LEFT JOIN T_PRJT_VISIT TPV ON TPCT.ID=TPV.CREDIT_ID AND TPV.STATUS=0 AND TPV.VISIT_STATUS>=3
				       LEFT JOIN (    SELECT MAX(T.CREATE_TIME) confirmDate,T2.ID 
						                    FROM T_PRJT_RISK_CONTROLMEMO T
						            	 LEFT JOIN T_PRJT_RISK_CONTROL T1 ON T.PRC_ID=T1.PRC_ID
						            	 LEFT JOIN T_PRJT_CREDIT T2 ON T2.ID=T1.CREDIT_ID
						                	 WHERE T.STATUS=0 AND T1.STATUS=0 AND T2.STATUS=0 AND T2.STATE=1 AND T2.WIND_STATE=1 AND T.PRCM_LEVEL IS NULL
						            	  GROUP BY T2.ID
						            	) T10 on T10.ID=TPCT.ID
				       LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCT.ID=TPCS.CREDIT_ID AND TPCS.STATUS=0
				           WHERE TPCT.STATUS=0 
				             AND TPCT.STATE IN ('0','3')
		                     AND (TPCT.VIP_FLAG IS NULL OR TPCT.VIP_FLAG=0)                    
		                     AND (TPV.VISIT_STATUS&lt;3 OR TPV.VISIT_STATUS IS NULL) 
                     UNION ALL
                  		  SELECT DISTINCT TPCT.ID creditId,
				                 '2' caseType,
				                 DECP.DECP_ID deptId,
						         DECP.DECP_NAME_CN deptName,
				                 TCCR.CUST_ID custId,
						         TCCR.CUST_NAME custName,
				                 TPCE.SPONSOR introducer,
				                 TDDY.FLAG leaseType,
				                 T.CREDIT_VALUE equName,
				                 ISNULL(PAY.PAY_MONEY,0) confirmMoney,
				                 ISNULL(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0),0) payMoney,                 
				                 ISNULL(CONVERT(DATETIME,TPV.REAL_VISIT_DATE),'1900-1-1') visitDate,
				                 ISNULL(TPCT.COMMIT_WIND_DATE,'1900-1-1') giveDate,
				                 ISNULL(T10.confirmDate,'1900-1-1') confirmDate,
				                 ISNULL(PAY.EXPECTEDDATE,'1900-1-1') expectedDate,
				                 ISNULL(PAY.PAY_DATE,'1900-1-1') payDate,
				                 ISNULL(TPCE.START_DATE,'1900-1-1') startDate
				            FROM T_PRJT_CREDIT TPCT
				       LEFT JOIN T_USER_USER TUUR ON TPCT.SENSOR_ID=TUUR.ID
				   	   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUUR.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
					   LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
					   LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID AND TCCR.STATUS=0
				       LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID=TPCT.ID AND TPCE.STATUS=0
				       LEFT JOIN T_DATA_DICTIONARY TDDY ON TDDY.TYPE=#TYPE# AND TDDY.CODE=TPCT.CONTRACT_TYPE AND TDDY.STATUS=0 <!-- 融资租赁合同类型 -->
				       LEFT JOIN QUERYCREDIT T ON T.CREDIT_ID=TPCT.ID
				       LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPCT.ID AND PAY.STATUS=0 AND BACKSTATE=0
				       LEFT JOIN T_PRJT_VISIT TPV ON TPCT.ID=TPV.CREDIT_ID AND TPV.STATUS=0 AND TPV.VISIT_STATUS>=3
				       LEFT JOIN (    SELECT MAX(T.CREATE_TIME) confirmDate,T2.ID 
						                    FROM T_PRJT_RISK_CONTROLMEMO T
						            	 LEFT JOIN T_PRJT_RISK_CONTROL T1 ON T.PRC_ID=T1.PRC_ID
						            	 LEFT JOIN T_PRJT_CREDIT T2 ON T2.ID=T1.CREDIT_ID
						                	 WHERE T.STATUS=0 AND T1.STATUS=0 AND T2.STATUS=0 AND T2.STATE=1 AND T2.WIND_STATE=1 AND T.PRCM_LEVEL IS NULL
						            	  GROUP BY T2.ID
						            	) T10 on T10.ID=TPCT.ID
				       LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCT.ID=TPCS.CREDIT_ID AND TPCS.STATUS=0
				           WHERE TPCT.STATUS=0 
				             AND TPCT.STATE IN ('0','3')
		                     AND (TPCT.VIP_FLAG IS NULL OR TPCT.VIP_FLAG=0)
		                     AND TPV.VISIT_STATUS>=3
				             UNION ALL
				    <!-- 获得案况为审核中的案件 -->
       			          SELECT DISTINCT TPCT.ID creditId,
				                 '3' caseType,
				                 DECP.DECP_ID deptId,
						         DECP.DECP_NAME_CN deptName,
				                 TCCR.CUST_ID custId,
						         TCCR.CUST_NAME custName,
				                 TPCE.SPONSOR introducer,
				                 TDDY.FLAG leaseType,
				                 T.CREDIT_VALUE equName,
				                 ISNULL(PAY.PAY_MONEY,0) confirmMoney,
				                 ISNULL(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0),0) payMoney,                 
				                 ISNULL(CONVERT(DATETIME,TPV.REAL_VISIT_DATE),'1900-1-1') visitDate,
				                 ISNULL(TPCT.COMMIT_WIND_DATE,'1900-1-1') giveDate,
				                 ISNULL(T10.confirmDate,'1900-1-1') confirmDate,
				                 ISNULL(PAY.EXPECTEDDATE,'1900-1-1') expectedDate,
				                 ISNULL(PAY.PAY_DATE,'1900-1-1') payDate,
				                 ISNULL(TPCE.START_DATE,'1900-1-1') startDate
				            FROM T_PRJT_CREDIT TPCT
				       LEFT JOIN T_USER_USER TUUR ON TPCT.SENSOR_ID=TUUR.ID
				   	   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUUR.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
					   LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
					   LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID AND TCCR.STATUS=0
				       LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID=TPCT.ID AND TPCE.STATUS=0
				       LEFT JOIN T_DATA_DICTIONARY TDDY ON TDDY.TYPE=#TYPE# AND TDDY.CODE=TPCT.CONTRACT_TYPE AND TDDY.STATUS=0 <!-- 融资租赁合同类型 -->
				       LEFT JOIN QUERYCREDIT T ON T.CREDIT_ID=TPCT.ID
				       LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPCT.ID AND PAY.STATUS=0 AND BACKSTATE=0
				       LEFT JOIN T_PRJT_VISIT TPV ON TPCT.ID=TPV.CREDIT_ID AND TPV.STATUS=0 AND TPV.VISIT_STATUS>=3
				       LEFT JOIN (    SELECT MAX(T.CREATE_TIME) confirmDate,T2.ID 
						                    FROM T_PRJT_RISK_CONTROLMEMO T
						               LEFT JOIN T_PRJT_RISK_CONTROL T1 ON T.PRC_ID=T1.PRC_ID
						               LEFT JOIN T_PRJT_CREDIT T2 ON T2.ID=T1.CREDIT_ID
						                	 WHERE T.STATUS=0 AND T1.STATUS=0 AND T2.STATUS=0 AND T2.STATE=1 AND T2.WIND_STATE=1 AND T.PRCM_LEVEL IS NULL
						            	  GROUP BY T2.ID
						            	) T10 on T10.ID=TPCT.ID
				       LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCT.ID=TPCS.CREDIT_ID AND TPCS.STATUS=0
		               LEFT JOIN T_PRJT_CREDITMEMO TPCO ON TPCT.ID=TPCO.CREDIT_ID AND TPCO.STATE=1 AND TPCO.STATUS=0
 	   				   <!-- LEFT JOIN T_PRJT_RISK_CONTROL TPRC ON TPRC.PRC_ID=TPCO.TPRC_ID -->
				           WHERE TPCT.ID IN
				             <!-- TPCT.STATUS=0 
				             AND TPCT.STATE='1'
				             AND TPCT.WIND_STATE IS NULL 
				             AND TPRC.STATE IS NULL 
				             AND TPRC.PRC_LEVEL_ID IS NULL -->
				             (
				             	SELECT TPC.ID CREDIT_ID
		      				    	   FROM T_PRJT_CREDIT TPC
		      					  LEFT JOIN T_PRJT_CREDITMEMO TPCO ON TPC.ID=TPCO.CREDIT_ID AND TPCO.STATE=1 AND TPCO.STATUS=0
		      					  LEFT JOIN T_PRJT_RISK_CONTROL TPRC ON TPRC.PRC_ID=TPCO.TPRC_ID				    
		      					      WHERE TPC.STATE=1 
		      				          AND TPC.STATUS=0 
		      				          AND TPC.WIND_STATE IS NULL 
		      				          AND TPRC.STATE IS NULL
		      				     
		      				        UNION<!-- 1级评审 -->
		                      
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID				   
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=0 
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;1 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=0
		      				    
		      				        UNION<!-- 2级评审 -->
		                      
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=1 
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;2 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=1
		      				    
		      				        UNION<!-- 3级评审 -->
		                      
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=2 
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;3 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=2
		      				   
		      				        UNION<!-- 4级评审 -->
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=3 
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;4 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=3
				             )
				             UNION ALL
		             <!-- 获得案况为已核准未拨款,缓拨的案件 -->
			           SELECT DISTINCT TPCT.ID creditId,
			           		  CASE WHEN TPCT.DELAY_PAY_STATUS IS NULL
			           		  	   THEN '4'<!-- 4已核准,5是缓拨的 -->
			           		  	   WHEN TPCT.DELAY_PAY_STATUS=0
			           		  	   THEN '4'
			           		  	   ELSE '5'
			           		  	    END caseType,
			                  DECP.DECP_ID deptId,
					              DECP.DECP_NAME_CN deptName,
			                  TCCR.CUST_ID custId,
					          TCCR.CUST_NAME custName,
			                  TPCE.SPONSOR introducer,
			                  TDDY.FLAG leaseType,
			                  T.CREDIT_VALUE equName,
			                  0 confirmMoney,
			                  CASE WHEN PRJT.APPRORIATEMON IS NULL
								   THEN 0
								   ELSE PRJT.APPRORIATEMON
								    END +
							  CASE WHEN PRJT1.APPRORIATEMON IS NULL
							       THEN 0
								   ELSE PRJT1.APPRORIATEMON
								    END payMoney,
			                  ISNULL(CONVERT(DATETIME,TPV.REAL_VISIT_DATE),'1900-1-1') visitDate,
				                 ISNULL(TPCT.COMMIT_WIND_DATE,'1900-1-1') giveDate,
				                 ISNULL(T10.confirmDate,'1900-1-1') confirmDate,
				                 ISNULL(PAY.EXPECTEDDATE,'1900-1-1') expectedDate,
				                 ISNULL(PAY.PAY_DATE,'1900-1-1') payDate,
				                 ISNULL(TPCE.START_DATE,'1900-1-1') startDate      
			             FROM T_PRJT_CREDIT TPCT
			        LEFT JOIN T_RENT_CONTRACT TRC ON TRC.PRCD_ID=TPCT.ID
			        LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT ON TPCT.ID=PRJT.CREDIT_ID AND PRJT.STATUS=0 AND PRJT.TYPE=1 
			        LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT1 ON TPCT.ID=PRJT1.CREDIT_ID AND PRJT1.STATUS=0 AND PRJT1.TYPE=0
			        
			        LEFT JOIN T_USER_USER TUUR ON TPCT.SENSOR_ID=TUUR.ID
					LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUUR.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
					LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
					LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID AND TCCR.STATUS=0
					LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID=TPCT.ID AND TPCE.STATUS=0
					LEFT JOIN T_DATA_DICTIONARY TDDY ON TDDY.TYPE=#TYPE# AND TDDY.CODE=TPCT.CONTRACT_TYPE AND TDDY.STATUS=0 <!-- 融资租赁合同类型 -->
					LEFT JOIN QUERYCREDIT T ON T.CREDIT_ID=TPCT.ID
					LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPCT.ID AND PAY.STATUS=0 AND BACKSTATE=0
					LEFT JOIN T_PRJT_VISIT TPV ON TPCT.ID=TPV.CREDIT_ID AND TPV.STATUS=0 AND TPV.VISIT_STATUS>=3
					LEFT JOIN (  SELECT MAX(T.CREATE_TIME) confirmDate,T2.ID 
					                      FROM T_PRJT_RISK_CONTROLMEMO T
					            	 LEFT JOIN T_PRJT_RISK_CONTROL T1 ON T.PRC_ID=T1.PRC_ID
					            	 LEFT JOIN T_PRJT_CREDIT T2 ON T2.ID=T1.CREDIT_ID
					                	 WHERE T.STATUS=0 AND T1.STATUS=0 AND T2.STATUS=0 AND T2.STATE=1 AND T2.WIND_STATE=1 AND T.PRCM_LEVEL IS NULL
					            	  GROUP BY T2.ID
					            	) T10 on T10.ID=TPCT.ID
			            WHERE TPCT.STATUS=0
			           	  AND (TPCT.WIND_STATE=1 OR TPCT.WIND_STATE=2)
			          	  AND (TRC.STATUS=0 OR TRC.STATUS IS NULL) 
			          	  AND TPCT.FINANCECONTRACT_DATE IS NULL
			              AND DATEDIFF(DAY,TPCT.WIND_RESULT_DATE,GETDATE())&lt;=TPCT.VALID_DAY  
			              UNION ALL
			         <!-- 获得案况为已过期的案件 --> 
			                SELECT O.CREDIT_ID creditId,
							       '6' caseType,
							       DECP.DECP_ID deptId,
							       DECP.DECP_NAME_CN deptName,
							       TCCR.CUST_ID custId,
							       TCCR.CUST_NAME custName,
							       TPCE.SPONSOR introducer,
							       TDDY.FLAG leaseType,
							       T1.CREDIT_VALUE equName,
							       0 confirmMoney,
							        CASE WHEN PRJT.APPRORIATEMON IS NULL
							             THEN 0
							             ELSE PRJT.APPRORIATEMON
							              END +
										  CASE WHEN PRJT1.APPRORIATEMON IS NULL
										       THEN 0
											     ELSE PRJT1.APPRORIATEMON
											      END payMoney,
							         ISNULL(CONVERT(DATETIME,TPV.REAL_VISIT_DATE),'1900-1-1') visitDate,
							         ISNULL(TPCT.COMMIT_WIND_DATE,'1900-1-1') giveDate,
							         ISNULL(T10.confirmDate,'1900-1-1') confirmDate,
							         ISNULL(PAY.EXPECTEDDATE,'1900-1-1') expectedDate,
							         ISNULL(PAY.PAY_DATE,'1900-1-1') payDate,
							         ISNULL(TPCE.START_DATE,'1900-1-1') startDate
							  FROM
							                (
							                SELECT MIN(T1.CREATE_TIME) CREATE_TIME,T.CREDIT_ID,MAX(PC.VALID_DAY) VALID_DAY
							            			FROM T_PRJT_RISK_CONTROL T
							             LEFT JOIN T_PRJT_RISK_CONTROLMEMO T1 ON T.PRC_ID=T1.PRC_ID AND T1.STATUS=0 AND T1.PRCM_LEVEL IS NULL
							             LEFT JOIN T_PRJT_CREDIT PC ON T.CREDIT_ID = PC.ID AND PC.STATUS = 0
							            		 WHERE T.STATUS=0 AND T.STATE IN (1,2)
							              GROUP BY T.CREDIT_ID
							                ) O
							       LEFT JOIN (
							                SELECT T.CREDIT_ID,
							                       SUM(CASE WHEN T.STATE=0 OR T.STATE=1 THEN T.PAY_MONEY END) PAY_MONEYSHENHE,
							                       SUM(CASE WHEN T.STATE=3 THEN T.PAY_MONEY END) PAY_MONEY                       
							                  FROM T_SUPL_PLAYDETIL T 
							                 WHERE BACKSTATE='0' 
							                   AND STATUS=0                    
							              GROUP BY T.CREDIT_ID
							       ) T ON O.CREDIT_ID = T.CREDIT_ID
							       LEFT JOIN T_PRJT_CREDIT TPCT ON TPCT.ID = O.CREDIT_ID AND TPCT.STATUS = 0
							       LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT ON TPCT.ID=PRJT.CREDIT_ID AND PRJT.STATUS=0 AND PRJT.TYPE=1 
							       LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT1 ON TPCT.ID=PRJT1.CREDIT_ID AND PRJT1.STATUS=0 AND PRJT1.TYPE=0
							       LEFT JOIN T_PRJT_VISIT TPV ON TPCT.ID=TPV.CREDIT_ID AND TPV.STATUS=0 AND TPV.VISIT_STATUS>=3
							       LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID = TCCR.CUST_ID
							       LEFT JOIN T_RENT_CONTRACT TRCT ON TPCT.ID = TRCT.PRCD_ID
							       LEFT JOIN T_USER_USER TUUR ON TPCT.SENSOR_ID=TUUR.ID
								   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUUR.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
								   LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
							       LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID=TPCT.ID AND TPCE.STATUS=0
							       LEFT JOIN T_DATA_DICTIONARY TDDY ON TDDY.TYPE=#TYPE# AND TDDY.CODE=TPCT.CONTRACT_TYPE AND TDDY.STATUS=0 <!-- 融资租赁合同类型 -->
							       LEFT JOIN QUERYCREDIT T1 ON T1.CREDIT_ID=TPCT.ID   
							       LEFT JOIN (  SELECT MAX(T.CREATE_TIME) confirmDate,T2.ID 
												                      FROM T_PRJT_RISK_CONTROLMEMO T
												            	 LEFT JOIN T_PRJT_RISK_CONTROL T1 ON T.PRC_ID=T1.PRC_ID
												            	 LEFT JOIN T_PRJT_CREDIT T2 ON T2.ID=T1.CREDIT_ID
												                	 WHERE T.STATUS=0 AND T1.STATUS=0 AND T2.STATUS=0 AND T2.STATE=1 AND T2.WIND_STATE=1 AND T.PRCM_LEVEL IS NULL
												            	  GROUP BY T2.ID
												            	) T10 on T10.ID=TPCT.ID
							       LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPCT.ID AND PAY.STATUS=0 AND BACKSTATE=0
							            WHERE (O.CREATE_TIME IS NULL OR DATEDIFF(DAY,O.CREATE_TIME,GETDATE()) > O.VALID_DAY)
							              AND T.PAY_MONEY IS NULL
							              AND T.PAY_MONEYSHENHE IS NULL
							              AND TPCT.FINANCECONTRACT_DATE IS NULL
							              AND TPCT.STATE=1
							              AND (TRCT.STATUS IS NULL OR TRCT.STATUS=0)
			              UNION ALL
			        <!-- 获得案况为已拨款的案件 --> 
		                 SELECT DISTINCT TPCT.ID creditId,
				          	    '7' caseType,
				          		DECP.DECP_ID deptId,
						        DECP.DECP_NAME_CN deptName,
							    TCCR.CUST_ID custId,
							    TCCR.CUST_NAME custName,
							    TPCE.SPONSOR introducer,
				          		TDDY.FLAG leaseType,
							    T.CREDIT_VALUE equName,
				                ISNULL(ISNULL(TPCE.LEASE_TOPRIC,0)-ISNULL(TPCE.PLEDGE_PRICE,0),0) confirmMoney,
				                ISNULL(ISNULL(TPCE.LEASE_TOPRIC,0)-ISNULL(TPCE.PLEDGE_PRICE,0),0) payMoney,
				                ISNULL(CONVERT(DATETIME,TPV.REAL_VISIT_DATE),'1900-1-1') visitDate,
				                ISNULL(TPCT.COMMIT_WIND_DATE,'1900-1-1') giveDate,
				                ISNULL(T10.confirmDate,'1900-1-1') confirmDate,
				                '1900-1-1' expectedDate,
				                ISNULL(TPCT.FINANCECONTRACT_DATE,'1900-1-1') payDate,
				                ISNULL(TPCE.START_DATE,'1900-1-1') startDate
				           FROM T_PRJT_CREDIT TPCT
				      LEFT JOIN T_USER_USER TUUR ON TPCT.SENSOR_ID=TUUR.ID
					  LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUUR.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
					  LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
					  LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID AND TCCR.STATUS=0 
				      LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID=TPCT.ID AND TPCE.STATUS=0
				      LEFT JOIN T_DATA_DICTIONARY TDDY ON TDDY.TYPE=#TYPE# AND TDDY.CODE=TPCT.CONTRACT_TYPE AND TDDY.STATUS=0 <!-- 融资租赁合同类型 -->
					  LEFT JOIN QUERYCREDIT T ON T.CREDIT_ID=TPCT.ID
				      LEFT JOIN T_PRJT_VISIT TPV ON TPCT.ID=TPV.CREDIT_ID AND TPV.STATUS=0 AND TPV.VISIT_STATUS>=3
					  LEFT JOIN (   SELECT MAX(T.CREATE_TIME) confirmDate,T2.ID 
				                      FROM T_PRJT_RISK_CONTROLMEMO T
				            	 LEFT JOIN T_PRJT_RISK_CONTROL T1 ON T.PRC_ID=T1.PRC_ID
				            	 LEFT JOIN T_PRJT_CREDIT T2 ON T2.ID=T1.CREDIT_ID
				                	 WHERE T.STATUS=0 AND T1.STATUS=0 AND T2.STATUS=0 AND T2.STATE=1 AND T2.WIND_STATE=1 AND T.PRCM_LEVEL IS NULL
				            	  GROUP BY T2.ID
				            	) T10 on T10.ID=TPCT.ID
				          WHERE TPCT.STATUS=0 
                  	        AND TPCT.FINANCECONTRACT_DATE IS NOT NULL	
			             UNION ALL
			      <!-- 获得案况为已撤销的案件 -->  
			      		  SELECT DISTINCT TPCT.ID creditId,
    				             '8' caseType,
    				             DECP.DECP_ID deptId,
    						     DECP.DECP_NAME_CN deptName,
    				             TCCR.CUST_ID custId,
    						     TCCR.CUST_NAME custName,
				                 TPCE.SPONSOR introducer,
				                 TDDY.FLAG leaseType,
				                 T.CREDIT_VALUE equName,
				                 ISNULL(PAY.PAY_MONEY,0) confirmMoney,
				                 ISNULL(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0),0) payMoney,                 
				                 ISNULL(CONVERT(DATETIME,TPV.REAL_VISIT_DATE),'1900-1-1') visitDate,
				                 ISNULL(TPCT.COMMIT_WIND_DATE,'1900-1-1') giveDate,
				                 ISNULL(T10.confirmDate,'1900-1-1') confirmDate,
				                 ISNULL(PAY.EXPECTEDDATE,'1900-1-1') expectedDate,
				                 ISNULL(PAY.PAY_DATE,'1900-1-1') payDate,
				                 ISNULL(TPCE.START_DATE,'1900-1-1') startDate
				            FROM T_PRJT_CREDIT TPCT
				       LEFT JOIN T_USER_USER TUUR ON TPCT.SENSOR_ID=TUUR.ID
				   	   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUUR.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
				       LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
					   LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID AND TCCR.STATUS=0
				       LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID=TPCT.ID AND TPCE.STATUS=0
				       LEFT JOIN T_DATA_DICTIONARY TDDY ON TDDY.TYPE=#TYPE# AND TDDY.CODE=TPCT.CONTRACT_TYPE AND TDDY.STATUS=0 <!-- 融资租赁合同类型 -->
				       LEFT JOIN QUERYCREDIT T ON T.CREDIT_ID=TPCT.ID
				       LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPCT.ID AND PAY.STATUS=0 AND BACKSTATE=0
				       LEFT JOIN T_PRJT_VISIT TPV ON TPCT.ID=TPV.CREDIT_ID AND TPV.STATUS=0 AND TPV.VISIT_STATUS>=3
				       LEFT JOIN (    SELECT MAX(T.CREATE_TIME) confirmDate,T2.ID 
						                    FROM T_PRJT_RISK_CONTROLMEMO T
						            	 LEFT JOIN T_PRJT_RISK_CONTROL T1 ON T.PRC_ID=T1.PRC_ID
						            	 LEFT JOIN T_PRJT_CREDIT T2 ON T2.ID=T1.CREDIT_ID
						                	 WHERE T.STATUS=0 AND T1.STATUS=0 AND T2.STATUS=0 AND T2.STATE=1 AND T2.WIND_STATE=1 AND T.PRCM_LEVEL IS NULL
						            	  GROUP BY T2.ID
						            	) T10 on T10.ID=TPCT.ID
				       LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCT.ID=TPCS.CREDIT_ID AND TPCS.STATUS=0
				           WHERE TPCT.STATUS=0 
				             AND TPCT.STATE=-1
				             <!-- 案况为已婉拒 -->
				             UNION ALL
                          SELECT DISTINCT TPCT.ID creditId,
				                 '9' caseType,
				                 DECP.DECP_ID deptId,
						         DECP.DECP_NAME_CN deptName,
				                 TCCR.CUST_ID custId,
						         TCCR.CUST_NAME custName,
				                 TPCE.SPONSOR introducer,
				                 TDDY.FLAG leaseType,
				                 T.CREDIT_VALUE equName,
				                 ISNULL(PAY.PAY_MONEY,0) confirmMoney,
				                 ISNULL(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0),0) payMoney,                 
				                 ISNULL(CONVERT(DATETIME,TPV.REAL_VISIT_DATE),'1900-1-1') visitDate,
				                 ISNULL(TPCT.COMMIT_WIND_DATE,'1900-1-1') giveDate,
				                 ISNULL(T10.confirmDate,'1900-1-1') confirmDate,
				                 ISNULL(PAY.EXPECTEDDATE,'1900-1-1') expectedDate,
				                 ISNULL(PAY.PAY_DATE,'1900-1-1') payDate,
				                 ISNULL(TPCE.START_DATE,'1900-1-1') startDate
				            FROM T_PRJT_CREDIT TPCT
				       LEFT JOIN T_USER_USER TUUR ON TPCT.SENSOR_ID=TUUR.ID
				   	   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUUR.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
					   LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
					   LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID AND TCCR.STATUS=0
				       LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID=TPCT.ID AND TPCE.STATUS=0
				       LEFT JOIN T_DATA_DICTIONARY TDDY ON TDDY.TYPE=#TYPE# AND TDDY.CODE=TPCT.CONTRACT_TYPE AND TDDY.STATUS=0 <!-- 融资租赁合同类型 -->
				       LEFT JOIN QUERYCREDIT T ON T.CREDIT_ID=TPCT.ID
				       LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPCT.ID AND PAY.STATUS=0 AND BACKSTATE=0
				       LEFT JOIN T_PRJT_VISIT TPV ON TPCT.ID=TPV.CREDIT_ID AND TPV.STATUS=0 AND TPV.VISIT_STATUS>=3
				       LEFT JOIN (    SELECT MAX(T.CREATE_TIME) confirmDate,T2.ID 
					                    FROM T_PRJT_RISK_CONTROLMEMO T
					               LEFT JOIN T_PRJT_RISK_CONTROL T1 ON T.PRC_ID=T1.PRC_ID
					               LEFT JOIN T_PRJT_CREDIT T2 ON T2.ID=T1.CREDIT_ID
					                   WHERE T.STATUS=0 AND T1.STATUS=0 AND T2.STATUS=0 AND T2.STATE=1 AND T2.WIND_STATE=1 AND T.PRCM_LEVEL IS NULL
					            	GROUP BY T2.ID
						            	) T10 on T10.ID=TPCT.ID
				       LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCT.ID=TPCS.CREDIT_ID AND TPCS.STATUS=0
            		   LEFT JOIN T_PRJT_CREDITMEMO TPCO ON TPCT.ID=TPCO.CREDIT_ID AND TPCO.STATE=1 AND TPCO.STATUS=0
 	   				   LEFT JOIN T_PRJT_RISK_CONTROL TPRC ON TPRC.PRC_ID=TPCO.TPRC_ID 
				           WHERE TPCT.STATUS=0
				             AND TPRC.STATE=4
				             UNION ALL
				             <!-- 合同已撤销 -->
				           SELECT DISTINCT TPCT.ID creditId,
								   '10' caseType,
								   DECP.DECP_ID deptId,
									 DECP.DECP_NAME_CN deptName,
								   TCCR.CUST_ID custId,
									 TCCR.CUST_NAME custName,
								   TPCE.SPONSOR introducer,
								   TDDY.FLAG leaseType,
								   T.CREDIT_VALUE equName,
						           ISNULL(PAY.PAY_MONEY,0) confirmMoney,
						           ISNULL(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0),0) payMoney,                 
						           ISNULL(CONVERT(DATETIME,TPV.REAL_VISIT_DATE),'1900-1-1') visitDate,
						           ISNULL(TPCT.COMMIT_WIND_DATE,'1900-1-1') giveDate,
						           ISNULL(T10.confirmDate,'1900-1-1') confirmDate,
						           ISNULL(PAY.EXPECTEDDATE,'1900-1-1') expectedDate,
						           ISNULL(PAY.PAY_DATE,'1900-1-1') payDate,
						           ISNULL(TPCE.START_DATE,'1900-1-1') startDate 
						     FROM T_RENT_CONTRACT TRCT 
						LEFT JOIN T_PRJT_CREDIT TPCT ON TRCT.PRCD_ID=TPCT.ID AND TPCT.STATUS=0
						LEFT JOIN T_USER_USER TUUR ON TPCT.SENSOR_ID=TUUR.ID
						LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUUR.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
						LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
						LEFT JOIN T_CUST_CUSTOMER TCCR ON TPCT.CUST_ID=TCCR.CUST_ID AND TCCR.STATUS=0
						LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID=TPCT.ID AND TPCE.STATUS=0
						LEFT JOIN T_DATA_DICTIONARY TDDY ON TDDY.TYPE=#TYPE# AND TDDY.CODE=TPCT.CONTRACT_TYPE AND TDDY.STATUS=0 <!-- 融资租赁合同类型 -->
						LEFT JOIN QUERYCREDIT T ON T.CREDIT_ID=TPCT.ID
						LEFT JOIN T_SUPL_PLAYDETIL PAY ON PAY.CREDIT_ID=TPCT.ID AND PAY.STATUS=0 AND BACKSTATE=0
						LEFT JOIN T_PRJT_VISIT TPV ON TPCT.ID=TPV.CREDIT_ID AND TPV.STATUS=0 AND TPV.VISIT_STATUS>=3
						LEFT JOIN (   SELECT MAX(T.CREATE_TIME) confirmDate,T2.ID 
						                FROM T_PRJT_RISK_CONTROLMEMO T
						        	 LEFT JOIN T_PRJT_RISK_CONTROL T1 ON T.PRC_ID=T1.PRC_ID
						        	 LEFT JOIN T_PRJT_CREDIT T2 ON T2.ID=T1.CREDIT_ID
						            	 WHERE T.STATUS=0 AND T1.STATUS=0 AND T2.STATUS=0 AND T2.STATE=1 AND T2.WIND_STATE=1 AND T.PRCM_LEVEL IS NULL
						        	  GROUP BY T2.ID
						        	) T10 ON T10.ID=TPCT.ID
						LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCT.ID=TPCS.CREDIT_ID AND TPCS.STATUS=0
						    WHERE TRCT.STATUS=-1
    	</select>
    	
    	<insert id="insertCustCaseData" parameterClass="com.brick.batchjob.to.CustomerCaseTo">
    			INSERT INTO T_CUSTOMER_CASE
    			(CUSTOMER_CASE_ID,CREDIT_ID,CASE_TYPE,DEPT_ID,DEPT_NAME,CUST_ID,CUST_NAME,INTRODUCER,LEASE_TYPE,EQU_NAME,
    			 CONFIRM_MONEY,PAY_MONEY,VISIT_DATE,GIVE_DATE,CONFIRM_DATE,EXPECTED_DATE,PAY_DATE,START_DATE,CREATE_ON,STATUS)
    			VALUES
    			(#custCaseId#,#creditId#,#caseType#,#deptId#,#deptName#,#custId#,#custName#,#introducer#,#leaseType#,#equName#,
    			 #confirmMoney#,#payMoney#,#visitDate#,#giveDate#,#confirmDate#,#expectedDate#,#payDate#,#startDate#,GETDATE(),0)
    	</insert>
    	
    	<select id="queryCustomerCaseCount" resultClass="java.lang.Integer">
    				  SELECT COUNT(O.count) FROM (
			    				  SELECT COUNT(1) count            
							        FROM T_CUSTOMER_CASE TCC
							   LEFT JOIN T_CUST_CUSTOMER TCCR ON TCCR.CUST_ID=TCC.CUST_ID
							   LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID=TCC.CREDIT_ID
							   LEFT JOIN T_USER_USER TUU ON TUU.ID=TPC.SENSOR_ID
							   LEFT JOIN T_DATA_DICTIONARY TDD ON TDD.CODE=TCC.CASE_TYPE AND TDD.TYPE=#TYPE# <!-- 客户案况表中的案况状态 -->
							       WHERE CONVERT(DATE,TCC.CREATE_ON)=CONVERT(DATE,GETDATE()-1)
							         AND TPC.STATUS=0
							         AND TCC.STATUS=0
							         AND TDD.STATUS=0
							         AND TCCR.STATUS=0
							     <isEqual property="p_usernode" compareValue="1">
							     	 AND (TPC.SENSOR_ID=#s_employeeId# OR TPC.CLERK_ID=#s_employeeId#)
							     </isEqual>
							     <isEqual property="p_usernode" compareValue="2">
							         AND
							     	 EXISTS (
							     	 		 SELECT ID 
							     	 		   FROM T_USER_USER 
						     	 		      WHERE DEPT_ID IN (SELECT UC.DEPT_ID 
     	 		 											      FROM T_USER_USER2COMPANY UC
															     WHERE UC.USER_ID=#s_employeeId#)
							     	 		 	AND ID=TPC.SENSOR_ID
							     	 		 )
							     </isEqual>
						         <isNotEmpty property="CASE_TYPE">
						         	  AND TCC.CASE_TYPE=#CASE_TYPE#
						         </isNotEmpty>
						         <isNotEmpty property="DEPT_ID">
						         	 AND TCC.DEPT_ID=#DEPT_ID#
						         </isNotEmpty>
						         <isNotEmpty property="USER_NAME">
						         	 AND TUU.NAME LIKE '%$USER_NAME$%'
						         </isNotEmpty>
						         <isNotEmpty property="CUST_NAME">
						         	 AND TCCR.CUST_NAME LIKE '%$CUST_NAME$%'
						         </isNotEmpty>
						         <isEqual property="DATE_TYPE" compareValue="1"><!-- 1代表预估拨款日 -->
						         	 <isNotEmpty property="START_DATE">
						         	 	AND CONVERT(DATE,TCC.EXPECTED_DATE)>=CONVERT(DATE,#START_DATE#)
						         	 </isNotEmpty>
						         	 <isNotEmpty property="END_DATE">
						         	 	AND CONVERT(DATE,TCC.EXPECTED_DATE)&lt;=CONVERT(DATE,#END_DATE#)
						         	 </isNotEmpty>
						         </isEqual>
						         <isEqual property="DATE_TYPE" compareValue="2"><!-- 2代表实际拨款日 -->
						         	 <isNotEmpty property="START_DATE">
						         	 	AND CONVERT(DATE,TCC.PAY_DATE)>=CONVERT(DATE,#START_DATE#)
						         	 </isNotEmpty>
						         	 <isNotEmpty property="END_DATE">
						         	 	AND CONVERT(DATE,TCC.PAY_DATE)&lt;=CONVERT(DATE,#END_DATE#)
						         	 </isNotEmpty>
						         </isEqual>
						         <isEqual property="DATE_TYPE" compareValue="3"><!-- 3代表预计起租日 -->
						         	 <isNotEmpty property="START_DATE">
						         	 	AND CONVERT(DATE,TCC.START_DATE)>=CONVERT(DATE,#START_DATE#)
						         	 </isNotEmpty>
						         	 <isNotEmpty property="END_DATE">
						         	 	AND CONVERT(DATE,TCC.START_DATE)&lt;=CONVERT(DATE,#END_DATE#)
						         	 </isNotEmpty>
						         </isEqual>
						         GROUP BY TCC.CREDIT_ID,TCC.DEPT_NAME,TCCR.CUST_CODE,TCCR.CUST_NAME,
						     		  TCC.INTRODUCER,TCC.LEASE_TYPE,TCC.EQU_NAME,TDD.FLAG,TUU.NAME
			     		  ) O
    	</select>
    	
    	<select id="queryCustomerCase" resultClass="com.brick.batchjob.to.CustomerCaseTo">
    			      SELECT TCC.CREDIT_ID creditId,TCC.DEPT_NAME deptName,TCCR.CUST_CODE custCode,TCCR.CUST_NAME custName,
				             TCC.INTRODUCER introducer,TCC.LEASE_TYPE leaseType,
				             TCC.EQU_NAME equName,SUM(TCC.CONFIRM_MONEY) confirmMoney,
				             TDD.FLAG caseType,TUU.NAME userName,
				             CASE WHEN CONVERT(DATE,MIN(TCC.VISIT_DATE))='1900-1-1' THEN NULL ELSE MIN(TCC.VISIT_DATE) END visitDate,
				             CASE WHEN CONVERT(DATE,MIN(TCC.GIVE_DATE))='1900-1-1' THEN NULL ELSE MIN(TCC.GIVE_DATE) END giveDate,
				             CASE WHEN CONVERT(DATE,MIN(TCC.CONFIRM_DATE))='1900-1-1' THEN NULL ELSE MIN(TCC.CONFIRM_DATE) END confirmDate,
				             CASE WHEN CONVERT(DATE,MIN(TCC.EXPECTED_DATE))='1900-1-1' THEN NULL ELSE MIN(TCC.EXPECTED_DATE) END expectedDate,
				             CASE WHEN CONVERT(DATE,MIN(TCC.PAY_DATE))='1900-1-1' THEN NULL ELSE MIN(TCC.PAY_DATE) END payDate,
				             SUM(TCC.PAY_MONEY) payMoney,
				             CASE WHEN CONVERT(DATE,MIN(TCC.START_DATE))='1900-1-1' THEN NULL ELSE MIN(TCC.START_DATE) END startDate             
				        FROM T_CUSTOMER_CASE TCC
				   LEFT JOIN T_CUST_CUSTOMER TCCR ON TCCR.CUST_ID=TCC.CUST_ID
				   LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID=TCC.CREDIT_ID
				   LEFT JOIN T_USER_USER TUU ON TUU.ID=TPC.SENSOR_ID
				   LEFT JOIN T_DATA_DICTIONARY TDD ON TDD.CODE=TCC.CASE_TYPE AND TDD.TYPE=#TYPE# <!-- 客户案况表中的案况状态 -->
				       WHERE CONVERT(DATE,TCC.CREATE_ON)=CONVERT(DATE,GETDATE()-1)
				         AND TPC.STATUS=0
				         AND TCC.STATUS=0
				         AND TDD.STATUS=0
				         AND TCCR.STATUS=0
					 <isEqual property="p_usernode" compareValue="1">
				     	 AND (TPC.SENSOR_ID=#s_employeeId# OR TPC.CLERK_ID=#s_employeeId#)
				     </isEqual>
				     <isEqual property="p_usernode" compareValue="2">
				         AND
				     	 EXISTS (
				     	 		 SELECT ID 
				     	 		   FROM T_USER_USER 
			     	 		      WHERE DEPT_ID IN (SELECT UC.DEPT_ID 
	 											      FROM T_USER_USER2COMPANY UC
												     WHERE UC.USER_ID=#s_employeeId#)
				     	 		 	AND ID=TPC.SENSOR_ID
				     	 		 )
				     </isEqual>
			         <isNotEmpty property="CASE_TYPE">
			         	 AND TCC.CASE_TYPE=#CASE_TYPE#
			         </isNotEmpty>
			         <isNotEmpty property="DEPT_ID">
			         	 AND TCC.DEPT_ID=#DEPT_ID#
			         </isNotEmpty>
			         <isNotEmpty property="USER_NAME">
			         	 AND TUU.NAME LIKE '%$USER_NAME$%'
			         </isNotEmpty>
			         <isNotEmpty property="CUST_NAME">
			         	 AND TCCR.CUST_NAME LIKE '%$CUST_NAME$%'
			         </isNotEmpty>
			         <isEqual  property="DATE_TYPE" compareValue="1"><!-- 1代表预估拨款日 -->
			         	 <isNotEmpty property="START_DATE">
			         	 	AND CONVERT(DATE,TCC.EXPECTED_DATE)>=CONVERT(DATE,#START_DATE#)
			         	 </isNotEmpty>
			         	 <isNotEmpty property="END_DATE">
			         	 	AND CONVERT(DATE,TCC.EXPECTED_DATE)&lt;=CONVERT(DATE,#END_DATE#)
			         	 </isNotEmpty>
			         </isEqual>
			         <isEqual  property="DATE_TYPE" compareValue="2"><!-- 2代表实际拨款日 -->
			         	 <isNotEmpty property="START_DATE">
			         	 	AND CONVERT(DATE,TCC.PAY_DATE)>=CONVERT(DATE,#START_DATE#)
			         	 </isNotEmpty>
			         	 <isNotEmpty property="END_DATE">
			         	 	AND CONVERT(DATE,TCC.PAY_DATE)&lt;=CONVERT(DATE,#END_DATE#)
			         	 </isNotEmpty>
			         </isEqual>
			         <isEqual  property="DATE_TYPE" compareValue="3"><!-- 3代表预计起租日 -->
			         	 <isNotEmpty property="START_DATE">
			         	 	AND CONVERT(DATE,TCC.START_DATE)>=CONVERT(DATE,#START_DATE#)
			         	 </isNotEmpty>
			         	 <isNotEmpty property="END_DATE">
			         	 	AND CONVERT(DATE,TCC.START_DATE)&lt;=CONVERT(DATE,#END_DATE#)
			         	 </isNotEmpty>
			         </isEqual>
			     GROUP BY TCC.CREDIT_ID,TCC.DEPT_NAME,TCCR.CUST_CODE,TCCR.CUST_NAME,
			     		  TCC.INTRODUCER,TCC.LEASE_TYPE,TCC.EQU_NAME,TDD.FLAG,TUU.NAME
			     ORDER BY MIN(TCC.PAY_DATE) DESC
    	</select>
    	
    	<select id="getDeptList" resultClass="com.brick.batchjob.to.CustomerCaseTo">
    			SELECT DISTINCT TCC.DEPT_ID deptId,TCC.DEPT_NAME deptName,TDCY.[ORDER]
    			  FROM T_CUSTOMER_CASE TCC
    		 LEFT JOIN T_PRJT_CREDIT TPC ON TCC.CREDIT_ID=TPC.ID
         	 LEFT JOIN T_DEPT_COMPANY TDCY ON TDCY.STATUS=0 AND TDCY.DECP_ID=TCC.DEPT_ID
   			     WHERE TCC.STATUS=0
    			   AND TPC.STATUS=0
             	   AND TCC.DEPT_ID!=1
				     <isEqual property="p_usernode" compareValue="2">
				         AND
				     	 EXISTS (
				     	 		 SELECT ID 
				     	 		   FROM T_USER_USER 
			     	 		      WHERE DEPT_ID IN (SELECT UC.DEPT_ID 
	 											      FROM T_USER_USER2COMPANY UC
												     WHERE UC.USER_ID=#s_employeeId#)
				     	 		 	AND ID=TPC.SENSOR_ID
				     	 		 )
				     </isEqual>
			   ORDER BY TDCY.[ORDER]
    	</select>
    	
    	<select id="getCaseTypeList" resultClass="java.util.HashMap">
    			SELECT CODE,FLAG FROM T_DATA_DICTIONARY WHERE TYPE=#TYPE# AND STATUS=0 ORDER BY CODE
    	</select>
    	
    	<!-- 供应商客户案况,案件进度batchJob -->
    	<select id="getSuplCustCase" resultClass="com.brick.batchjob.to.SuplCustCaseTo">
			            SELECT DISTINCT
			                   TCCE.CREDIT_ID creditId,
			                   TPCT.LEASE_CODE leaseCode,
			                   TCCE.CASE_TYPE caseType,
			                   TCCE.CUST_ID custId,
			                   TCCE.CUST_NAME custName,
			                   ISNULL(TRCN.LEASE_PERIOD,0)*ISNULL(TRCN.LEASE_TERM,0) totalPeriod,
			                   ISNULL(ISNULL(TPCE.LEASE_TOPRIC,0)-ISNULL(TPCE.PLEDGE_PRICE,0),0) payMoney,
			                   0 dunMoney,
			                   TRCT.RECT_ID rectId,
			                   TRCL.RECP_ID recpId
			              FROM T_CUSTOMER_CASE TCCE
			         LEFT JOIN T_PRJT_CREDIT TPCT ON TCCE.CREDIT_ID=TPCT.ID AND TPCT.STATUS=0
			         LEFT JOIN T_RENT_CONTRACT TRCT ON TRCT.PRCD_ID=TCCE.CREDIT_ID AND TRCT.STATUS=0
			         LEFT JOIN T_RENT_CONTRACTDETAIL TRCL ON TRCL.RECT_ID=TRCT.RECT_ID AND TRCL.STATUS=0
			         LEFT JOIN T_RENT_COLLECTIONPLAN TRCN ON TRCN.RECT_ID=TRCT.RECT_ID AND TRCN.STATUS=0         
			         LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TCCE.CREDIT_ID=TPCE.CREDIT_ID AND TPCE.STATUS=0 
			             WHERE CONVERT(DATE,CREATE_ON)=CONVERT(DATE,GETDATE())                
			             ORDER BY TCCE.CASE_TYPE
    	</select>
    	
    	<select id="getDunMoneyByCust" resultClass="com.brick.batchjob.to.SuplCustCaseTo">
    				    SELECT TDD.RECP_STATUS dunStatus,
						       TRC.CUST_ID custId,
				         	   TRC.LEASE_CODE leaseCode,
				               SUM(ISNULL(TRCD.IRR_MONTH_PRICE,0)-ISNULL(TRCD.REDUCE_OWN_PRICE,0)) dunMoney         
					      FROM T_RENT_CONTRACT TRC
		    		 LEFT JOIN T_RENT_COLLECTIONPLAN TRCP ON TRC.RECT_ID=TRCP.RECT_ID
				 	 LEFT JOIN T_RENT_COLLECTIONDETAIL TRCD ON TRCP.RECP_ID=TRCD.RECP_ID
				 	 LEFT JOIN (SELECT TDD.RECP_ID,TDD.RECP_STATE RECP_STATUS
				              	  FROM T_DUN_DAILY TDD
				             	 WHERE CONVERT(VARCHAR,TDD.CREATE_DATE,23)=CONVERT(VARCHAR,GETDATE(),23)
				            	) TDD ON TRCP.RECP_ID=TDD.RECP_ID
					     WHERE TRC.STATUS=0
				  	   	   AND TRC.RECT_STATUS=1
					  	   AND TRCP.STATUS=0
					  	   AND (TRCP.WARN_STATUS=0 OR TRCP.WARN_STATUS=1)	   
					  	   AND ISNULL(TRCD.IRR_MONTH_PRICE, 0)-ISNULL(TRCD.REDUCE_OWN_PRICE,0)!=0
					       AND CONVERT(DATE,TRCD.PAY_DATE)&lt;CONVERT(DATE,GETDATE())
					       AND TDD.RECP_STATUS=0
					  GROUP BY TDD.RECP_STATUS,TRC.CUST_ID,TRC.LEASE_CODE
					  ORDER BY TRC.LEASE_CODE
    	</select>
    	
    	<insert id="insertSupplerCustomerCase" parameterClass="com.brick.batchjob.to.SuplCustCaseTo">
    			 INSERT INTO T_SUPL_CUST_CASE
    			 (SUPL_CUST_CASE_ID,CREDIT_ID,CUST_ID,CUST_NAME,SUPL_NAME,LEASE_CODE,PAY_MONEY,
    			  TOTAL_PERIOD,PAY_PERIOD,DUN_MONEY,CASE_TYPE,RECT_ID,RECP_ID,CREATE_ON,STATUS)
    			 VALUES
    			 (#suplCustCaseId#,#creditId#,#custId#,#custName#,#suplName#,#leaseCode#,#payMoney#,
    			  #totalPeriod#,#payPeriod#,#dunMoney#,#caseType#,#rectId#,#recpId#,GETDATE(),0)
    	</insert>
    	
    	<select id="getSupplerCustomerCaseCount" resultClass="java.lang.Integer">
 			   		SELECT COUNT(1) 
			          FROM T_SUPL_CUST_CASE TSCC
			     LEFT JOIN T_DATA_DICTIONARY TDD ON TDD.CODE=TSCC.CASE_TYPE AND TDD.TYPE=#TYPE# AND TDD.STATUS=0 <!-- '客户案况表中的案况状态' -->
			     LEFT JOIN T_PRJT_CREDIT TPCT ON TPCT.ID=TSCC.CREDIT_ID AND TPCT.STATUS=0
			         WHERE TSCC.STATUS=0
			           AND TSCC.SUPL_NAME IS NOT NULL
			           AND CONVERT(DATE,CREATE_ON)=CONVERT(DATE,GETDATE()-1)
			    <isNotEmpty property="SUPL_NAME">
		        	   AND TSCC.SUPL_NAME LIKE '%$SUPL_NAME$%'
		        </isNotEmpty>
		        <isNotEmpty property="CUST_NAME">
		        	   AND TSCC.CUST_NAME LIKE '%$CUST_NAME$%'
		        </isNotEmpty>
		        <isNotEmpty property="CASE_TYPE">
		        	   AND TSCC.CASE_TYPE=#CASE_TYPE#
		        </isNotEmpty>
	            <isNotEmpty property="LEASE_CODE">
	            	   AND TSCC.LEASE_CODE LIKE '%$LEASE_CODE$%'
	            </isNotEmpty>
    	</select>
    	
    	<select id="getSupplerCustomerCase" resultClass="com.brick.batchjob.to.SuplCustCaseTo">
   			        SELECT TSCC.SUPL_NAME suplName,TSCC.CUST_NAME custName,
			               TSCC.LEASE_CODE leaseCode,TPCT.CREDIT_CODE creditId,TSCC.PAY_MONEY payMoney,
			               TSCC.TOTAL_PERIOD totalPeriod,ISNULL(TSCC.PAY_PERIOD,0) payPeriod,
			               TSCC.DUN_MONEY dunMoney,TDD.FLAG caseType 
			          FROM T_SUPL_CUST_CASE TSCC
			     LEFT JOIN T_DATA_DICTIONARY TDD ON TDD.CODE=TSCC.CASE_TYPE AND TDD.TYPE=#TYPE# AND TDD.STATUS=0 <!-- '客户案况表中的案况状态' -->
			     LEFT JOIN T_PRJT_CREDIT TPCT ON TPCT.ID=TSCC.CREDIT_ID AND TPCT.STATUS=0    
			         WHERE TSCC.STATUS=0
			           AND TSCC.SUPL_NAME IS NOT NULL
			           AND CONVERT(DATE,CREATE_ON)=CONVERT(DATE,GETDATE()-1)
			    <isNotEmpty property="SUPL_NAME">
		        	   AND TSCC.SUPL_NAME LIKE '%$SUPL_NAME$%'
		        </isNotEmpty>
		        <isNotEmpty property="CUST_NAME">
		        	   AND TSCC.CUST_NAME LIKE '%$CUST_NAME$%'
		        </isNotEmpty>
		        <isNotEmpty property="CASE_TYPE">
		        	   AND TSCC.CASE_TYPE=#CASE_TYPE#
		        </isNotEmpty>
	            <isNotEmpty property="LEASE_CODE">
	            	   AND TSCC.LEASE_CODE LIKE '%$LEASE_CODE$%'
	            </isNotEmpty>
    	</select>
    	
    	<select id="getInfoAcessAuditApprove" resultClass="com.brick.bussinessReport.to.AchievementTo">
    			SELECT COMPANY_ID deptId,
				       INFO_AMOUNT infoAmount,
				       INFO_COUNT infoCount,
				       HAS_ACCESS_AMOUNT hasAccessAmount,
				       HAS_ACCESS_COUNT hasAccessCount,
				       AUDIT_AMOUNT auditAmount1,
				       AUDIT_COUNT auditCount1,
				       APPROVE_AMOUNT approveAmount1,
				       APPROVE_COUNT approveCount1
				  FROM T_CASE_REPORT 
				 WHERE COMPANY_ID!=1 
				   AND CONVERT(DATE,CREATE_DATE)=CONVERT(DATE,GETDATE())
    	</select>
    	
    	<select id="getLoanMoneyToday" resultClass="com.brick.bussinessReport.to.AchievementTo">
    		          SELECT ISNULL(SUM(COST_MONEY),0) currentAchievement FROM T_LOAN_CASE 
		               WHERE STATUS=0 
		                 AND LOAN_MODE=1
		                 AND DEPT_ID=13
	                 <isNotEmpty property="DATE">
	                 	 AND CONVERT(DATE,PAY_DATE)=CONVERT(DATE,#DATE#)
	                 </isNotEmpty>
	                 <isEmpty property="DATE">
	                 	 AND CONVERT(DATE,PAY_DATE)=CONVERT(DATE,GETDATE())
	                 </isEmpty>
    	</select>
    	
    	<select id="getLoanMoneyMonth" resultClass="com.brick.bussinessReport.to.AchievementTo">
    				  SELECT ISNULL(SUM(COST_MONEY),0) currentAchievement FROM T_LOAN_CASE 
		               WHERE STATUS=0 
		                 AND LOAN_MODE=1
		                 AND DEPT_ID=13
	                 <isNotEmpty property="DATE">
	                 	 AND MONTH(PAY_DATE)=MONTH(CONVERT(DATE,#DATE#))
	                 	 AND YEAR(PAY_DATE)=YEAR(CONVERT(DATE,#DATE#))
	                 </isNotEmpty>
	                 <isEmpty property="DATE">
	                 	 AND MONTH(PAY_DATE)=MONTH(GETDATE())
	                 	 AND YEAR(PAY_DATE)=YEAR(GETDATE())
	                 </isEmpty>
    	</select>
    	
    	<select id="accessCustomerPlanReportList" resultClass="com.brick.bussinessReport.to.AccessCustomerPlanReportTO">
				   SELECT  TCVT.NAME [name],DECP.DECP_NAME_CN deptName,CONVERT(VARCHAR,TCVT.DATE,23) [date],
					       CONVERT(TIME,TCVT.EXPECT_FROM_TIME) expectFromTime,CONVERT(TIME,TCVT.EXPECT_TO_TIME) expectToTime,
					       CONVERT(TIME,TCVT.ACTUAL_FROM_TIME) actualFromTime,CONVERT(TIME,TCVT.ACTUAL_TO_TIME) actualToTime,
					       TCVT.OBJECT object,T1.FLAG empolderWayDescr,	           	   
			               T2.FLAG intentDescr,TCVT.WITH_SUPERVISOR withSupervisor,TCVT.HOLIDAY holiday,
					       CONVERT(TIME,TCVT.HOLIDAY_FROM_TIME) holidayFromTime,CONVERT(TIME,TCVT.HOLIDAY_TO_TIME) holidayToTime,
					       TP.NAME provinceName,TC.NAME cityName,TA.NAME areaName,T3.FLAG importantRecordDescr,TCVT.REMARK remark,
					       TCVT.NEED_COLLEAGUE needColleague,TT.NAME employee,CONVERT(VARCHAR,GETDATE()-7),CONVERT(VARCHAR,GETDATE()-3)     
					  FROM T_CUSTOMER_VISIT TCVT 
			     LEFT JOIN T_DATA_DICTIONARY T1 ON T1.CODE=TCVT.EMPOLDER_WAY AND T1.STATUS=0 AND T1.[TYPE]='开拓方式'
			 	 LEFT JOIN T_DATA_DICTIONARY T2 ON T2.CODE=TCVT.INTENT AND T2.STATUS=0 AND T2.[TYPE]='拜访目的'
			 	 LEFT JOIN T_DATA_DICTIONARY T3 ON T3.CODE=TCVT.IMPORTANT_RECORD AND T3.STATUS=0 AND T3.[TYPE]='重点记录'
			 	 LEFT JOIN T_AREA TP ON TCVT.PROVINCE_ID=TP.ID
			 	 LEFT JOIN T_AREA TC ON TCVT.CITY_ID=TC.ID
			 	 LEFT JOIN T_AREA TA ON TCVT.AREA_ID=TA.ID
			 	 LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TCVT.EMPLOYEE_ID AND TUU2.STATUS=0
			 	 LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
		         LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
		         LEFT JOIN T_USER_USER TT ON TT.STATUS=0 AND TT.ID=TCVT.EMPLOYEE
					 WHERE TCVT.STATUS=0   
					   AND TCVT.DATE>=CONVERT(DATE,GETDATE()-7) <!-- 每周1跑的job 取上周1至星期5 -->
					   AND TCVT.DATE&lt;=CONVERT(DATE,GETDATE()-3)
				  ORDER BY TCVT.DATE ASC,TCVT.EMPLOYEE_ID
    	</select>
    	
    	<select id="getCustomerVisitTime" resultClass="com.brick.bussinessReport.to.CustomerVisitTO">
			      SELECT EMP_ID userId,EMP_NAME name,DECP_ID deptId,DECP_NAME deptName, 
      					 MONTH_COUNT caseCount,MONTH_PAY_MONEY casePayMoney,MONTH_RATE_DIFF caseRateDiff,
             			 O1.costTime totalTime,O2.costTime outsideTime,ISNULL(O3.ongoingCaseCount,0) ongoingCaseCount
  					FROM T_REPORT_BONUS
  			   LEFT JOIN T_USER_USER TUU ON TUU.ID=EMP_ID AND TUU.STATUS=0
  			   LEFT JOIN (SELECT TCV.EMPLOYEE_ID,TCV.NAME,
	                     SUM(DATEDIFF(MINUTE,TCV.ACTUAL_FROM_TIME,TCV.ACTUAL_TO_TIME)) costTime
	                FROM T_CUSTOMER_VISIT TCV
	               WHERE MONTH(TCV.DATE)=MONTH(GETDATE()-1)
	                 AND YEAR(TCV.DATE)=YEAR(GETDATE()-1)
	                 AND TCV.STATUS=0
	            GROUP BY TCV.EMPLOYEE_ID,TCV.NAME 
	              HAVING (SUM(DATEDIFF(MINUTE,TCV.ACTUAL_FROM_TIME,TCV.ACTUAL_TO_TIME))>0)) O1 ON O1.EMPLOYEE_ID=EMP_ID
   			   LEFT JOIN (SELECT TCV.EMPLOYEE_ID,TCV.NAME,
	                     SUM(DATEDIFF(MINUTE,TCV.ACTUAL_FROM_TIME,TCV.ACTUAL_TO_TIME)) costTime 
	                FROM T_CUSTOMER_VISIT TCV 
	               WHERE MONTH(TCV.DATE)=MONTH(GETDATE()-1)
	                 AND YEAR(TCV.DATE)=YEAR(GETDATE()-1)
	                 AND TCV.STATUS=0 
	                 AND (TCV.IMPORTANT_RECORD=2 OR TCV.IMPORTANT_RECORD=4 OR TCV.IMPORTANT_RECORD=5 OR 
	                      TCV.IMPORTANT_RECORD=6 OR TCV.IMPORTANT_RECORD=7 OR TCV.IMPORTANT_RECORD=11 OR TCV.IMPORTANT_RECORD=14)
	            GROUP BY TCV.EMPLOYEE_ID,TCV.NAME
	              HAVING (SUM(DATEDIFF(MINUTE,TCV.ACTUAL_FROM_TIME,TCV.ACTUAL_TO_TIME))>0)) O2 ON O2.EMPLOYEE_ID=EMP_ID 
	           LEFT JOIN (SELECT TPC.SENSOR_ID,COUNT(1) ongoingCaseCount
                        	FROM T_PRJT_CREDIT TPC
	                   LEFT JOIN T_USER_USER T ON T.ID=TPC.SENSOR_ID AND T.STATUS=0
	                       WHERE TPC.STATUS=0 
	                         AND TPC.STATE!=-1
	                         AND NAME IS NOT NULL
	                         AND JOB='1'
	                         AND (FINANCECONTRACT_DATE IS NULL OR CONVERT(VARCHAR,FINANCECONTRACT_DATE,23)=CONVERT(VARCHAR,'1900-01-01',23))
	                         GROUP BY TPC.SENSOR_ID) O3 ON O3.SENSOR_ID=EMP_ID        
				   WHERE BONUS_YEAR=YEAR(GETDATE()-1)
	  			 	 AND BONUS_MONTH=MONTH(GETDATE()-1)
	         		 AND EMP_ID!=-1
	         		 AND TUU.STATUS=0
	         		 AND EMP_ID NOT IN (155,146,147,150,148,153,154,151,156,149,152)<!-- 去掉待补 -->
	</select>
	
	<insert id="insertCustomerVisitTime">
			INSERT INTO T_CUSTOMER_VISIT_REPORT
			(ID,USER_ID,NAME,DEPT_ID,DEPT_NAME,CASE_COUNT,CASE_PAY_MONEY,CASE_RATE_DIFF,TOTAL_TIME,OUTSIDE_TIME,STATUS,CREATE_ON,ONGOING_CASE)
			VALUES
			(#id#,#userId#,#name#,#deptId#,#deptName#,#caseCount#,#casePayMoney#,#caseRateDiff#,#totalTime#,#outsideTime#,0,GETDATE()-1,#ongoingCaseCount#)
	</insert>
	
	<select id="getDateList" resultClass="com.brick.bussinessReport.to.CustomerVisitTO">
		   SELECT DISTINCT CONVERT(VARCHAR,YEAR(CREATE_ON))+'-'+CONVERT(VARCHAR,MONTH(CREATE_ON)) descr, 
	              CONVERT(DATE,CREATE_ON) value,
	              CASE WHEN MONTH(CREATE_ON)=MONTH(DATEADD(MM,-1,GETDATE())) AND YEAR(CREATE_ON)=YEAR(DATEADD(MM,-1,GETDATE()))
                       THEN 'Y'
                       ELSE 'N'
                        END flag
	         FROM T_CUSTOMER_VISIT_REPORT 
	        WHERE STATUS=0
	     ORDER BY CONVERT(DATE,CREATE_ON)
	</select>
	
	<select id="getDateList1" resultClass="java.lang.String">
		SELECT DISTINCT PAY_YEAR FROM T_AVG_PAY_MONEY
	</select>
	<select id="getDayCount" resultClass="java.lang.Integer">
		SELECT COUNT(1) 
		  FROM T_DAY_TYPE
		 WHERE DAY_TYPE='WD' 
		 <isNotEmpty property="DATE">
		   AND YEAR(DATE)=YEAR(#DATE#) 
		   AND MONTH(DATE)=MONTH(#DATE#)
		 </isNotEmpty>
		 <isEmpty property="DATE">
		   AND YEAR(DATE)=YEAR(DATEADD(MM,-1,GETDATE()))
 		   AND MONTH(DATE)=MONTH(DATEADD(MM,-1,GETDATE()))
		 </isEmpty>
	</select>
	<select id="queryCustomerVisitTime" resultClass="com.brick.bussinessReport.to.CustomerVisitTO">
			SELECT USER_ID userId,NAME name,DEPT_ID deptId,DEPT_NAME deptName,CASE_COUNT caseCount,[ORDER][order],
				   CASE_PAY_MONEY casePayMoney,CASE_RATE_DIFF caseRateDiff,ISNULL(TOTAL_TIME,'NaN') totalTime,ISNULL(OUTSIDE_TIME,'NaN') outsideTime,
				   ISNULL(CONVERT(INT,TOTAL_TIME),0) totalTimeCode,ISNULL(CONVERT(INT,OUTSIDE_TIME),0) outsideTimeCode,ONGOING_CASE ongoingCaseCount,
				   CASE WHEN OUTSIDE_TIME IS NULL
	               THEN 'NaN'
	               ELSE CONVERT(VARCHAR,ROUND(CONVERT(FLOAT,OUTSIDE_TIME)/(#DAY#*8*60)*100,2))+'%'
	                END descr
			  FROM T_CUSTOMER_VISIT_REPORT TCVR
		 LEFT JOIN T_DEPT_COMPANY TDC ON DEPT_ID=DECP_ID AND TDC.STATUS=0
			 WHERE TCVR.STATUS=0
	 <isNotEmpty property="DEPT_ID">
	     	   AND TCVR.DEPT_ID=#DEPT_ID#
	 </isNotEmpty>
	 <isNotEmpty property="DATE">
	 		   AND YEAR(CREATE_ON)=YEAR(#DATE#)
	 		   AND MONTH(CREATE_ON)=MONTH(#DATE#)
	 </isNotEmpty>
	 <isEmpty property="DATE">
	 		   AND YEAR(CREATE_ON)=YEAR(DATEADD(MM,-1,GETDATE()))
	 		   AND MONTH(CREATE_ON)=MONTH(DATEADD(MM,-1,GETDATE()))
	 </isEmpty>
	</select>
	
	<select id="getDunCaseByUserId" resultClass="com.brick.bussinessReport.to.DunCaseTO">
				SELECT O.userId,O.name,O.deptId,O.deptName,COUNT(O.userId) totalCount,SUM(O.dunMoney) totalMoney
				  FROM 
						(
						SELECT P.RECP_ID id,DECP.DECP_ID deptId,MAX(DECP.DECP_NAME_CN) deptName,MAX(T.DUN_DAY) dunDay,U.ID userId,U.[NAME] [name],
									             SUM(ISNULL(DETAIL.IRR_MONTH_PRICE,0))+SUM(ISNULL(DETAIL.VALUE_ADDED_TAX,0))-SUM(ISNULL(DETAIL.REDUCE_OWN_PRICE,0)) dunMoney
									        FROM T_RENT_COLLECTIONPLAN P
									   LEFT JOIN T_RENT_COLLECTIONDETAIL DETAIL ON P.RECP_ID = DETAIL.RECP_ID
									   LEFT JOIN (
									      SELECT RECP_ID,
									              (
									                SELECT MAX(DATEDIFF(DAY,PAY_DATE, GETDATE())) AS DUN_DAY
									                  FROM T_RENT_COLLECTIONDETAIL
									                 WHERE (REDUCE_OWN_PRICE IS NULL OR CONVERT(MONEY,IRR_MONTH_PRICE) > CONVERT(MONEY,REDUCE_OWN_PRICE))
									                   AND DATEDIFF(DAY,PAY_DATE, GETDATE()) > 0
									                   AND STATUS = 0
									                   AND RECP_ID = DETAIL.RECP_ID
									              ) AS DUN_DAY
									        FROM T_RENT_COLLECTIONDETAIL DETAIL
									       WHERE DATEDIFF(DAY,PAY_DATE, GETDATE()) > 0
									         AND DETAIL.STATUS = 0
									    GROUP BY RECP_ID
									      HAVING SUM(ISNULL(DETAIL.IRR_MONTH_PRICE,0))+SUM(ISNULL(DETAIL.VALUE_ADDED_TAX,0))-SUM(ISNULL(DETAIL.REDUCE_OWN_PRICE,0)) > 0
									              )T ON T.RECP_ID = P.RECP_ID
									   LEFT JOIN T_RENT_COLLECTIONPLAN RECP ON P.RECP_ID = RECP.RECP_ID AND RECP.STATUS = 0
									   LEFT JOIN T_RENT_CONTRACT RECT ON RECP.RECT_ID = RECT.RECT_ID AND RECT.STATUS = 0
									   LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID = RECT.PRCD_ID AND TPC.STATUS = 0
									   LEFT JOIN T_USER_USER U ON TPC.ORG_SENSOR_ID = U.ID
									   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON U.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
									   LEFT JOIN T_DEPT_COMPANY DECP ON DEPT.DECP_ID = DECP.DECP_ID AND DECP.STATUS = 0
									       WHERE DETAIL.STATUS = 0 AND P.STATUS = 0
									         AND (P.RECP_STATUS = 0 OR P.FUND_STATUS = 0)
									         AND T.DUN_DAY IS NOT NULL
									         AND NOT EXISTS(
									                        SELECT 0 
									                          FROM T_PRJT_CREDIT PRCD
									                         WHERE PRCD.FINANCECONTRACT_DATE IS NULL
									                           AND PRCD.ID = RECT.PRCD_ID
									                        )
									    GROUP BY P.RECP_ID,DECP.DECP_ID,U.ID,U.[NAME]
									      HAVING SUM(ISNULL(DETAIL.IRR_MONTH_PRICE,0))+SUM(ISNULL(DETAIL.VALUE_ADDED_TAX,0))>SUM(ISNULL(DETAIL.REDUCE_OWN_PRICE,0))
					  				    	 AND DECP.DECP_ID IS NOT NULL
					  				     <isNotEmpty property="DUN_DAY1">
						  				     AND MAX(T.DUN_DAY)>=#DUN_DAY1#
					  				     </isNotEmpty>
					  				     <isNotEmpty property="DUN_DAY2">
					  				         AND MAX(T.DUN_DAY)&lt;=#DUN_DAY2#
					  				     </isNotEmpty>
						) O
			  GROUP BY O.userId,O.name,O.deptId,O.deptName
	</select>
	
	<select id="getTotalDunCaseByUserId" resultClass="com.brick.bussinessReport.to.DunCaseTO">
			       SELECT C.DECP_ID deptId,C.DECP_NAME_CN deptName,CP.ID userId,CP.NAME name,ISNULL(T.TOTAL_COUNT,0) <!-- + ISNULL(LOAN.CT,0) --> totalCount, 
			              ISNULL(P.TOTAL_PRICE,0) <!-- + ISNULL(LOAN.LOAN_MONEY,0) --> totalMoney
			         FROM T_USER_USER CP
				LEFT JOIN (
			                  SELECT U.ID,COUNT(0) AS TOTAL_COUNT 
			                    FROM T_RENT_COLLECTIONPLAN RECP
			               LEFT JOIN T_RENT_CONTRACT RECT ON RECP.RECT_ID = RECT.RECT_ID AND RECT.STATUS = 0
			               LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID = RECT.PRCD_ID AND TPC.STATUS = 0
						   LEFT JOIN T_USER_USER U ON TPC.ORG_SENSOR_ID = U.ID
			               LEFT JOIN T_DEPT_DEPARTMENT DEPT ON U.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
			               LEFT JOIN T_DEPT_COMPANY DECP ON DEPT.DECP_ID = DECP.DECP_ID AND DECP.STATUS = 0
			                   WHERE RECP.STATUS = 0 
			                     AND (RECP.RECP_STATUS = 0 OR RECP.FUND_STATUS = 0)
			                     AND EXISTS (
			                          SELECT PRCD.ID 
			                            FROM T_PRJT_CREDIT PRCD
			                       LEFT JOIN T_RENT_CONTRACT CT ON CT.PRCD_ID = PRCD.ID
			                           WHERE CT.RECT_ID = RECT.RECT_ID
			                             AND PRCD.FINANCECONTRACT_DATE IS NOT NULL
			                                 )
			                GROUP BY U.ID
			               ) T ON CP.ID = T.ID
			    LEFT JOIN (
			                  SELECT U.ID, SUM(PRIC.PRICE) AS TOTAL_PRICE 
			                    FROM T_RENT_COLLECTIONPLAN RECP
			               LEFT JOIN (
			                            SELECT (SUM(RECD.IRR_MONTH_PRICE+ISNULL(RECD.VALUE_ADDED_TAX,0)) - SUM(ISNULL(RECD.REDUCE_OWN_PRICE,0))) AS 'PRICE',
			                                   RECD.RECP_ID
			                              FROM T_RENT_COLLECTIONDETAIL RECD
			                             WHERE RECD.STATUS = 0
			                          GROUP BY RECD.RECP_ID
			                          ) PRIC ON PRIC.RECP_ID = RECP.RECP_ID
			               LEFT JOIN T_RENT_CONTRACT RECT ON RECP.RECT_ID = RECT.RECT_ID AND RECT.STATUS = 0
			               LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID = RECT.PRCD_ID AND TPC.STATUS = 0
						   LEFT JOIN T_USER_USER U ON TPC.ORG_SENSOR_ID = U.ID
			               LEFT JOIN T_DEPT_DEPARTMENT DEPT ON U.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
			               LEFT JOIN T_DEPT_COMPANY DECP ON DEPT.DECP_ID = DECP.DECP_ID AND DECP.STATUS = 0
			                   WHERE RECP.STATUS = 0 
			                     AND (RECP.RECP_STATUS = 0 OR RECP.FUND_STATUS = 0)
			                     AND EXISTS(
			                                SELECT PRCD.ID 
			                                  FROM T_PRJT_CREDIT PRCD
			                             LEFT JOIN T_RENT_CONTRACT CT ON CT.PRCD_ID = PRCD.ID
			                                 WHERE CT.RECT_ID = RECT.RECT_ID
			                                   AND PRCD.FINANCECONTRACT_DATE IS NOT NULL
			                              )
			                GROUP BY U.ID
			                ) P ON CP.ID = P.ID
			    LEFT JOIN (
			                SELECT SUM(ISNULL(COST_MONEY,0) - ISNULL(CAUTION_MONEY,0)) 
			                     + SUM(ISNULL(ACCRUAL,0)) AS LOAN_MONEY,
			                       COUNT(0) AS CT,LC.USER_ID
			                  FROM T_LOAN_CASE LC
			             LEFT JOIN T_DEPT_COMPANY DECP ON LC.DEPT_ID = DECP.DECP_ID
			                 WHERE LC.STATUS = 0
			              GROUP BY LC.USER_ID
			              ) LOAN ON LOAN.USER_ID = CP.ID
			    LEFT JOIN T_DEPT_DEPARTMENT P1 ON CP.DEPT_ID=P1.ID AND P1.STATUS=0
	  			LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P1.DECP_ID AND C.STATUS=0
			    	WHERE (CP.JOB='1' OR CP.JOB='2') 
			      	  AND (ISNULL(T.TOTAL_COUNT,0) + ISNULL(LOAN.CT,0))!=0
	</select>
	
	<select id="getTotalDunCaseByMoney" resultClass="com.brick.bussinessReport.to.DunCaseTO">
			SELECT SUM(O.totalCount) totalCount,ISNULL(SUM(O.totalMoney),0) totalMoney,#FLAG# flag
			  FROM
			      (
			      SELECT ISNULL(T.TOTAL_COUNT,0) totalCount, 
			      			              ISNULL(P.TOTAL_PRICE,0) totalMoney
			      			         FROM T_USER_USER CP
			      				LEFT JOIN (
			      			                  SELECT U.ID,COUNT(0) AS TOTAL_COUNT 
			      			                    FROM T_RENT_COLLECTIONPLAN RECP
			      			               LEFT JOIN T_RENT_CONTRACT RECT ON RECP.RECT_ID = RECT.RECT_ID AND RECT.STATUS = 0
			      			               LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID = RECT.PRCD_ID AND TPCE.STATUS = 0
			      			               LEFT JOIN T_USER_USER U ON RECT.SENSOR_ID = U.ID
			      			               LEFT JOIN T_DEPT_DEPARTMENT DEPT ON U.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
			      			               LEFT JOIN T_DEPT_COMPANY DECP ON DEPT.DECP_ID = DECP.DECP_ID AND DECP.STATUS = 0
			      			                   WHERE RECP.STATUS = 0
		      			                   <isNotEmpty property="MONEY1">
  									         	 AND TPCE.LEASE_RZE>=#MONEY1#
									       </isNotEmpty>
  									       <isNotEmpty property="MONEY2">
                           					 	 AND TPCE.LEASE_RZE&lt;#MONEY2#
                           				   </isNotEmpty> 
			      			                     AND (RECP.RECP_STATUS = 0 OR RECP.FUND_STATUS = 0)
			      			                     AND EXISTS (
			      			                          SELECT PRCD.ID 
			      			                            FROM T_PRJT_CREDIT PRCD
			      			                       LEFT JOIN T_RENT_CONTRACT CT ON CT.PRCD_ID = PRCD.ID
			      			                           WHERE CT.RECT_ID = RECT.RECT_ID
			      			                             AND PRCD.FINANCECONTRACT_DATE IS NOT NULL
			      			                                 )
			      			                GROUP BY U.ID
			      			               ) T ON CP.ID = T.ID
			      			    LEFT JOIN (
			      			                  SELECT U.ID, SUM(PRIC.PRICE) AS TOTAL_PRICE 
			      			                    FROM T_RENT_COLLECTIONPLAN RECP
			      			               LEFT JOIN (
			      			                            SELECT (SUM(RECD.IRR_MONTH_PRICE+ISNULL(RECD.VALUE_ADDED_TAX,0)) - SUM(ISNULL(RECD.REDUCE_OWN_PRICE,0))) AS 'PRICE',
			      			                                   RECD.RECP_ID
			      			                              FROM T_RENT_COLLECTIONDETAIL RECD
			      			                             WHERE RECD.STATUS = 0
			      			                          GROUP BY RECD.RECP_ID
			      			                          ) PRIC ON PRIC.RECP_ID = RECP.RECP_ID
			      			               LEFT JOIN T_RENT_CONTRACT RECT ON RECP.RECT_ID = RECT.RECT_ID AND RECT.STATUS = 0
			      			               LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID = RECT.PRCD_ID AND TPCE.STATUS = 0
			      			               LEFT JOIN T_USER_USER U ON RECT.SENSOR_ID = U.ID
			      			               LEFT JOIN T_DEPT_DEPARTMENT DEPT ON U.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
			      			               LEFT JOIN T_DEPT_COMPANY DECP ON DEPT.DECP_ID = DECP.DECP_ID AND DECP.STATUS = 0
			      			                   WHERE RECP.STATUS = 0 
			      			               <isNotEmpty property="MONEY1">
  									         	 AND TPCE.LEASE_RZE>=#MONEY1#
									       </isNotEmpty>
  									       <isNotEmpty property="MONEY2">
                           					 	 AND TPCE.LEASE_RZE&lt;#MONEY2#
                           				   </isNotEmpty>
			      			                     AND (RECP.RECP_STATUS = 0 OR RECP.FUND_STATUS = 0)
			      			                     AND EXISTS(
			      			                                SELECT PRCD.ID 
			      			                                  FROM T_PRJT_CREDIT PRCD
			      			                             LEFT JOIN T_RENT_CONTRACT CT ON CT.PRCD_ID = PRCD.ID
			      			                                 WHERE CT.RECT_ID = RECT.RECT_ID
			      			                                   AND PRCD.FINANCECONTRACT_DATE IS NOT NULL
			      			                              )
			      			                GROUP BY U.ID
			      			                ) P ON CP.ID = P.ID
			      			    LEFT JOIN (
			      			                SELECT SUM(ISNULL(COST_MONEY,0) - ISNULL(CAUTION_MONEY,0)) 
			      			                     + SUM(ISNULL(ACCRUAL,0)) AS LOAN_MONEY,
			      			                       COUNT(0) AS CT,LC.USER_ID
			      			                  FROM T_LOAN_CASE LC
			      			             LEFT JOIN T_DEPT_COMPANY DECP ON LC.DEPT_ID = DECP.DECP_ID
			      			                 WHERE LC.STATUS = 0
			      			               <isNotEmpty property="MONEY1">
  									           AND LC.COST_MONEY>=#MONEY1#
									       </isNotEmpty>
  									       <isNotEmpty property="MONEY2">
                           					   AND LC.COST_MONEY&lt;#MONEY2#
                           				   </isNotEmpty>
			      			              GROUP BY LC.USER_ID
			      			              ) LOAN ON LOAN.USER_ID = CP.ID
			      			    LEFT JOIN T_DEPT_DEPARTMENT P1 ON CP.DEPT_ID=P1.ID AND P1.STATUS=0
			      	  			LEFT JOIN T_DEPT_COMPANY C ON C.DECP_ID=P1.DECP_ID AND C.STATUS=0
			      			    	WHERE (CP.JOB='1' OR CP.JOB='2') 
			      			      	  AND (ISNULL(T.TOTAL_COUNT,0) + ISNULL(LOAN.CT,0))!=0
			      ) O
	</select>
	
	<insert id="insertDunCaseByUserId">
			INSERT INTO T_DUN_CASE_BY_USER
			(ID,USER_ID,NAME,DEPT_ID,DEPT_NAME,TOTAL_COUNT,TOTAL_MONEY
				,COUNT8,MONEY8
				,COUNT31,MONEY31
				,COUNT91,MONEY91
				,COUNT181,MONEY181
				,COUNT8_14,MONEY8_14
				,COUNT15_30,MONEY15_30
				,COUNT31_60,MONEY31_60
				,COUNT61_90,MONEY61_90
				,STATUS,CREATE_ON)
			VALUES
			(#id#,#userId#,#name#,#deptId#,#deptName#,#totalCount#,#totalMoney#
				,#count8_#,#money8_#
				,#count31_#,#money31_#
				,#count91_#,#money91_#
				,#count181_#,#money181_#
				,#count8_14#,#money8_14#
				,#count15_30#,#money15_30#
				,#count31_60#,#money31_60#
				,#count61_90#,#money61_90#
				,0,GETDATE())
	</insert>
	
	<insert id="insertDunCaseByMoney">
			INSERT INTO T_DUN_CASE_BY_MONEY
			(ID,FLAG,TOTAL_COUNT,TOTAL_MONEY
				,COUNT7,MONEY7
				,COUNT8,MONEY8
				,COUNT91,MONEY91
				,COUNT181,MONEY181
				,COUNT15,MONEY15
				,COUNT31,MONEY31
				,COUNT61,MONEY61
				,STATUS,CREATE_ON)
			VALUES
			(#id#,#flag#,#totalCount#,#totalMoney#
				,#count_7#,#money_7#
				,#count8_#,#money8_#
				,#count91_#,#money91_#
				,#count181_#,#money181_#
				,#count15_#,#money15_#
				,#count31_#,#money31_#
				,#count61_#,#money61_#
				,0,GETDATE())
	</insert>
	
	<insert id="insertTotalMoneyRentMoney">
			INSERT INTO T_REPORT_RENT_MONEY
			(ID,FLAG,TOTAL_MONEY,RENT_MONEY,TOTAL_SCALE,RENT_SCALE,ORIGINAL_SCALE,STATUS,CREATE_ON)
			VALUES
			(#id#,#flag#,#totalMoney#,#rentMoney#,#totalScale#,#rentScale#,#originalScale#,0,GETDATE())
	</insert>
	
	<select id="getDunCaseDetail" resultClass="com.brick.bussinessReport.to.DunCaseTO">
			SELECT USER_ID userId,NAME name,DEPT_ID deptId,DEPT_NAME deptName,TOTAL_COUNT totalCount,TOTAL_MONEY totalMoney,
				   COUNT8 count8_
				   ,MONEY8 money8_
				   ,isnull(COUNT31, 0) as count31_
				   ,isnull(MONEY31, 0) as money31_
				   ,isnull(COUNT181, 0) as count181_
				   ,isnull(MONEY181, 0) as money181_
				   ,COUNT91 count91_
				   ,MONEY91 money91_
				   ,COUNT8_14 count8_14
				   ,MONEY8_14 money8_14
				   ,COUNT15_30 count15_30
				   ,MONEY15_30 money15_30
				   ,COUNT31_60 count31_60
				   ,MONEY31_60 money31_60
				   ,COUNT61_90 count61_90
				   ,MONEY61_90 money61_90
			  FROM T_DUN_CASE_BY_USER
			 WHERE STATUS=0
			   AND DEPT_NAME=#DEPT_NAME#
			   AND CONVERT(DATE,CREATE_ON)=CONVERT(DATE,#DATE#)
		  ORDER BY TOTAL_COUNT DESC
	</select>
	
	<select id="getDunCaseByMoney" resultClass="com.brick.bussinessReport.to.DunCaseTO">
				SELECT COUNT(O.userId) totalCount,ISNULL(SUM(O.dunMoney),0) totalMoney
				  FROM  (
						SELECT P.RECP_ID id,DECP.DECP_ID deptId,MAX(DECP.DECP_NAME_CN) deptName,MAX(T.DUN_DAY) dunDay,U.ID userId,U.[NAME] [name],
									             SUM(ISNULL(DETAIL.IRR_MONTH_PRICE,0))+SUM(ISNULL(DETAIL.VALUE_ADDED_TAX,0))-SUM(ISNULL(DETAIL.REDUCE_OWN_PRICE,0)) dunMoney
									        FROM T_RENT_COLLECTIONPLAN P
									   LEFT JOIN T_RENT_COLLECTIONDETAIL DETAIL ON P.RECP_ID = DETAIL.RECP_ID
									   LEFT JOIN (
									      SELECT RECP_ID,
									              (
									                SELECT MAX(DATEDIFF(DAY,PAY_DATE, GETDATE())) AS DUN_DAY
									                  FROM T_RENT_COLLECTIONDETAIL
									                 WHERE (REDUCE_OWN_PRICE IS NULL OR CONVERT(MONEY,IRR_MONTH_PRICE) > CONVERT(MONEY,REDUCE_OWN_PRICE))
									                   AND DATEDIFF(DAY,PAY_DATE, GETDATE()) > 0
									                   AND STATUS = 0
									                   AND RECP_ID = DETAIL.RECP_ID
									              ) AS DUN_DAY
									        FROM T_RENT_COLLECTIONDETAIL DETAIL
									       WHERE DATEDIFF(DAY,PAY_DATE, GETDATE()) > 0
									         AND DETAIL.STATUS = 0
									    GROUP BY RECP_ID
									      HAVING SUM(ISNULL(DETAIL.IRR_MONTH_PRICE,0))+SUM(ISNULL(DETAIL.VALUE_ADDED_TAX,0))-SUM(ISNULL(DETAIL.REDUCE_OWN_PRICE,0)) > 0
									              )T ON T.RECP_ID = P.RECP_ID
									   LEFT JOIN T_RENT_COLLECTIONPLAN RECP ON P.RECP_ID = RECP.RECP_ID AND RECP.STATUS = 0
									   LEFT JOIN T_RENT_CONTRACT RECT ON RECP.RECT_ID = RECT.RECT_ID AND RECT.STATUS = 0
                     				   LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID = RECT.PRCD_ID AND TPCE.STATUS = 0
									   LEFT JOIN T_USER_USER U ON RECT.SENSOR_ID = U.ID
									   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON U.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
									   LEFT JOIN T_DEPT_COMPANY DECP ON DEPT.DECP_ID = DECP.DECP_ID AND DECP.STATUS = 0
									       WHERE DETAIL.STATUS = 0 AND P.STATUS = 0
									         AND (P.RECP_STATUS = 0 OR P.FUND_STATUS = 0)
									         AND T.DUN_DAY IS NOT NULL
									         AND NOT EXISTS  (
  									                        SELECT 0 
  									                          FROM T_PRJT_CREDIT PRCD
  									                         WHERE PRCD.FINANCECONTRACT_DATE IS NULL
  									                           AND PRCD.ID = RECT.PRCD_ID
  									                        )
  									     <isNotEmpty property="MONEY1">
  									         AND TPCE.LEASE_RZE>=#MONEY1#
  									     </isNotEmpty>
  									     <isNotEmpty property="MONEY2">
                           					 AND TPCE.LEASE_RZE&lt;#MONEY2#
                           				 </isNotEmpty>
									    GROUP BY P.RECP_ID,DECP.DECP_ID,U.ID,U.[NAME]
									      HAVING SUM(ISNULL(DETAIL.IRR_MONTH_PRICE,0))+SUM(ISNULL(DETAIL.VALUE_ADDED_TAX,0))>SUM(ISNULL(DETAIL.REDUCE_OWN_PRICE,0))
					  				     <isNotEmpty property="DUN_DAY1">
						  				     AND MAX(T.DUN_DAY)>=#DUN_DAY1#
					  				     </isNotEmpty>
					  				     <isNotEmpty property="DUN_DAY2">
					  				         AND MAX(T.DUN_DAY)&lt;=#DUN_DAY2#
					  				     </isNotEmpty>
						) O		  
	</select>
	
	<select id="getTotalMoney" resultClass="com.brick.bussinessReport.to.DunCaseTO">
				SELECT SUM(O.totalMoney) totalMoney,#FLAG# flag
				  FROM
				  	   (
                                  SELECT TPCE.LEASE_RZE totalMoney
    			                    FROM T_RENT_COLLECTIONPLAN RECP
    			               LEFT JOIN T_RENT_CONTRACT RECT ON RECP.RECT_ID = RECT.RECT_ID AND RECT.STATUS = 0
    			               LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.CREDIT_ID = RECT.PRCD_ID AND TPCE.STATUS = 0
    			                   WHERE RECP.STATUS = 0
   			                  	 <isNotEmpty property="MONEY1">
						         	 AND TPCE.LEASE_RZE>=#MONEY1#
				         		 </isNotEmpty>
						         <isNotEmpty property="MONEY2">
                    				 AND TPCE.LEASE_RZE&lt;#MONEY2#
                 				 </isNotEmpty> 
    			                     AND (RECP.RECP_STATUS = 0 OR RECP.FUND_STATUS = 0)
    			                     AND EXISTS (
    			                          SELECT PRCD.ID 
    			                            FROM T_PRJT_CREDIT PRCD
    			                       LEFT JOIN T_RENT_CONTRACT CT ON CT.PRCD_ID = PRCD.ID
    			                           WHERE CT.RECT_ID = RECT.RECT_ID
    			                             AND PRCD.FINANCECONTRACT_DATE IS NOT NULL
    			                                 )
                                   		UNION ALL  
                             	SELECT SUM(ISNULL(COST_MONEY,0) - ISNULL(CAUTION_MONEY,0)) 
   			                         + SUM(ISNULL(ACCRUAL,0)) totalMoney
    			                  FROM T_LOAN_CASE LC			      			             
    			                 WHERE LC.STATUS = 0
   			                  <isNotEmpty property="MONEY1">
						       	   AND LC.COST_MONEY>=#MONEY1#
				        	  </isNotEmpty>
						      <isNotEmpty property="MONEY2">
                  				   AND LC.COST_MONEY&lt;#MONEY2#
                  			  </isNotEmpty>
                              GROUP BY LC.LOAN_ID
                     ) O
	</select>
	
	<select id="queryDunCaseByMoney" resultClass="com.brick.bussinessReport.to.DunCaseTO">
          SELECT FLAG flag,TOTAL_COUNT totalCount,TOTAL_MONEY totalMoney,
                 COUNT7 count_7,MONEY7 money_7, COUNT8 count8_,MONEY8 money8_,
                 COUNT91 count91_,MONEY91 money91_,COUNT15 count15_,MONEY15 money15_,
                 COUNT31 count31_,MONEY31 money31_,COUNT61 count61_,MONEY61 money61_
                 ,isnull(COUNT181,0) count181_
   				,isnull(MONEY181,0) money181_
            FROM T_DUN_CASE_BY_MONEY 
           WHERE STATUS=0
             AND CONVERT(DATE,CREATE_ON)=CONVERT(DATE,#DATE#)
	</select>
	
	<select id="queryRentMoney" resultClass="com.brick.bussinessReport.to.DunCaseTO">
		 SELECT FLAG flag,TOTAL_MONEY totalMoney,RENT_MONEY rentMoney,
               TOTAL_SCALE totalScale,RENT_SCALE rentScale,ORIGINAL_SCALE originalScale,
               CASE WHEN FLAG=#money_text1# THEN 0
                    WHEN FLAG=#money_text2# THEN 1
                    WHEN FLAG=#money_text3# THEN 2
                    WHEN FLAG=#money_text4# THEN 3
                    ELSE 4 END
                ORDER_TYPE
          FROM T_REPORT_RENT_MONEY
         WHERE STATUS=0
           AND CONVERT(DATE,CREATE_ON)=CONVERT(DATE,#DATE#)
           ORDER BY ORDER_TYPE
	</select>
	
	<select id="getTotalPeriod" resultClass="java.lang.Integer">
		  SELECT DISTINCT CONVERT(INT,LEASE_PERIOD) TOTAL_PERIOD FROM T_RENT_COLLECTIONPLAN WHERE RECP_ID=#RECP_ID# AND STATUS=0
	</select>
	
	<select id="getPayPeriod" resultClass="java.lang.Integer">
			 SELECT COUNT(1) PAY_PERIOD
			   FROM T_RENT_COLLECTIONDETAIL T  
			  WHERE T.STATUS=0 
			    AND ((T.IRR_MONTH_PRICE+ISNULL(T.VALUE_ADDED_TAX,0))-T.REDUCE_OWN_PRICE)&lt;=0.005
			    AND T.RECP_ID=#RECP_ID#
	</select>
	
	<select id="getTotalMoneyCount" resultClass="com.brick.bussinessReport.to.DunCaseChartTO">
		<!--获得每天应收总租金,总件数,因为加入委贷款结清,在下面CASE WHEN区间内需要减去那些委贷款,2013-2-1是委贷结清第一笔,2013-3-13 T_DUN_REPORT的JOB已经修正减去委贷结清的金额-->
            
            SELECT CASE WHEN CONVERT(DATE,CREATE_DATE) BETWEEN CONVERT(DATE,'2013-2-1') AND CONVERT(DATE,'2013-3-12')
                         AND DECP_NAME=#NAME#<!--'上海设备'-->
                        THEN ISNULL(SUM(TOTAL_DUN_PRICE)-
                        ( SELECT ISNULL(SUM(COST_MONEY-CAUTION_MONEY),0)+
                			           ISNULL(SUM(ACCRUAL),0)
                			      FROM T_LOAN_CASE
                			     WHERE STATUS=0		
                             AND PAY_CLOSE_DATE IS NOT NULL
                             AND CONVERT(DATE,PAY_CLOSE_DATE)&lt;=CONVERT(DATE,CREATE_DATE)),0)
                        ELSE ISNULL(SUM(TOTAL_DUN_PRICE),0)
                         END totalPrice,
                    CASE WHEN CONVERT(DATE,CREATE_DATE) BETWEEN CONVERT(DATE,'2013-2-1') AND CONVERT(DATE,'2013-3-12')
                          AND DECP_NAME=#NAME#<!--'上海设备'-->
                         THEN  SUM(TOTAL_DUN_COUNT)-
                        ( SELECT COUNT(1)
                			      FROM T_LOAN_CASE
                			     WHERE STATUS=0		
                             AND PAY_CLOSE_DATE IS NOT NULL
                             AND CONVERT(DATE,PAY_CLOSE_DATE)&lt;=CONVERT(DATE,CREATE_DATE))
                        ELSE SUM(TOTAL_DUN_COUNT)
                         END totalCount,
                    CONVERT(DATE,CREATE_DATE) createOn,CONVERT(NVARCHAR,CREATE_DATE,23) createOnDescr,DECP_NAME companyName,'GROUP_BY_COMPANY' flag
               FROM T_DUN_REPORT 
              WHERE CONVERT(DATE,CREATE_DATE)=CONVERT(DATE,GETDATE()-1)
                AND DECP_NAME!=#NAME1#
           GROUP BY CONVERT(DATE,CREATE_DATE),DECP_NAME<!-- 获得各办事处 -->
           UNION
           SELECT CASE WHEN CONVERT(DATE,CREATE_DATE) BETWEEN CONVERT(DATE,'2013-2-1') AND CONVERT(DATE,'2013-3-12')                         
                        THEN  SUM(TOTAL_DUN_PRICE)-
                        ( SELECT ISNULL(SUM(COST_MONEY-CAUTION_MONEY),0)+
                			           ISNULL(SUM(ACCRUAL),0)
                			      FROM T_LOAN_CASE
                			     WHERE STATUS=0		
                             AND PAY_CLOSE_DATE IS NOT NULL
                             AND CONVERT(DATE,PAY_CLOSE_DATE)&lt;=CONVERT(DATE,CREATE_DATE))
                        ELSE SUM(TOTAL_DUN_PRICE)
                         END totalPrice,
                    CASE WHEN CONVERT(DATE,CREATE_DATE) BETWEEN CONVERT(DATE,'2013-2-1') AND CONVERT(DATE,'2013-3-12')                          
                         THEN  SUM(TOTAL_DUN_COUNT)-
                        ( SELECT COUNT(1)
                			      FROM T_LOAN_CASE
                			     WHERE STATUS=0		
                             AND PAY_CLOSE_DATE IS NOT NULL
                             AND CONVERT(DATE,PAY_CLOSE_DATE)&lt;=CONVERT(DATE,CREATE_DATE))
                        ELSE SUM(TOTAL_DUN_COUNT)
                         END totalCount,
                    CONVERT(DATE,CREATE_DATE) createOn,CONVERT(NVARCHAR,CREATE_DATE,23) createOnDescr,'ALL' companyName,'TOTAL' flag
               FROM T_DUN_REPORT 
              WHERE CONVERT(DATE,CREATE_DATE)=CONVERT(DATE,GETDATE()-1)
                AND DECP_NAME!=#NAME1#
           GROUP BY CONVERT(DATE,CREATE_DATE)<!-- 获得Total -->
	</select>
	
	<!-- 获得逾期181天以上金额件数 -->
	<select id="getDun181" resultClass="com.brick.bussinessReport.to.DunCaseChartTO">
        SELECT TRC.DECP_ID companyId,TDC.DECP_NAME_CN companyName,SUM(ISNULL(NOCHARGE_TOTAL_RENPRICE,0)) dun181_Money,
        	   COUNT(1) dun181_Count,'GROUP_BY_COMPANY' flag
          FROM T_DUN_DAILY TDD
     LEFT JOIN T_RENT_CONTRACT TRC ON TDD.RECT_ID=TRC.RECT_ID AND TRC.STATUS=0
     LEFT JOIN T_DEPT_COMPANY TDC ON TDC.DECP_ID=TRC.DECP_ID AND TDC.STATUS=0
         WHERE TDD.STATUS=0
           AND CONVERT(DATE,TDD.CREATE_DATE)=CONVERT(DATE,GETDATE()-1)
           AND TDD.DUN_DAY>=181
      GROUP BY TRC.DECP_ID,TDC.DECP_NAME_CN
        UNION
      SELECT 0 companyId,'ALL' companyName,ISNULL(SUM(ISNULL(NOCHARGE_TOTAL_RENPRICE,0)),0) dun181_Money,
        	 COUNT(1) dun181_Count,'TOTAL' flag
          FROM T_DUN_DAILY TDD
     LEFT JOIN T_RENT_CONTRACT TRC ON TDD.RECT_ID=TRC.RECT_ID AND TRC.STATUS=0
     LEFT JOIN T_DEPT_COMPANY TDC ON TDC.DECP_ID=TRC.DECP_ID AND TDC.STATUS=0
         WHERE TDD.STATUS=0
           AND CONVERT(DATE,TDD.CREATE_DATE)=CONVERT(DATE,GETDATE()-1)
           AND TDD.DUN_DAY>=181
	</select>
	
	<!-- 获得逾期31,91天以上金额件数 -->
	<select id="getDun3191" resultClass="com.brick.bussinessReport.to.DunCaseChartTO">
      SELECT DECP_NAME companyName,DUN_COUNT_31+DUN_COUNT_61+DUN_COUNT_90+DUN_COUNT_180 dun31_count,
             DUN_PRICE_31+DUN_PRICE_61+DUN_PRICE_90+DUN_PRICE_180 dun31_money,
             DUN_COUNT_90+DUN_COUNT_180 dun91_count,DUN_PRICE_90+DUN_PRICE_180 dun91_money,'GROUP_BY_COMPANY' flag
        FROM T_DUN_REPORT 
       WHERE CONVERT(DATE,CREATE_DATE)=CONVERT(DATE,GETDATE()-1)
          UNION
      SELECT 'ALL' companyName,ISNULL(SUM(DUN_COUNT_31+DUN_COUNT_61+DUN_COUNT_90+DUN_COUNT_180),0) dun31_count,
             ISNULL(SUM(DUN_PRICE_31+DUN_PRICE_61+DUN_PRICE_90+DUN_PRICE_180),0) dun31_money,
             ISNULL(SUM(DUN_COUNT_90+DUN_COUNT_180),0) dun91_count,ISNULL(SUM(DUN_PRICE_90+DUN_PRICE_180),0) dun91_money,'TOTAL' flag
        FROM T_DUN_REPORT WHERE CONVERT(DATE,CREATE_DATE)=CONVERT(DATE,GETDATE()-1)    
	</select>
	
	<insert id="insertDunChart">
		INSERT INTO T_DUN_REPORT_CHART
		(COMPANY_NAME,DUN_31_COUNT,DUN_31_MONEY,DUN_91_COUNT,DUN_91_MONEY,DUN_181_COUNT,DUN_181_MONEY,TOTAL_PRICE,TOTAL_COUNT,CREATE_ON,FLAG,STATUS)
		VALUES
		(#companyName#,#dun31_Count#,#dun31_Money#,#dun91_Count#,#dun91_Money#,#dun181_Count#,#dun181_Money#,#totalPrice#,#totalCount#,#createOn#,#flag#,0)
	</insert>
	
	<select id="getDayChart" resultClass="com.brick.bussinessReport.to.DunCaseChartTO">
		SELECT ID,COMPANY_NAME companyName,       
		       ROUND((DUN_31_MONEY/CONVERT(FLOAT,CASE WHEN TOTAL_PRICE=0 THEN 1 ELSE TOTAL_PRICE END)*100),2) per31_money,       
		       ROUND(DUN_31_COUNT/CONVERT(FLOAT,CASE WHEN TOTAL_COUNT=0 THEN 1 ELSE TOTAL_COUNT END)*100,2) per31_count,
		       ROUND((DUN_91_MONEY/CONVERT(FLOAT,CASE WHEN TOTAL_PRICE=0 THEN 1 ELSE TOTAL_PRICE END)*100),2) per91_money,       
		       ROUND(DUN_91_COUNT/CONVERT(FLOAT,CASE WHEN TOTAL_COUNT=0 THEN 1 ELSE TOTAL_COUNT END)*100,2) per91_count,
		       ROUND((DUN_181_MONEY/CONVERT(FLOAT,CASE WHEN TOTAL_PRICE=0 THEN 1 ELSE TOTAL_PRICE END)*100),2) per181_money,       
		       ROUND(DUN_181_COUNT/CONVERT(FLOAT,CASE WHEN TOTAL_COUNT=0 THEN 1 ELSE TOTAL_COUNT END)*100,2) per181_count,
		       CONVERT(VARCHAR,CREATE_ON,23) createOnDescr
		  FROM T_DUN_REPORT_CHART 
		 WHERE STATUS=0 
		   AND CREATE_ON BETWEEN CONVERT(DATE,#fromDate#) AND CONVERT(DATE,#toDate#)
	</select>
	
	<select id="getWeekChart" resultClass="com.brick.bussinessReport.to.DunCaseChartTO">
	    SELECT ID,COMPANY_NAME companyName,       
		       ROUND((DUN_31_MONEY/CONVERT(FLOAT,CASE WHEN TOTAL_PRICE=0 THEN 1 ELSE TOTAL_PRICE END)*100),2) per31_money,       
		       ROUND(DUN_31_COUNT/CONVERT(FLOAT,CASE WHEN TOTAL_COUNT=0 THEN 1 ELSE TOTAL_COUNT END)*100,2) per31_count,
		       ROUND((DUN_91_MONEY/CONVERT(FLOAT,CASE WHEN TOTAL_PRICE=0 THEN 1 ELSE TOTAL_PRICE END)*100),2) per91_money,       
		       ROUND(DUN_91_COUNT/CONVERT(FLOAT,CASE WHEN TOTAL_COUNT=0 THEN 1 ELSE TOTAL_COUNT END)*100,2) per91_count,
		       ROUND((DUN_181_MONEY/CONVERT(FLOAT,CASE WHEN TOTAL_PRICE=0 THEN 1 ELSE TOTAL_PRICE END)*100),2) per181_money,       
		       ROUND(DUN_181_COUNT/CONVERT(FLOAT,CASE WHEN TOTAL_COUNT=0 THEN 1 ELSE TOTAL_COUNT END)*100,2) per181_count,
		       CONVERT(VARCHAR,CREATE_ON,23) createOnDescr
		  FROM T_DUN_REPORT_CHART 
		 WHERE STATUS=0 
		   AND (DATENAME(WEEKDAY,(CREATE_ON))='星期五' OR DATENAME(WEEKDAY,(CREATE_ON))='Friday')
		   AND CREATE_ON BETWEEN CONVERT(DATE,#fromDate#) AND CONVERT(DATE,#toDate#)
	</select>
	
	<select id="getMonthChart" resultClass="com.brick.bussinessReport.to.DunCaseChartTO">
		SELECT ID,COMPANY_NAME companyName,       
		       ROUND((DUN_31_MONEY/CONVERT(FLOAT,CASE WHEN TOTAL_PRICE=0 THEN 1 ELSE TOTAL_PRICE END)*100),2) per31_money,       
		       ROUND(DUN_31_COUNT/CONVERT(FLOAT,CASE WHEN TOTAL_COUNT=0 THEN 1 ELSE TOTAL_COUNT END)*100,2) per31_count,
		       ROUND((DUN_91_MONEY/CONVERT(FLOAT,CASE WHEN TOTAL_PRICE=0 THEN 1 ELSE TOTAL_PRICE END)*100),2) per91_money,       
		       ROUND(DUN_91_COUNT/CONVERT(FLOAT,CASE WHEN TOTAL_COUNT=0 THEN 1 ELSE TOTAL_COUNT END)*100,2) per91_count,
		       ROUND((DUN_181_MONEY/CONVERT(FLOAT,CASE WHEN TOTAL_PRICE=0 THEN 1 ELSE TOTAL_PRICE END)*100),2) per181_money,       
		       ROUND(DUN_181_COUNT/CONVERT(FLOAT,CASE WHEN TOTAL_COUNT=0 THEN 1 ELSE TOTAL_COUNT END)*100,2) per181_count,
		       CONVERT(VARCHAR,CREATE_ON,23) createOnDescr
		  FROM T_DUN_REPORT_CHART 
		 WHERE STATUS=0 
		   AND CREATE_ON IN ($dateList$)
	</select>
	
	<select id="getDeskDun" resultClass="com.brick.bussinessReport.to.DunCaseChartTO">
	    SELECT DUN_31_MONEY dun31_Money,DUN_31_COUNT dun31_Count,DUN_181_MONEY dun181_Money,DUN_181_COUNT dun181_Count,
	    	   ROUND((DUN_31_MONEY/CONVERT(FLOAT,CASE WHEN TOTAL_PRICE=0 THEN 1 ELSE TOTAL_PRICE END)*100),2) per31_money,       
		       ROUND(DUN_31_COUNT/CONVERT(FLOAT,CASE WHEN TOTAL_COUNT=0 THEN 1 ELSE TOTAL_COUNT END)*100,2) per31_count,
		       ROUND((DUN_181_MONEY/CONVERT(FLOAT,CASE WHEN TOTAL_PRICE=0 THEN 1 ELSE TOTAL_PRICE END)*100),2) per181_money,       
		       ROUND(DUN_181_COUNT/CONVERT(FLOAT,CASE WHEN TOTAL_COUNT=0 THEN 1 ELSE TOTAL_COUNT END)*100,2) per181_count		       
		  FROM T_DUN_REPORT_CHART 
		 WHERE STATUS=0 
		   AND CONVERT(DATE,CREATE_ON)=CONVERT(DATE,GETDATE()-1)
       AND COMPANY_NAME='ALL'  
	</select>
	
	
	<!-- 以下各办事处全年平均单价 0402zhang-->
		<select id="getDeptAvgPayMoneyByYear" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
				SELECT  DEPT_ID as deptId, 
				(ISNULL(PAY_MONEY_1, 0)+  ISNULL(PAY_MONEY_2, 0)+ISNULL(PAY_MONEY_3, 0)+ISNULL(PAY_MONEY_4, 0)+ISNULL(PAY_MONEY_5, 0)+ISNULL(PAY_MONEY_6, 0)+
				 ISNULL(PAY_MONEY_7, 0)+ ISNULL(PAY_MONEY_8, 0)+ISNULL(PAY_MONEY_9, 0)+ISNULL(PAY_MONEY_10, 0)+ISNULL(PAY_MONEY_11, 0)+ISNULL(PAY_MONEY_12, 0))/
				 (ISNULL(PAY_COUNT_1, 0)+  ISNULL(PAY_COUNT_2, 0)+ISNULL(PAY_COUNT_3, 0)+ISNULL(PAY_COUNT_4, 0)+ISNULL(PAY_COUNT_5, 0)+ISNULL(PAY_COUNT_6, 0)+
				 ISNULL(PAY_COUNT_7, 0)+ ISNULL(PAY_COUNT_8, 0)+ISNULL(PAY_COUNT_9, 0)+ISNULL(PAY_COUNT_10, 0)+ISNULL(PAY_COUNT_11, 0)+ISNULL(PAY_COUNT_12, 0))
				 AS payMoney,PAY_YEAR as payYear, CREATE_ON as createOn 
				 FROM T_AVG_PAY_MONEY
					WHERE MONTH(CREATE_ON)=MONTH(#DATE#)
			       AND YEAR(CREATE_ON)=YEAR(#DATE#)
		</select>
	<!-- 以上各办事处全年平均单价 0402zhang -->
	<!-- 以下全年 0402zhang-->
	<select id="getAvgYear" resultClass="com.brick.batchjob.to.AvgPayMoneyBatchJobTo">
				   SELECT  
				(ISNULL(SUM(PAY_MONEY_1), 0)+  ISNULL(SUM(PAY_MONEY_2), 0)+ISNULL(SUM(PAY_MONEY_3), 0)+
      			  ISNULL(SUM(PAY_MONEY_4), 0)+ISNULL(SUM(PAY_MONEY_5), 0)+ISNULL(SUM(PAY_MONEY_6), 0)+
				 ISNULL(  SUM(PAY_MONEY_7), 0)+ ISNULL(    SUM(PAY_MONEY_8), 0)+ISNULL(SUM(PAY_MONEY_9), 0)+
        			 ISNULL(   SUM(PAY_MONEY_10), 0)+ISNULL( SUM(PAY_MONEY_11), 0)+ISNULL( SUM(PAY_MONEY_12), 0))/
				 (ISNULL(SUM(PAY_COUNT_1), 0)+  ISNULL(SUM(PAY_COUNT_2), 0)+ISNULL(SUM(PAY_COUNT_3), 0)
        			 +ISNULL(   SUM(PAY_COUNT_4), 0)+ISNULL(SUM(PAY_COUNT_5), 0)+ISNULL(SUM(PAY_COUNT_6), 0)+
				 ISNULL(SUM(PAY_COUNT_7), 0)+ ISNULL(SUM(PAY_COUNT_8), 0)+ISNULL(  SUM(PAY_COUNT_9), 0)+
        			 ISNULL( SUM(PAY_COUNT_10), 0)+ISNULL( SUM(PAY_COUNT_11), 0)+ISNULL(       SUM(PAY_COUNT_12), 0))
				 AS  payMoney
				 FROM T_AVG_PAY_MONEY
				 WHERE MONTH(CREATE_ON)=MONTH(#DATE#)
					AND   YEAR(CREATE_ON)=YEAR(#DATE#)
		</select>
	<!--以上 全年0402zhang -->
	
	<select id="getComputeMoneyCount" resultClass="java.util.HashMap">
		      SELECT SUM(T1.IRR_MONTH_PRICE)+SUM(T1.VALUE_ADDED_TAX) MONEY,COUNT(1) [COUNT],CONVERT(DATE,T1.PAY_DATE) PAY_DATE
			  	FROM T_RENT_COLLECTIONDETAIL T1
		   LEFT JOIN T_RENT_COLLECTIONPLAN T2 ON T2.RECP_ID=T1.RECP_ID AND T2.STATUS=0
		 	   WHERE T1.STATUS=0
		         AND CONVERT(DATE,T1.PAY_DATE) BETWEEN CONVERT(DATE,GETDATE()) AND CONVERT(DATE,DATEADD(D,-1,DATEADD(M,1,CONVERT(CHAR(7),GETDATE(),120)+'-01')))
		         AND T2.RECP_STATUS!=1 
		         AND T2.RECP_STATUS!=3
	        GROUP BY CONVERT(DATE,T1.PAY_DATE)
	</select>
	<insert id="insertComputeMoneyCount">
			INSERT INTO T_COMPUTE_MONEY
			(MONEY,COUNT,PAY_DATE,STATUS,CREATE_DATE)
			VALUES
			(#MONEY#,#COUNT#,#PAY_DATE#,0,GETDATE())
	</insert>
	<select id="queryComputeMoneyCount" resultClass="java.util.HashMap">
		SELECT MONEY,COUNT,CONVERT(DATE,PAY_DATE) PAY_DATE
		  FROM T_COMPUTE_MONEY
		 WHERE STATUS=0
		 <isNotEmpty property="FROM_DATE">
		   AND CONVERT(DATE,PAY_DATE)>=CONVERT(DATE,#FROM_DATE#)
		 </isNotEmpty>
		 <isEmpty property="FROM_DATE">
		   AND CONVERT(DATE,PAY_DATE)>=CONVERT(DATE,CONVERT(VARCHAR,YEAR(GETDATE()))+'-'+CONVERT(VARCHAR,MONTH(GETDATE()))+'-01')
		 </isEmpty>
		 <isNotEmpty property="TO_DATE">
		   AND CONVERT(DATE,PAY_DATE)&lt;=CONVERT(DATE,#TO_DATE#)
		 </isNotEmpty>
		 <isEmpty property="TO_DATE">
		   AND CONVERT(DATE,PAY_DATE)&lt;=CONVERT(DATE,DATEADD(D,-1,DATEADD(M,1,CONVERT(CHAR(7),GETDATE(),120)+'-01')))
		 </isEmpty>
	</select>
	
	<select id="queryAchievementCase" parameterClass="map" resultClass="com.brick.bussinessReport.to.AchievementTo" >
		 select   
		    c.DECP_ID as deptId,
		    c.DECP_NAME_CN as deptName,
	      	g.CREDIT_SPECIAL_CODE creditSpecialCode,
		    count(x.qty) as payCount,
		    sum(t.PAY_MONEY) as payMoney
		  from (
		  	select  CREDIT_ID,sum(pay_money) as  pay_money
			from T_SUPL_PLAYDETIL 
			where 1=1 and STATUS = 0 
			<isNotEmpty prepend="and" property="beginTime">
		   	cast(PAY_DATE as date) &gt;= #beginTime#	
		  	</isNotEmpty>
		  	<isNotEmpty prepend="and" property="endTime">
		   	cast(PAY_DATE as date) &lt;= #endTime#
		  	</isNotEmpty>
			group by CREDIT_ID		  
		  ) t
		  left join (
		  	select 1 as qty,s.CREDIT_ID
			from T_SUPL_PLAYDETIL s
			where 1=1  and s.STATUS = 0 
			<isNotEmpty prepend="and" property="beginTime">
		   	cast(s.PAY_DATE as date) &gt;= #beginTime#	
		  	</isNotEmpty>
		  	<isNotEmpty prepend="and" property="endTime">
		   	cast(s.PAY_DATE as date) &lt;= #endTime#
		  	</isNotEmpty>
			group by s.CREDIT_ID
		  ) x on x.CREDIT_ID = t.CREDIT_ID
		  LEFT JOIN T_PRJT_CREDIT tpc on t.CREDIT_ID = tpc.ID
		  left join T_USER_USER u ON u.ID = tpc.SENSOR_ID
		  left join T_DEPT_DEPARTMENT  d on u.DEPT_ID = d.ID
		  left join T_DEPT_COMPANY c on d.DECP_ID = c.DECP_ID
		  left join T_PRJT_CREDIT_SPECIAL_GROUP g on g.CREDIT_SPECIAL_CODE = tpc.CREDIT_SPECIAL_CODE
		  where 1=1
	   	   and exists(
	      		select tdcpy.decp_id
				from t_dept_company tdcpy
				where tdcpy.status = 0 and tdcpy.legelr=2
				AND tdcpy.decp_id!=1 and c.DECP_ID =tdcpy.decp_id
	   		 )
	    	group by   c.DECP_NAME_CN,c.DECP_ID	,g.CREDIT_SPECIAL_CODE
	    	
	</select>
	
	<select id="queryCreditSpecialCode" parameterClass="map" resultClass="hashmap">
	  select CREDIT_SPECIAL_NAME,CREDIT_SPECIAL_CODE from T_PRJT_CREDIT_SPECIAL_GROUP where status = 0
	</select>
	
	<select id="getSupplierLevelForPayMoneyByMonth" resultClass="hashmap">
		  SELECT TPC.CREDIT_RUNCODE,TRC.LEASE_CODE,TCC.CUST_NAME,O.BACKCOMP SUPL_NAME,
		  		 TSS.SUPP_LEVEL,O.PAY_MONEY,TUU.NAME,TDC.DECP_NAME_CN
	        FROM T_PRJT_CREDIT TPC   
	   LEFT JOIN T_USER_USER TUU ON TPC.SENSOR_ID=TUU.ID
	   LEFT JOIN T_DEPT_DEPARTMENT TDDT ON TDDT.STATUS=0 AND TUU.DEPT_ID=TDDT.ID
	   LEFT JOIN T_DEPT_COMPANY TDC ON TDC.STATUS=0 AND TDDT.DECP_ID=TDC.DECP_ID
	   LEFT JOIN T_CUST_CUSTOMER TCC ON TCC.STATUS=0 AND TPC.CUST_ID=TCC.CUST_ID	  
	   LEFT JOIN T_RENT_CONTRACT TRC ON TRC.STATUS=0 AND TPC.ID=TRC.PRCD_ID
	   LEFT JOIN T_RENT_COLLECTIONPLAN TRCN ON TRCN.STATUS=0 AND TRC.RECT_ID=TRCN.RECT_ID    
	   LEFT JOIN (SELECT SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,MIN(PAY_DATE) PAY_DATE,PAY_ORDER,BACKCOMP
	                FROM T_SUPL_PLAYDETIL 
	               WHERE STATUS=0
	                 AND CREDIT_ID IS NOT NULL
	                 AND PAY_DATE IS NOT NULL
	                 AND CONVERT(DATE,PAY_DATE)!=CONVERT(DATE,'1900-1-1')          
	            GROUP BY CREDIT_ID,PAY_ORDER,BACKCOMP) O ON TPC.ID=O.CREDIT_ID
       LEFT JOIN T_SUPL_SUPPLIER TSS ON TSS.STATUS=0 AND TSS.[NAME]=O.BACKCOMP
	       WHERE TPC.STATUS=0
	         AND TRC.LEASE_CODE IS NOT NULL
	         AND O.PAY_MONEY IS NOT NULL
             AND MONTH(O.PAY_DATE)=MONTH(GETDATE()-1)
             AND YEAR(O.PAY_DATE)=YEAR(GETDATE()-1)
	</select>
	
	<!-- 每天定时插入逾期状况统计详细表（DunReportDetail）job -->
	<insert id="insertDunReportDetail">
		INSERT INTO T_DUN_REPORT_DETAIL 
		SELECT
			T1.RECP_ID,
			T1.ORG_DECP_ID DECP_ID,
			T1.DECP_NAME_CN DECP_NAME,
			DUN.DUN_DAY,
			T1.CREDIT_SPECIAL_CODE,
			T2.PRICE DUN_PRICE,
			T1.UP_USER_ID,
			T1.UP_USER_NAME,
			T1.ORG_USER_NAME,
			T1.ORG_USER_ID,
			GETDATE() CREATE_DATE,
	     	T2.CREDIT_SPECIAL_NAME,
	     	T3.CREATE_USER_ID APPROVAL_USER_ID,
	     	T3.[NAME] APPROVAL_USER_NAME,
	     	T1.LEASE_RZE
		FROM
		(
		 	<!-- T1所有数据 -->
			SELECT
				TPC.ORG_DECP_ID,
        		TDC.DECP_NAME_CN,
				UP.[NAME] UP_USER_NAME,
				UP.ID UP_USER_ID,
				U.ID ORG_USER_ID,
				U.[NAME] ORG_USER_NAME,
				RECP.RECP_ID,
		      	TPC.ID,
            	TPCS.LEASE_RZE,
				(
					CASE WHEN TPC.CREDIT_SPECIAL_CODE = ''
					OR TPC.CREDIT_SPECIAL_CODE IS NULL THEN '-1' ELSE TPC.CREDIT_SPECIAL_CODE END
				) CREDIT_SPECIAL_CODE
			FROM 
				T_RENT_COLLECTIONPLAN RECP
			LEFT JOIN T_RENT_CONTRACT RECT ON RECP.RECT_ID = RECT.RECT_ID AND RECT.STATUS = 0
			LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID = RECT.PRCD_ID AND TPC.STATUS = 0
			LEFT JOIN T_USER_USER U ON TPC.ORG_SENSOR_ID = U.ID
			LEFT JOIN T_USER_USER UP ON UP.ID = TPC.ORG_UP_USER
      		LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCS.CREDIT_ID = TPC.ID AND TPCS.STATUS = 0
          	LEFT JOIN T_DEPT_COMPANY TDC ON TDC.DECP_ID = TPC.ORG_DECP_ID
			WHERE RECP.STATUS = 0
				AND (RECP.RECP_STATUS = 0 OR RECP.FUND_STATUS = 0)
				AND TPC.FINANCECONTRACT_DATE IS NOT NULL
		) T1
		LEFT JOIN (
			<!-- T2所有数据对应金额 -->
			SELECT
				TPC.ORG_DECP_ID,
				UP.[NAME] UP_USER_NAME,
				UP.ID UP_USER_ID,
				PRIC.PRICE,
	           	U.ID ORG_USER_ID,
	           	RECP.RECP_ID,
	            G.CREDIT_SPECIAL_NAME,
				(
					CASE WHEN G.CREDIT_SPECIAL_CODE = ''
					OR G.CREDIT_SPECIAL_CODE IS NULL THEN '-1' ELSE G.CREDIT_SPECIAL_CODE END
				) CREDIT_SPECIAL_CODE
			FROM 
				T_RENT_COLLECTIONPLAN RECP
			LEFT JOIN (
				SELECT(
					SUM ( RECD.IRR_MONTH_PRICE + ISNULL(RECD.VALUE_ADDED_TAX, 0) ) - SUM ( ISNULL(RECD.REDUCE_OWN_PRICE, 0) ) ) AS 'PRICE',
					RECD.RECP_ID
					FROM T_RENT_COLLECTIONDETAIL RECD
					WHERE RECD.STATUS = 0
					GROUP BY RECD.RECP_ID
				) PRIC ON PRIC.RECP_ID = RECP.RECP_ID
			LEFT JOIN T_RENT_CONTRACT RECT ON RECP.RECT_ID = RECT.RECT_ID AND RECT.STATUS = 0
			LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID = RECT.PRCD_ID AND TPC.STATUS = 0
			LEFT JOIN T_USER_USER U ON TPC.ORG_SENSOR_ID = U.ID 
			LEFT JOIN T_USER_USER UP ON UP.ID = TPC.ORG_UP_USER
			LEFT JOIN T_PRJT_CREDIT_SPECIAL_GROUP G ON G.CREDIT_SPECIAL_CODE = TPC.CREDIT_SPECIAL_CODE
			WHERE RECP.STATUS = 0
			AND ( RECP.RECP_STATUS = 0 OR RECP.FUND_STATUS = 0 )
			AND EXISTS (
				SELECT PRCD.ID FROM T_PRJT_CREDIT PRCD
				LEFT JOIN T_RENT_CONTRACT CT ON CT.PRCD_ID = PRCD.ID
				WHERE CT.RECT_ID = RECT.RECT_ID
				AND PRCD.FINANCECONTRACT_DATE IS NOT NULL
			)
		) T2 ON  T1.RECP_ID = T2.RECP_ID
		LEFT JOIN (
				<!-- T3最后审核人 -->
		      SELECT RISK.CREDIT_ID, RM.CREATE_USER_ID, U.[NAME]
		      FROM T_PRJT_RISK_CONTROL RISK
		      LEFT JOIN (
		      SELECT M1.PRC_ID, M1.CREATE_USER_ID
		      FROM T_PRJT_RISK_CONTROLMEMO M1
		      WHERE M1.CREATE_TIME = (
			      SELECT TOP 1 M2.CREATE_TIME FROM T_PRJT_RISK_CONTROLMEMO M2
			      WHERE M2.PRC_ID = M1.PRC_ID
			      ORDER BY M2.CREATE_TIME DESC
		      )
		      	  AND M1.STATUS = 0
		      ) RM ON RM.PRC_ID = RISK.PRC_ID
		      LEFT JOIN T_USER_USER U ON RM.CREATE_USER_ID = U.ID
		      WHERE RISK.STATE = 1 AND RISK.STATUS = 0
		  ) T3 ON T3.CREDIT_ID = T1.ID
		   LEFT JOIN 
		   (
		   		<!--T逾期数据，逾期天数 -->
        		SELECT
	 				P.RECP_ID,
	 				MAX (TPC.ORG_DECP_ID) AS ORG_DECP_ID,
	 				MAX (T.DUN_DAY) AS DUN_DAY,
	 				MAX (TPC.CREDIT_SPECIAL_CODE) AS CREDIT_SPECIAL_CODE,
	 				SUM (ISNULL(DETAIL.IRR_MONTH_PRICE, 0)) 
	 					+ SUM (ISNULL(DETAIL.VALUE_ADDED_TAX, 0)) 
	 					- SUM (ISNULL(DETAIL.REDUCE_OWN_PRICE, 0)) AS DUN_PRICE,
	 				MAX (TPC.ORG_UP_USER) AS UP_USER_ID,
	 				UP.[NAME] AS UP_USER_NAME,
	 				U.[NAME] AS ORG_USER_NAME,
	 				U.ID AS ORG_USER_ID,
	 				GETDATE() CREATE_DATE
	 			FROM 
	 				T_RENT_COLLECTIONPLAN P
	 			LEFT JOIN T_RENT_COLLECTIONDETAIL DETAIL ON P.RECP_ID = DETAIL.RECP_ID
	 			LEFT JOIN (
	 				SELECT RECP_ID,
	 					(
	 						SELECT MAX (DATEDIFF(DAY, PAY_DATE, GETDATE())) AS DUN_DAY
	 						FROM 
	 							T_RENT_COLLECTIONDETAIL
	 						WHERE
	 							(REDUCE_OWN_PRICE IS NULL
	 							OR (ISNULL(CONVERT (MONEY, IRR_MONTH_PRICE),0) + ISNULL(CONVERT (MONEY,DETAIL.VALUE_ADDED_TAX),0)) > ISNULL(CONVERT (MONEY, REDUCE_OWN_PRICE),0))
		 						AND DATEDIFF(DAY, PAY_DATE, GETDATE()) > 0
		 						AND STATUS = 0
		 						AND RECP_ID = DETAIL.RECP_ID
	 					) AS DUN_DAY
	 				FROM
	 					T_RENT_COLLECTIONDETAIL DETAIL
	 				WHERE
	 					DATEDIFF(DAY, PAY_DATE, GETDATE()) > 0
	 					AND DETAIL.STATUS = 0
	 				GROUP BY RECP_ID, DETAIL.VALUE_ADDED_TAX
	 			) T ON T.RECP_ID = P.RECP_ID
	 			LEFT JOIN T_RENT_COLLECTIONPLAN RECP ON P.RECP_ID = RECP.RECP_ID AND RECP.STATUS = 0
	 			LEFT JOIN T_RENT_CONTRACT RECT ON RECP.RECT_ID = RECT.RECT_ID AND RECT.STATUS = 0
	 			LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID = RECT.PRCD_ID
	 			LEFT JOIN T_USER_USER U ON RECT.ORG_SENSOR_ID = U.ID
	 			LEFT JOIN T_USER_USER UP ON TPC.ORG_UP_USER = UP.ID
	 			WHERE DETAIL.STATUS = 0
	 			AND P.STATUS = 0
	 			AND ( P.RECP_STATUS = 0 OR P.FUND_STATUS = 0 )
	 			AND T.DUN_DAY IS NOT NULL
	 			AND NOT EXISTS (
	 				SELECT 0 FROM T_PRJT_CREDIT PRCD
	 				WHERE PRCD.FINANCECONTRACT_DATE IS NULL
	 				AND PRCD.ID = RECT.PRCD_ID
	 			)
	 			GROUP BY P.RECP_ID, UP.[NAME], U.[NAME], U.ID
	 			HAVING SUM ( ISNULL(DETAIL.IRR_MONTH_PRICE, 0) ) + SUM ( ISNULL(DETAIL.VALUE_ADDED_TAX, 0) ) > SUM ( ISNULL(DETAIL.REDUCE_OWN_PRICE, 0) )
		   ) DUN
		   ON T1.RECP_ID = DUN.RECP_ID
	</insert>
	
	<!-- 每天定时插入逾期状况统计详细表前清空当天数据（DunReportDetail）job -->
	<delete id="deleteDunReportDetail">
		delete from T_DUN_REPORT_DETAIL
  		where datediff(day,create_date,getdate()) = 0;
	</delete>
	
	<!-- 逾期状况统计表（一级查询[非金额]  或  一级查询[金额]+二级查询[非金额]） -->
	<select id="queryDunCase" parameterClass="map" resultClass="com.brick.bussinessReport.to.DunCaseDetailTO">
		SELECT 
			<isEqual property="byType" compareValue="dept">
				DECP_ID DECPID,
				DECP_NAME DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="special">
				0 DECPID,
				'' DECPNAME,
				CREDIT_SPECIAL_CODE CREDITSPECIALCODE,
		  		CREDIT_SPECIAL_NAME CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUpUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				UP_USER_ID UPUSERID,
		  		UP_USER_NAME UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				ORG_USER_ID ORGUSERID,
		  		ORG_USER_NAME ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="approvalUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		APPROVAL_USER_ID APPROVALUSERID,
      			APPROVAL_USER_NAME APPROVALUSERNAME,
			</isEqual>
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN 1 ELSE 0 END) COUNT1_7,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN DUN_PRICE ELSE 0 END) PRICE1_7,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN 1 ELSE 0 END) COUNT8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN DUN_PRICE ELSE 0 END) PRICE8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN 1 ELSE 0 END) COUNT15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN DUN_PRICE ELSE 0 END) PRICE15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN 1 ELSE 0 END) COUNT31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN DUN_PRICE ELSE 0 END) PRICE31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN 1 ELSE 0 END) COUNT61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN DUN_PRICE ELSE 0 END) PRICE61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN 1 ELSE 0 END) COUNT91_180,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN DUN_PRICE ELSE 0 END) PRICE91_180,
			SUM(CASE WHEN DUN_DAY > 180 THEN 1 ELSE 0 END) countMoreThan181,
			SUM(CASE WHEN DUN_DAY > 180 THEN DUN_PRICE ELSE 0 END) priceMoreThan181,
			COUNT(1) TOTALCOUNT,
      		SUM(DUN_PRICE) TOTALPRICE
		FROM T_DUN_REPORT_DETAIL
		WHERE 
			  DUN_PRICE > 0
		<isNotEmpty prepend="and" property="DATE">
			CREATE_DATE = CONVERT(DATE,#DATE#)
	  	</isNotEmpty>
		<isEqual property="type" compareValue="price">
		  	<isNotEmpty prepend="and" property="priceBegin">
				LEASE_RZE >= #priceBegin#
		  	</isNotEmpty>
		  	<isNotEmpty prepend="and" property="priceEnd">
				LEASE_RZE &lt; #priceEnd#
		  	</isNotEmpty>
		</isEqual>
		<isNotEmpty prepend="" property="QUERY_TYPE">
					<isEqual prepend="and" property="QUERY_TYPE" compareValue="1">
						 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
					</isEqual>
					<isEqual prepend="and" property="QUERY_TYPE" compareValue="2">
						 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
					</isEqual>
					<isEqual prepend="and" property="QUERY_TYPE" compareValue="3">
						 (DECP_NAME LIKE '%$TYPE1$%' OR DECP_NAME LIKE '%$TYPE2$%')
					</isEqual>
		</isNotEmpty>
		<isNotEmpty property="cmpyList">
				AND DECP_NAME IN ($cmpyList$)
		</isNotEmpty>
		GROUP BY 
		<isEqual property="byType" compareValue="dept">
			DECP_ID,DECP_NAME ORDER BY DECP_NAME
		</isEqual>
		<isEqual property="byType" compareValue="special">
			CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME ORDER BY CREDIT_SPECIAL_CODE DESC
		</isEqual>
		<isEqual property="byType" compareValue="orgUpUser">
			UP_USER_ID,UP_USER_NAME ORDER BY UP_USER_NAME
		</isEqual>
		<isEqual property="byType" compareValue="orgUser">
			ORG_USER_ID,ORG_USER_NAME ORDER BY ORG_USER_NAME
		</isEqual>
		<isEqual property="byType" compareValue="approvalUser">
			APPROVAL_USER_ID,APPROVAL_USER_NAME ORDER BY APPROVAL_USER_NAME
		</isEqual>
	</select>
	
	<!-- 逾期状况统计表（二级查询，不含金额） -->
	<select id="queryDunCaseDetail" parameterClass="map" resultClass="com.brick.bussinessReport.to.DunCaseDetailTO">
		SELECT 
			DECPID = 
			<isEqual property="byType" compareValue="dept">DECP_ID</isEqual>
			<isEqual property="type" compareValue="dept">DECP_ID</isEqual>
			<isNotEqual property="byType" compareValue="dept">
				<isNotEqual property="type" compareValue="dept">0</isNotEqual>
			</isNotEqual>,
			DECPNAME = 
			<isEqual property="byType" compareValue="dept">DECP_NAME</isEqual>
			<isEqual property="type" compareValue="dept">DECP_NAME</isEqual>
			<isNotEqual property="byType" compareValue="dept">
				<isNotEqual property="type" compareValue="dept">''</isNotEqual>
			</isNotEqual>,
			CREDITSPECIALCODE = 
			<isEqual property="byType" compareValue="special">CREDIT_SPECIAL_CODE</isEqual>
			<isEqual property="type" compareValue="special">CREDIT_SPECIAL_CODE</isEqual>
			<isNotEqual property="byType" compareValue="special">
				<isNotEqual property="type" compareValue="special">''</isNotEqual>
			</isNotEqual>,
	  		CREDITSPECIALNAME = 
	  		<isEqual property="byType" compareValue="special">CREDIT_SPECIAL_NAME</isEqual>
			<isEqual property="type" compareValue="special">CREDIT_SPECIAL_NAME</isEqual>
			<isNotEqual property="byType" compareValue="special">
				<isNotEqual property="type" compareValue="special">''</isNotEqual>
			</isNotEqual>,
			UPUSERID = 
			<isEqual property="byType" compareValue="orgUpUser">UP_USER_ID</isEqual>
			<isEqual property="type" compareValue="orgUpUser">UP_USER_ID</isEqual>
			<isNotEqual property="byType" compareValue="orgUpUser">
				<isNotEqual property="type" compareValue="orgUpUser">0</isNotEqual>
			</isNotEqual>,
	  		UPUSERNAME = 
	  		<isEqual property="byType" compareValue="orgUpUser">UP_USER_NAME</isEqual>
			<isEqual property="type" compareValue="orgUpUser">UP_USER_NAME</isEqual>
			<isNotEqual property="byType" compareValue="orgUpUser">
				<isNotEqual property="type" compareValue="orgUpUser">''</isNotEqual>
			</isNotEqual>,
			ORGUSERID = 
			<isEqual property="byType" compareValue="orgUser">ORG_USER_ID</isEqual>
			<isEqual property="type" compareValue="orgUser">ORG_USER_ID</isEqual>
			<isNotEqual property="byType" compareValue="orgUser">
				<isNotEqual property="type" compareValue="orgUser">0</isNotEqual>
			</isNotEqual>,
	  		ORGUSERNAME = 
	  		<isEqual property="byType" compareValue="orgUser">ORG_USER_NAME</isEqual>
			<isEqual property="type" compareValue="orgUser">ORG_USER_NAME</isEqual>
			<isNotEqual property="byType" compareValue="orgUser">
				<isNotEqual property="type" compareValue="orgUser">''</isNotEqual>
			</isNotEqual>,
	  		APPROVALUSERID = 
	  		<isEqual property="byType" compareValue="approvalUser">APPROVAL_USER_ID</isEqual>
			<isEqual property="type" compareValue="approvalUser">APPROVAL_USER_ID</isEqual>
			<isNotEqual property="byType" compareValue="approvalUser">
				<isNotEqual property="type" compareValue="approvalUser">0</isNotEqual>
			</isNotEqual>,
   			APPROVALUSERNAME = 
   			<isEqual property="byType" compareValue="approvalUser">APPROVAL_USER_NAME</isEqual>
			<isEqual property="type" compareValue="approvalUser">APPROVAL_USER_NAME</isEqual>
			<isNotEqual property="byType" compareValue="approvalUser">
				<isNotEqual property="type" compareValue="approvalUser">''</isNotEqual>
			</isNotEqual>,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN 1 ELSE 0 END) COUNT1_7,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN DUN_PRICE ELSE 0 END) PRICE1_7,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN 1 ELSE 0 END) COUNT8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN DUN_PRICE ELSE 0 END) PRICE8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN 1 ELSE 0 END) COUNT15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN DUN_PRICE ELSE 0 END) PRICE15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN 1 ELSE 0 END) COUNT31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN DUN_PRICE ELSE 0 END) PRICE31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN 1 ELSE 0 END) COUNT61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN DUN_PRICE ELSE 0 END) PRICE61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN 1 ELSE 0 END) COUNT91_180,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN DUN_PRICE ELSE 0 END) PRICE91_180,
			SUM(CASE WHEN DUN_DAY > 180 THEN 1 ELSE 0 END) countMoreThan181,
			SUM(CASE WHEN DUN_DAY > 180 THEN DUN_PRICE ELSE 0 END) priceMoreThan181,
			COUNT(1) TOTALCOUNT,
     		SUM(DUN_PRICE) TOTALPRICE
		FROM T_DUN_REPORT_DETAIL
		WHERE DUN_PRICE > 0
	  	<isNotEmpty prepend="and" property="DATE">
			CREATE_DATE = CONVERT(DATE,#DATE#)
	  	</isNotEmpty>
	  	<isEqual property="byType" compareValue="dept">
			<isNotEmpty prepend="and" property="DECPNAME">
				DECP_NAME = '$DECPNAME$'
	  		</isNotEmpty>
	  		GROUP BY DECP_ID,DECP_NAME
			<isEqual property="type" compareValue="special">
				,CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME ORDER BY CREDIT_SPECIAL_CODE DESC
			</isEqual>
			<isEqual property="type" compareValue="orgUpUser">
				,UP_USER_ID,UP_USER_NAME ORDER BY UP_USER_NAME
			</isEqual>
			<isEqual property="type" compareValue="orgUser">
				,ORG_USER_ID,ORG_USER_NAME ORDER BY ORG_USER_NAME
			</isEqual>
			<isEqual property="type" compareValue="approvalUser">
				,APPROVAL_USER_ID,APPROVAL_USER_NAME ORDER BY APPROVAL_USER_NAME
			</isEqual>
		</isEqual>
		<isEqual property="byType" compareValue="special">
			<isNotEmpty prepend="and" property="CREDIT_SPECIAL_CODE">
				CREDIT_SPECIAL_CODE = '$CREDIT_SPECIAL_CODE$'
			</isNotEmpty>
			GROUP BY CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME
			<isEqual property="type" compareValue="dept">
		  		,DECP_ID,DECP_NAME ORDER BY DECP_NAME
		  	</isEqual>
			<isEqual property="type" compareValue="orgUpUser">
				,UP_USER_ID,UP_USER_NAME ORDER BY UP_USER_NAME
			</isEqual>
			<isEqual property="type" compareValue="orgUser">
				,ORG_USER_ID,ORG_USER_NAME ORDER BY ORG_USER_NAME
			</isEqual>
			<isEqual property="type" compareValue="approvalUser">
				,APPROVAL_USER_ID,APPROVAL_USER_NAME ORDER BY APPROVAL_USER_NAME
			</isEqual>
		</isEqual>
		<isEqual property="byType" compareValue="orgUpUser">
			<isNotEmpty prepend="and" property="upUserId">
				UP_USER_ID = '$upUserId$'
			</isNotEmpty>
			GROUP BY UP_USER_ID,UP_USER_NAME
			<isEqual property="type" compareValue="dept">
		  		,DECP_ID,DECP_NAME ORDER BY DECP_NAME
		  	</isEqual>
			<isEqual property="type" compareValue="special">
				,CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME ORDER BY CREDIT_SPECIAL_CODE DESC
			</isEqual>
			<isEqual property="type" compareValue="orgUser">
				,ORG_USER_ID,ORG_USER_NAME ORDER BY ORG_USER_NAME
			</isEqual>
			<isEqual property="type" compareValue="approvalUser">
				,APPROVAL_USER_ID,APPROVAL_USER_NAME ORDER BY APPROVAL_USER_NAME
			</isEqual>
		</isEqual>
		<isEqual property="byType" compareValue="orgUser">
			<isNotEmpty prepend="and" property="orgUserId">
				ORG_USER_ID = '$orgUserId$'
			</isNotEmpty>
			GROUP BY ORG_USER_ID,ORG_USER_NAME
			<isEqual property="type" compareValue="dept">
		  		,DECP_ID,DECP_NAME ORDER BY DECP_NAME
		  	</isEqual>
			<isEqual property="type" compareValue="special">
				,CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME ORDER BY CREDIT_SPECIAL_CODE DESC
			</isEqual>
			<isEqual property="type" compareValue="orgUpUser">
				,UP_USER_ID,UP_USER_NAME ORDER BY UP_USER_NAME
			</isEqual>
			<isEqual property="type" compareValue="approvalUser">
				,APPROVAL_USER_ID,APPROVAL_USER_NAME ORDER BY APPROVAL_USER_NAME
			</isEqual>
		</isEqual>
		<isEqual property="byType" compareValue="approvalUser">
			<isNotEmpty prepend="and" property="approvalUserId">
				APPROVAL_USER_ID = #approvalUserId#
		  	</isNotEmpty>
			GROUP BY APPROVAL_USER_ID,APPROVAL_USER_NAME
			<isEqual property="type" compareValue="dept">
		  		,DECP_ID,DECP_NAME ORDER BY DECP_NAME
		  	</isEqual>
			<isEqual property="type" compareValue="special">
				,CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME ORDER BY CREDIT_SPECIAL_CODE DESC
			</isEqual>
			<isEqual property="type" compareValue="orgUpUser">
				,UP_USER_ID,UP_USER_NAME ORDER BY UP_USER_NAME
			</isEqual>
			<isEqual property="type" compareValue="orgUser">
				,ORG_USER_ID,ORG_USER_NAME ORDER BY ORG_USER_NAME
			</isEqual>
		</isEqual>
	</select>
	
	<!-- 逾期状况统计表（按一级查询+金额） -->
	<select id="queryDunCaseDetailByPrimaryAndPrice" parameterClass="map" resultClass="com.brick.bussinessReport.to.DunCaseDetailTO">
		SELECT 
	      	1 ID,
			<isEqual property="byType" compareValue="dept">
				DECP_ID DECPID,
				DECP_NAME DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="special">
				0 DECPID,
				'' DECPNAME,
				CREDIT_SPECIAL_CODE CREDITSPECIALCODE,
		  		CREDIT_SPECIAL_NAME CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUpUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				UP_USER_ID UPUSERID,
		  		UP_USER_NAME UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				ORG_USER_ID ORGUSERID,
		  		ORG_USER_NAME ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="approvalUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		APPROVAL_USER_ID APPROVALUSERID,
      			APPROVAL_USER_NAME APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="price">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
      		#money_text1# REMARK,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN 1 ELSE 0 END) COUNT1_7,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN DUN_PRICE ELSE 0 END) PRICE1_7,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN 1 ELSE 0 END) COUNT8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN DUN_PRICE ELSE 0 END) PRICE8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN 1 ELSE 0 END) COUNT15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN DUN_PRICE ELSE 0 END) PRICE15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN 1 ELSE 0 END) COUNT31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN DUN_PRICE ELSE 0 END) PRICE31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN 1 ELSE 0 END) COUNT61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN DUN_PRICE ELSE 0 END) PRICE61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN 1 ELSE 0 END) COUNT91_180,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN DUN_PRICE ELSE 0 END) PRICE91_180,
			SUM(CASE WHEN DUN_DAY > 180 THEN 1 ELSE 0 END) COUNTMORETHAN181,
			SUM(CASE WHEN DUN_DAY > 180 THEN DUN_PRICE ELSE 0 END) PRICEMORETHAN181,
			COUNT(1) TOTALCOUNT,
     		SUM(DUN_PRICE) TOTALPRICE
		FROM T_DUN_REPORT_DETAIL
		WHERE
			DUN_PRICE > 0
	        AND LEASE_RZE &lt; #money1#
        <isNotEmpty prepend="" property="QUERY_TYPE">
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="1">
					 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
				</isEqual>
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="2">
					 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
				</isEqual>
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="3">
					 (DECP_NAME LIKE '%$TYPE1$%' OR DECP_NAME LIKE '%$TYPE2$%')
				</isEqual>
		</isNotEmpty>
		<isNotEmpty property="cmpyList">
				AND DECP_NAME IN ($cmpyList$)
		</isNotEmpty>
		  	<isNotEmpty prepend="and" property="DATE">
				CREATE_DATE = CONVERT(DATE,#DATE#)
		  	</isNotEmpty>
		  	<isEqual property="byType" compareValue="dept">
			  	<isNotEmpty prepend="and" property="DECPNAME">
					DECP_NAME = '$DECPNAME$'
			  	</isNotEmpty>
				GROUP BY DECP_ID,DECP_NAME
			</isEqual>
			<isEqual property="byType" compareValue="special">
				<isNotEmpty prepend="and" property="CREDIT_SPECIAL_CODE">
					CREDIT_SPECIAL_CODE = '$CREDIT_SPECIAL_CODE$'
			  	</isNotEmpty>
				GROUP BY CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME
			</isEqual>
			<isEqual property="byType" compareValue="orgUpUser">
				<isNotEmpty prepend="and" property="upUserId">
					UP_USER_ID = '$upUserId$'
			  	</isNotEmpty>
				GROUP BY UP_USER_ID,UP_USER_NAME
			</isEqual>
			<isEqual property="byType" compareValue="orgUser">
				<isNotEmpty prepend="and" property="orgUserId">
					ORG_USER_ID = '$orgUserId$'
			  	</isNotEmpty>
				GROUP BY ORG_USER_ID,ORG_USER_NAME
			</isEqual>
			<isEqual property="byType" compareValue="approvalUser">
				<isNotEmpty prepend="and" property="approvalUserId">
					APPROVAL_USER_ID = #approvalUserId#
			  	</isNotEmpty>
				GROUP BY APPROVAL_USER_ID,APPROVAL_USER_NAME
			</isEqual>
	    UNION
	    SELECT 
	      	2 ID,
			<isEqual property="byType" compareValue="dept">
				DECP_ID DECPID,
				DECP_NAME DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="special">
				0 DECPID,
				'' DECPNAME,
				CREDIT_SPECIAL_CODE CREDITSPECIALCODE,
		  		CREDIT_SPECIAL_NAME CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUpUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				UP_USER_ID UPUSERID,
		  		UP_USER_NAME UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				ORG_USER_ID ORGUSERID,
		  		ORG_USER_NAME ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="approvalUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		APPROVAL_USER_ID APPROVALUSERID,
      			APPROVAL_USER_NAME APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="price">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
	      	#money_text2# REMARK,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN 1 ELSE 0 END) COUNT1_7,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN DUN_PRICE ELSE 0 END) PRICE1_7,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN 1 ELSE 0 END) COUNT8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN DUN_PRICE ELSE 0 END) PRICE8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN 1 ELSE 0 END) COUNT15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN DUN_PRICE ELSE 0 END) PRICE15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN 1 ELSE 0 END) COUNT31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN DUN_PRICE ELSE 0 END) PRICE31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN 1 ELSE 0 END) COUNT61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN DUN_PRICE ELSE 0 END) PRICE61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN 1 ELSE 0 END) COUNT91_180,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN DUN_PRICE ELSE 0 END) PRICE91_180,
			SUM(CASE WHEN DUN_DAY > 180 THEN 1 ELSE 0 END) COUNTMORETHAN181,
			SUM(CASE WHEN DUN_DAY > 180 THEN DUN_PRICE ELSE 0 END) PRICEMORETHAN181,
			COUNT(1) TOTALCOUNT,
     		SUM(DUN_PRICE) TOTALPRICE
		FROM T_DUN_REPORT_DETAIL
		WHERE
		 	DUN_PRICE > 0
	        AND LEASE_RZE >= #money1# AND LEASE_RZE &lt; #money2#
	        <isNotEmpty prepend="" property="QUERY_TYPE">
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="1">
					 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
				</isEqual>
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="2">
					 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
				</isEqual>
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="3">
					 (DECP_NAME LIKE '%$TYPE1$%' OR DECP_NAME LIKE '%$TYPE2$%')
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="cmpyList">
				AND DECP_NAME IN ($cmpyList$)
			</isNotEmpty>
		  	<isNotEmpty prepend="and" property="DATE">
				CREATE_DATE = CONVERT(DATE,#DATE#)
		  	</isNotEmpty>
			<isEqual property="byType" compareValue="dept">
			  	<isNotEmpty prepend="and" property="DECPNAME">
					DECP_NAME = '$DECPNAME$'
			  	</isNotEmpty>
				GROUP BY DECP_ID,DECP_NAME
			</isEqual>
			<isEqual property="byType" compareValue="special">
				<isNotEmpty prepend="and" property="CREDIT_SPECIAL_CODE">
					CREDIT_SPECIAL_CODE = '$CREDIT_SPECIAL_CODE$'
			  	</isNotEmpty>
				GROUP BY CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME
			</isEqual>
			<isEqual property="byType" compareValue="orgUpUser">
				<isNotEmpty prepend="and" property="upUserId">
					UP_USER_ID = '$upUserId$'
			  	</isNotEmpty>
				GROUP BY UP_USER_ID,UP_USER_NAME
			</isEqual>
			<isEqual property="byType" compareValue="orgUser">
				<isNotEmpty prepend="and" property="orgUserId">
					ORG_USER_ID = '$orgUserId$'
			  	</isNotEmpty>
				GROUP BY ORG_USER_ID,ORG_USER_NAME
			</isEqual>
			<isEqual property="byType" compareValue="approvalUser">
				<isNotEmpty prepend="and" property="approvalUserId">
					APPROVAL_USER_ID = #approvalUserId#
			  	</isNotEmpty>
				GROUP BY APPROVAL_USER_ID,APPROVAL_USER_NAME
			</isEqual>
       	UNION
	    SELECT 
	      	3 ID,
			<isEqual property="byType" compareValue="dept">
				DECP_ID DECPID,
				DECP_NAME DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="special">
				0 DECPID,
				'' DECPNAME,
				CREDIT_SPECIAL_CODE CREDITSPECIALCODE,
		  		CREDIT_SPECIAL_NAME CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUpUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				UP_USER_ID UPUSERID,
		  		UP_USER_NAME UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				ORG_USER_ID ORGUSERID,
		  		ORG_USER_NAME ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="approvalUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		APPROVAL_USER_ID APPROVALUSERID,
      			APPROVAL_USER_NAME APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="price">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
	      	#money_text3# REMARK,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN 1 ELSE 0 END) COUNT1_7,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN DUN_PRICE ELSE 0 END) PRICE1_7,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN 1 ELSE 0 END) COUNT8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN DUN_PRICE ELSE 0 END) PRICE8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN 1 ELSE 0 END) COUNT15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN DUN_PRICE ELSE 0 END) PRICE15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN 1 ELSE 0 END) COUNT31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN DUN_PRICE ELSE 0 END) PRICE31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN 1 ELSE 0 END) COUNT61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN DUN_PRICE ELSE 0 END) PRICE61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN 1 ELSE 0 END) COUNT91_180,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN DUN_PRICE ELSE 0 END) PRICE91_180,
			SUM(CASE WHEN DUN_DAY > 180 THEN 1 ELSE 0 END) COUNTMORETHAN181,
			SUM(CASE WHEN DUN_DAY > 180 THEN DUN_PRICE ELSE 0 END) PRICEMORETHAN181,
			COUNT(1) TOTALCOUNT,
     		SUM(DUN_PRICE) TOTALPRICE
		FROM T_DUN_REPORT_DETAIL
		WHERE
		 	DUN_PRICE > 0
	        AND LEASE_RZE >= #money2# AND LEASE_RZE &lt; #money3#
	        <isNotEmpty prepend="" property="QUERY_TYPE">
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="1">
					 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
				</isEqual>
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="2">
					 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
				</isEqual>
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="3">
					 (DECP_NAME LIKE '%$TYPE1$%' OR DECP_NAME LIKE '%$TYPE2$%')
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="cmpyList">
				AND DECP_NAME IN ($cmpyList$)
			</isNotEmpty>
		  	<isNotEmpty prepend="and" property="DATE">
				CREATE_DATE = CONVERT(DATE,#DATE#)
		  	</isNotEmpty>
			<isEqual property="byType" compareValue="dept">
			  	<isNotEmpty prepend="and" property="DECPNAME">
					DECP_NAME = '$DECPNAME$'
			  	</isNotEmpty>
				GROUP BY DECP_ID,DECP_NAME
			</isEqual>
			<isEqual property="byType" compareValue="special">
				<isNotEmpty prepend="and" property="CREDIT_SPECIAL_CODE">
					CREDIT_SPECIAL_CODE = '$CREDIT_SPECIAL_CODE$'
			  	</isNotEmpty>
				GROUP BY CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME
			</isEqual>
			<isEqual property="byType" compareValue="orgUpUser">
				<isNotEmpty prepend="and" property="upUserId">
					UP_USER_ID = '$upUserId$'
			  	</isNotEmpty>
				GROUP BY UP_USER_ID,UP_USER_NAME
			</isEqual>
			<isEqual property="byType" compareValue="orgUser">
				<isNotEmpty prepend="and" property="orgUserId">
					ORG_USER_ID = '$orgUserId$'
			  	</isNotEmpty>
				GROUP BY ORG_USER_ID,ORG_USER_NAME
			</isEqual>
			<isEqual property="byType" compareValue="approvalUser">
				<isNotEmpty prepend="and" property="approvalUserId">
					APPROVAL_USER_ID = #approvalUserId#
			  	</isNotEmpty>
				GROUP BY APPROVAL_USER_ID,APPROVAL_USER_NAME
			</isEqual>
       	UNION
	    SELECT 
	      	4 ID,
			<isEqual property="byType" compareValue="dept">
				DECP_ID DECPID,
				DECP_NAME DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="special">
				0 DECPID,
				'' DECPNAME,
				CREDIT_SPECIAL_CODE CREDITSPECIALCODE,
		  		CREDIT_SPECIAL_NAME CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUpUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				UP_USER_ID UPUSERID,
		  		UP_USER_NAME UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				ORG_USER_ID ORGUSERID,
		  		ORG_USER_NAME ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="approvalUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		APPROVAL_USER_ID APPROVALUSERID,
      			APPROVAL_USER_NAME APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="price">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
	      	#money_text4# REMARK,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN 1 ELSE 0 END) COUNT1_7,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN DUN_PRICE ELSE 0 END) PRICE1_7,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN 1 ELSE 0 END) COUNT8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN DUN_PRICE ELSE 0 END) PRICE8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN 1 ELSE 0 END) COUNT15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN DUN_PRICE ELSE 0 END) PRICE15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN 1 ELSE 0 END) COUNT31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN DUN_PRICE ELSE 0 END) PRICE31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN 1 ELSE 0 END) COUNT61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN DUN_PRICE ELSE 0 END) PRICE61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN 1 ELSE 0 END) COUNT91_180,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN DUN_PRICE ELSE 0 END) PRICE91_180,
			SUM(CASE WHEN DUN_DAY > 180 THEN 1 ELSE 0 END) COUNTMORETHAN181,
			SUM(CASE WHEN DUN_DAY > 180 THEN DUN_PRICE ELSE 0 END) PRICEMORETHAN181,
			COUNT(1) TOTALCOUNT,
     		SUM(DUN_PRICE) TOTALPRICE
		FROM T_DUN_REPORT_DETAIL
		WHERE
			DUN_PRICE > 0
	        AND LEASE_RZE >= #money3# AND LEASE_RZE &lt; #money4#
	        <isNotEmpty prepend="" property="QUERY_TYPE">
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="1">
					 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
				</isEqual>
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="2">
					 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
				</isEqual>
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="3">
					 (DECP_NAME LIKE '%$TYPE1$%' OR DECP_NAME LIKE '%$TYPE2$%')
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="cmpyList">
				AND DECP_NAME IN ($cmpyList$)
			</isNotEmpty>
		  	<isNotEmpty prepend="and" property="DATE">
				CREATE_DATE = CONVERT(DATE,#DATE#)
		  	</isNotEmpty>
			<isEqual property="byType" compareValue="dept">
			  	<isNotEmpty prepend="and" property="DECPNAME">
					DECP_NAME = '$DECPNAME$'
			  	</isNotEmpty>
				GROUP BY DECP_ID,DECP_NAME
			</isEqual>
			<isEqual property="byType" compareValue="special">
				<isNotEmpty prepend="and" property="CREDIT_SPECIAL_CODE">
					CREDIT_SPECIAL_CODE = '$CREDIT_SPECIAL_CODE$'
			  	</isNotEmpty>
				GROUP BY CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME
			</isEqual>
			<isEqual property="byType" compareValue="orgUpUser">
				<isNotEmpty prepend="and" property="upUserId">
					UP_USER_ID = '$upUserId$'
			  	</isNotEmpty>
				GROUP BY UP_USER_ID,UP_USER_NAME
			</isEqual>
			<isEqual property="byType" compareValue="orgUser">
				<isNotEmpty prepend="and" property="orgUserId">
					ORG_USER_ID = '$orgUserId$'
			  	</isNotEmpty>
				GROUP BY ORG_USER_ID,ORG_USER_NAME
			</isEqual>
			<isEqual property="byType" compareValue="approvalUser">
				<isNotEmpty prepend="and" property="approvalUserId">
					APPROVAL_USER_ID = #approvalUserId#
			  	</isNotEmpty>
				GROUP BY APPROVAL_USER_ID,APPROVAL_USER_NAME
			</isEqual>
       	UNION
	    SELECT 
	      	5 ID,
			<isEqual property="byType" compareValue="dept">
				DECP_ID DECPID,
				DECP_NAME DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="special">
				0 DECPID,
				'' DECPNAME,
				CREDIT_SPECIAL_CODE CREDITSPECIALCODE,
		  		CREDIT_SPECIAL_NAME CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUpUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				UP_USER_ID UPUSERID,
		  		UP_USER_NAME UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="orgUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				ORG_USER_ID ORGUSERID,
		  		ORG_USER_NAME ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="approvalUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		APPROVAL_USER_ID APPROVALUSERID,
      			APPROVAL_USER_NAME APPROVALUSERNAME,
			</isEqual>
			<isEqual property="byType" compareValue="price">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
	      	#money_text5# REMARK,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN 1 ELSE 0 END) COUNT1_7,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN DUN_PRICE ELSE 0 END) PRICE1_7,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN 1 ELSE 0 END) COUNT8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN DUN_PRICE ELSE 0 END) PRICE8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN 1 ELSE 0 END) COUNT15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN DUN_PRICE ELSE 0 END) PRICE15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN 1 ELSE 0 END) COUNT31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN DUN_PRICE ELSE 0 END) PRICE31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN 1 ELSE 0 END) COUNT61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN DUN_PRICE ELSE 0 END) PRICE61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN 1 ELSE 0 END) COUNT91_180,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN DUN_PRICE ELSE 0 END) PRICE91_180,
			SUM(CASE WHEN DUN_DAY > 180 THEN 1 ELSE 0 END) COUNTMORETHAN181,
			SUM(CASE WHEN DUN_DAY > 180 THEN DUN_PRICE ELSE 0 END) PRICEMORETHAN181,
			COUNT(1) TOTALCOUNT,
     		SUM(DUN_PRICE) TOTALPRICE
		FROM T_DUN_REPORT_DETAIL
		WHERE
			DUN_PRICE > 0
        	AND LEASE_RZE >= #money4#
        	<isNotEmpty prepend="" property="QUERY_TYPE">
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="1">
					 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
				</isEqual>
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="2">
					 (DECP_NAME LIKE '%$TYPE1$' OR DECP_NAME LIKE '%$TYPE2$')
				</isEqual>
				<isEqual prepend="and" property="QUERY_TYPE" compareValue="3">
					 (DECP_NAME LIKE '%$TYPE1$%' OR DECP_NAME LIKE '%$TYPE2$%')
				</isEqual>
			</isNotEmpty>
			<isNotEmpty property="cmpyList">
				AND DECP_NAME IN ($cmpyList$)
			</isNotEmpty>
		  	<isNotEmpty prepend="and" property="DATE">
				CREATE_DATE = CONVERT(DATE,#DATE#)
		  	</isNotEmpty>
			<isEqual property="byType" compareValue="dept">
			  	<isNotEmpty prepend="and" property="DECPNAME">
					DECP_NAME = '$DECPNAME$'
			  	</isNotEmpty>
				GROUP BY DECP_ID,DECP_NAME
			</isEqual>
			<isEqual property="byType" compareValue="special">
				<isNotEmpty prepend="and" property="CREDIT_SPECIAL_CODE">
					CREDIT_SPECIAL_CODE = '$CREDIT_SPECIAL_CODE$'
			  	</isNotEmpty>
				GROUP BY CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME
			</isEqual>
			<isEqual property="byType" compareValue="orgUpUser">
				<isNotEmpty prepend="and" property="upUserId">
					UP_USER_ID = '$upUserId$'
			  	</isNotEmpty>
				GROUP BY UP_USER_ID,UP_USER_NAME
			</isEqual>
			<isEqual property="byType" compareValue="orgUser">
				<isNotEmpty prepend="and" property="orgUserId">
					ORG_USER_ID = '$orgUserId$'
			  	</isNotEmpty>
				GROUP BY ORG_USER_ID,ORG_USER_NAME
			</isEqual>
			<isEqual property="byType" compareValue="approvalUser">
				<isNotEmpty prepend="and" property="approvalUserId">
					APPROVAL_USER_ID = #approvalUserId#
			  	</isNotEmpty>
				GROUP BY APPROVAL_USER_ID,APPROVAL_USER_NAME
			</isEqual>
	    ORDER BY ID
	</select>
	
	<!-- 逾期状况统计表（按金额+二级查询） -->
	<select id="queryDunCaseDetailByPriceAndSecondary" parameterClass="map" resultClass="com.brick.bussinessReport.to.DunCaseDetailTO">
		SELECT 
		  	<isEqual property="type" compareValue="dept">
				DECP_ID DECPID,
				DECP_NAME DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="type" compareValue="special">
				0 DECPID,
				'' DECPNAME,
				CREDIT_SPECIAL_CODE CREDITSPECIALCODE,
		  		CREDIT_SPECIAL_NAME CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="type" compareValue="orgUpUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				UP_USER_ID UPUSERID,
		  		UP_USER_NAME UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="type" compareValue="orgUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				ORG_USER_ID ORGUSERID,
		  		ORG_USER_NAME ORGUSERNAME,
		  		0 APPROVALUSERID,
      			'' APPROVALUSERNAME,
			</isEqual>
			<isEqual property="type" compareValue="approvalUser">
				0 DECPID,
				'' DECPNAME,
				'' CREDITSPECIALCODE,
		  		'' CREDITSPECIALNAME,
				0 UPUSERID,
		  		'' UPUSERNAME,
				0 ORGUSERID,
		  		'' ORGUSERNAME,
		  		APPROVAL_USER_ID APPROVALUSERID,
      			APPROVAL_USER_NAME APPROVALUSERNAME,
			</isEqual>
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN 1 ELSE 0 END) COUNT1_7,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN DUN_PRICE ELSE 0 END) PRICE1_7,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN 1 ELSE 0 END) COUNT8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN DUN_PRICE ELSE 0 END) PRICE8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN 1 ELSE 0 END) COUNT15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN DUN_PRICE ELSE 0 END) PRICE15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN 1 ELSE 0 END) COUNT31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN DUN_PRICE ELSE 0 END) PRICE31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN 1 ELSE 0 END) COUNT61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN DUN_PRICE ELSE 0 END) PRICE61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN 1 ELSE 0 END) COUNT91_180,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN DUN_PRICE ELSE 0 END) PRICE91_180,
			SUM(CASE WHEN DUN_DAY > 180 THEN 1 ELSE 0 END) countMoreThan181,
			SUM(CASE WHEN DUN_DAY > 180 THEN DUN_PRICE ELSE 0 END) priceMoreThan181,
			COUNT(1) TOTALCOUNT,
     		SUM(DUN_PRICE) TOTALPRICE
		FROM T_DUN_REPORT_DETAIL
		WHERE
			 DUN_PRICE > 0
		  	<isNotEmpty prepend="and" property="priceBegin">
				LEASE_RZE >= #priceBegin#
		  	</isNotEmpty>
		  	<isNotEmpty prepend="and" property="priceEnd">
				LEASE_RZE &lt; #priceEnd#
		  	</isNotEmpty>
			<isNotEmpty prepend="and" property="DATE">
				CREATE_DATE = CONVERT(DATE,#DATE#)
		  	</isNotEmpty>
		GROUP BY 
		<isEqual property="type" compareValue="dept">
			DECP_ID,DECP_NAME ORDER BY DECP_NAME
		</isEqual>
		<isEqual property="type" compareValue="special">
			CREDIT_SPECIAL_CODE,CREDIT_SPECIAL_NAME ORDER BY CREDIT_SPECIAL_CODE DESC
		</isEqual>
		<isEqual property="type" compareValue="orgUpUser">
			UP_USER_ID,UP_USER_NAME ORDER BY UP_USER_NAME
		</isEqual>
		<isEqual property="type" compareValue="orgUser">
			ORG_USER_ID,ORG_USER_NAME ORDER BY ORG_USER_NAME
		</isEqual>
		<isEqual property="type" compareValue="approvalUser">
			APPROVAL_USER_ID,APPROVAL_USER_NAME ORDER BY APPROVAL_USER_NAME
		</isEqual>
	</select>
	
	<select id="getCurrentWorkingDaySituation" resultClass="java.util.HashMap">
		  SELECT TPC.CREDIT_RUNCODE,TRC.LEASE_CODE,
	             SYS.CREATE_DATE,SYS1.CREATE_DATE CREATE_DATE_1,
	             TSP.PAY_MONEY,TCC.CUST_NAME
	        FROM T_SYS_BUSINESSLOG SYS
	   LEFT JOIN T_RENT_CONTRACT TRC ON TRC.STATUS=0 AND SYS.CREDIT_ID=TRC.PRCD_ID
	   LEFT JOIN T_SUPL_PLAYDETIL TSP ON TSP.STATUS=0 AND TSP.CREDIT_ID=SYS.CREDIT_ID
	   LEFT JOIN T_SYS_BUSINESSLOG SYS1 ON SYS1.STATUS=0 AND SYS.CREDIT_ID=SYS1.CREDIT_ID AND SYS1.MEMO='拨款审批-财务审核-通过' 
	   LEFT JOIN T_PRJT_CREDIT TPC ON TPC.STATUS=0 AND TPC.ID=SYS.CREDIT_ID
	   LEFT JOIN T_CUST_CUSTOMER TCC ON TCC.STATUS=0 AND TRC.CUST_ID=TCC.CUST_ID
	       WHERE SYS.MEMO='拨款审批-业管部审核-通过' 
	         AND CONVERT(DATETIME,SYS.CREATE_DATE) BETWEEN CONVERT(DATETIME,CONVERT(VARCHAR,GETDATE(),23)+' 00:00:00') AND CONVERT(DATETIME,CONVERT(VARCHAR,GETDATE(),23)+' 15:00:00')
	         AND SYS.STATUS=0
	         AND TSP.BACKSTATE=0 
	         AND TPC.CONTRACT_TYPE = 8
	         AND TSP.EXAMSTATUS=1
	         AND TSP.FINANCIALSTATUS=0
	</select>
	
	<select id="getLastWorkingDaySituation" resultClass="java.util.HashMap">
	      SELECT TPC.CREDIT_RUNCODE,TRC.LEASE_CODE,
	             SYS.CREATE_DATE,SYS1.CREATE_DATE CREATE_DATE_1,
	             TSP.PAY_MONEY,TCC.CUST_NAME
	        FROM T_SYS_BUSINESSLOG SYS
	   LEFT JOIN T_RENT_CONTRACT TRC ON TRC.STATUS=0 AND SYS.CREDIT_ID=TRC.PRCD_ID
	   LEFT JOIN T_SUPL_PLAYDETIL TSP ON TSP.STATUS=0 AND TSP.CREDIT_ID=SYS.CREDIT_ID
	   LEFT JOIN T_SYS_BUSINESSLOG SYS1 ON SYS1.STATUS=0 AND SYS.CREDIT_ID=SYS1.CREDIT_ID AND SYS1.MEMO='拨款审批-财务审核-通过' 
	   LEFT JOIN T_PRJT_CREDIT TPC ON TPC.STATUS=0 AND TPC.ID=SYS.CREDIT_ID
	   LEFT JOIN T_CUST_CUSTOMER TCC ON TCC.STATUS=0 AND TRC.CUST_ID=TCC.CUST_ID
	       WHERE SYS.MEMO='拨款审批-业管部审核-通过' 
	         AND CONVERT(DATETIME,SYS.CREATE_DATE) 
	             BETWEEN 
	             CONVERT(DATETIME,(SELECT TOP 1 CONVERT(VARCHAR,O.DATE,23) 
							         FROM (SELECT TOP 2 * 
							                 FROM T_DAY_TYPE 
							                WHERE CONVERT(DATE,DATE)&lt;=CONVERT(DATE,GETDATE())
							                  AND DAY_TYPE='WD'
							             ORDER BY CONVERT(DATE,DATE) DESC) O ORDER BY O.DATE)+' 15:00:00') 
	             AND 
	             CONVERT(DATETIME,(SELECT TOP 1 CONVERT(VARCHAR,O.DATE,23) 
							         FROM (SELECT TOP 2 * 
							                 FROM T_DAY_TYPE 
							                WHERE CONVERT(DATE,DATE)&lt;=CONVERT(DATE,GETDATE())
							                  AND DAY_TYPE='WD'
							             ORDER BY CONVERT(DATE,DATE) DESC) O ORDER BY O.DATE)+' 23:59:59')
	         AND SYS.STATUS=0
	         AND TSP.BACKSTATE=0 
	         AND TPC.CONTRACT_TYPE = 8
	         AND TSP.EXAMSTATUS=1
	         AND TSP.FINANCIALSTATUS=0
	</select>
	
	<select id="getComputeMoneyCountOneYear" resultClass="java.util.HashMap" parameterClass="map">
	    SELECT SUM(T1.IRR_MONTH_PRICE)+SUM(T1.VALUE_ADDED_TAX) MONEY,COUNT(1) [COUNT],CONVERT(DATE,T1.PAY_DATE) PAY_DATE
		FROM T_RENT_COLLECTIONDETAIL T1
	    LEFT JOIN T_RENT_COLLECTIONPLAN T2 ON T2.RECP_ID=T1.RECP_ID AND T2.STATUS=0
	    LEFT JOIN T_RENT_CONTRACT R ON R.RECT_ID = T2.RECT_ID AND R.STATUS = 0
	    left join t_prjt_credit tpc on tpc.id = R.prcd_id and tpc.status = 0
	 	   WHERE T1.STATUS=0
	 	   <isNotEmpty prepend="and" property="companyCode">
				tpc.company_code = #companyCode#
			</isNotEmpty>
	 	   <isNotEmpty prepend="and" property="FROM_DATE">
	 	   	CONVERT(DATE,T1.PAY_DATE) >= cast(#FROM_DATE# as date)
	 	   </isNotEmpty>
	 	  	<isEmpty prepend="and" property="FROM_DATE">
	 	   	CONVERT(DATE,T1.PAY_DATE) >= cast(getDate() as date)
	 	   </isEmpty>
	 	   <isNotEmpty prepend="and" property="TO_DATE">
	 	   	<![CDATA[ CONVERT(DATE,T1.PAY_DATE) <= cast(#TO_DATE# as date) ]]>
	 	   </isNotEmpty>
	 	   <isEmpty prepend="and" property="TO_DATE">
	 	   	<![CDATA[ CONVERT(DATE,T1.PAY_DATE) <= cast(getDate()+364 as date) ]]>
	 	   </isEmpty>
	         AND T2.RECP_STATUS!=1 
	         AND T2.RECP_STATUS!=3
        GROUP BY CONVERT(DATE,T1.PAY_DATE)
        order by CONVERT(DATE,T1.PAY_DATE)
	</select>
	
	<!-- 桌面逾期数据 -->
	<select id="getDunTotalByDecpType" resultClass="com.brick.bussinessReport.to.DunCaseDetailTO" parameterClass="map">
		SELECT 
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN 1 ELSE 0 END) COUNT1_7,
			SUM(CASE WHEN DUN_DAY &lt;= 7 THEN DUN_PRICE ELSE 0 END) PRICE1_7,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN 1 ELSE 0 END) COUNT8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 8 AND 14 THEN DUN_PRICE ELSE 0 END) PRICE8_14,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN 1 ELSE 0 END) COUNT15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 15 AND 30 THEN DUN_PRICE ELSE 0 END) PRICE15_30,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN 1 ELSE 0 END) COUNT31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 31 AND 60 THEN DUN_PRICE ELSE 0 END) PRICE31_60,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN 1 ELSE 0 END) COUNT61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 61 AND 90 THEN DUN_PRICE ELSE 0 END) PRICE61_90,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN 1 ELSE 0 END) COUNT91_180,
			SUM(CASE WHEN DUN_DAY BETWEEN 91 AND 180 THEN DUN_PRICE ELSE 0 END) PRICE91_180,
			SUM(CASE WHEN DUN_DAY > 180 THEN 1 ELSE 0 END) countMoreThan181,
			SUM(CASE WHEN DUN_DAY > 180 THEN DUN_PRICE ELSE 0 END) priceMoreThan181,
            COUNT(1) TOTALCOUNT,
      		SUM(DUN_PRICE) TOTALPRICE
		FROM T_DUN_REPORT_DETAIL 
		WHERE CONVERT(DATE,CREATE_DATE) = CONVERT(DATE,#date#) 
		AND DUN_PRICE IS NOT NULL
		<isNotEmpty property="cmpyType1">
			AND( DECP_NAME LIKE '%$cmpyType1$%' 
			<isNotEmpty property="cmpyType2">
				OR DECP_NAME LIKE '%$cmpyType2$%'
			</isNotEmpty>
			) 
		</isNotEmpty>
	</select>
</sqlMap>