<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
	"http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="rentContract">
	<!--  query -->
	<select id="queryRentContract_count" parameterClass="map" resultClass="java.lang.Integer">
	<!-- SELECT 
					 T1.ID PRCD_ID,
					 T10.RECP_STATUS,
					 T1.STATUS PRCD_STATUS,
					 T2.RECT_ID,
					 T1.LEASE_CODE,
					 T2.RECT_STATUS,
					 T2.STATUS,
					 T3.CUST_NAME,
					 T4.NAME AREA,
					 T5.NAME CLERK_NAME,
					 T6.NAME SENSOR_NAME,
					 T2.LESSOR_TIME,
					 MAX(T7.BRAND) BRAND,
					 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
					 t1.wind_result_date, t9.DECP_NAME_CN
				  FROM T_PRJT_CREDIT T1
				  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
				  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
				  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
				  LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID
				  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
				  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
				  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			 	  LEFT JOIN T_RENT_CONTRACTSCHEMA T12 ON T12.RECT_ID = T2.RECT_ID AND T12.STATUS = 0
		  			left join T_DEPT_COMPANY t9 on t9.DECP_ID=T1.DECP_ID and t9.STATUS=0
		  			 LEFT JOIN T_RENT_COLLECTIONPLAN T10 ON T10.RECT_ID = T2.RECT_ID AND T10.STATUS = 0
		  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  			AND (T2.STATUS!=-2 OR T2.STATUS IS NULL)
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]>
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or T1.CLERK_ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	2012/01/11 Yang Yun 增加区域筛选功能.Start
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T1.SENSOR_ID)
				]]>
			</isEqual>
			2012/01/11 Yang Yun 增加区域筛选功能.End
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(	T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
						OR T5.NAME LIKE '%$QSEARCH_VALUE$%' 
						OR T6.NAME LIKE '%$QSEARCH_VALUE$%'
						OR T7.BRAND LIKE '%$QSEARCH_VALUE$%'
						)
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
			<![CDATA[
				 CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) >= #QSTART_DATE# 
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
			<![CDATA[
				  CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) <= #QEND_DATE#
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS is null ]]>
					</isEqual>
					<isNotEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			<isNotEmpty prepend="and" property="RECP_STATUS">
		  		<![CDATA[ T10.RECP_STATUS = #RECP_STATUS# ]]>
		  	</isNotEmpty>
			
		<![CDATA[  GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          T5.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG  , t1.wind_result_date, t9.DECP_NAME_CN,
			          T10.RECP_STATUS -->
		<![CDATA[ SELECT COUNT(1) FROM (
						SELECT T1.ID PRCD_ID,
					     T10.RECP_STATUS,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 upper.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE,
						 t1.wind_result_date,
						  t9.DECP_NAME_CN
			  FROM T_PRJT_CREDIT T1
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
			  ]]>
			  <!-- LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID -->
			  <![CDATA[
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  ]]>
			  <!-- 2012/01/18 Yang Yun 修改办事处的抓取方式. -->
			  <![CDATA[
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
			  ]]>
			  <!-- 2012/01/18 Yang Yun 修改办事处的抓取方式. -->
			  <![CDATA[
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			  ]]>
			  <!-- left join T_DEPT_COMPANY t9 on t9.DECP_ID=T1.DECP_ID and t9.STATUS=0 -->
			  <![CDATA[
			  LEFT JOIN T_RENT_COLLECTIONPLAN T10 ON T10.RECT_ID = T2.RECT_ID AND T10.STATUS = 0
			  
			  LEFT JOIN T_RENT_CONTRACTSCHEMA T12 ON T12.RECT_ID = T2.RECT_ID AND T12.STATUS = 0
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS!=-2 OR T2.STATUS IS NULL) 
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
				<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]> -->
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or upper.ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[
					exists(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId# and uc.dept_id = dept.id)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<!-- Modify by Michael 2012 07-13 增加案件号查询 -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(	T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
					 	OR upper.NAME LIKE '%$QSEARCH_VALUE$%' 
					 	OR T6.NAME LIKE '%$QSEARCH_VALUE$%'
					 	OR T7.BRAND LIKE '%$QSEARCH_VALUE$%'
					 	or t9.DECP_NAME_CN like '%$QSEARCH_VALUE$%'
					 	or t1.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%'
					 )
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
			<![CDATA[
				 CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) >= #QSTART_DATE# 
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
			<![CDATA[
				  CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) <= #QEND_DATE#
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS is null ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="0">
						<![CDATA[ t2.RECT_STATUS is not null ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="1">
						<![CDATA[ t2.RECT_STATUS = 1 and isnull(T8.PAYLISTFLAG,0)=0  ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="2">
						<![CDATA[ t2.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="3">
						<![CDATA[ t2.RECT_STATUS = 1 and isnull(T8.PAYLISTFLAG,0)>0 ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="4">
						<![CDATA[ t2.RECT_STATUS = 0 ]]>
					</isEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
		  	<isNotEmpty prepend="and" property="RECP_STATUS">
		  		<![CDATA[ T10.RECP_STATUS = #RECP_STATUS# ]]>
		  	</isNotEmpty>
			
		<![CDATA[  GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          upper.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG, 
			          T1.CONTRACT_TYPE,
			          t1.wind_result_date,
			          t9.DECP_NAME_CN,
			          T10.RECP_STATUS,
			          t1.CREDIT_RUNCODE
			        ) t
			 ]]>
	</select>
	<select id="queryRentContract" parameterClass="map" resultClass="java.util.HashMap">
				  SELECT T1.ID PRCD_ID,
					<isNotEmpty property="isSalesDesk">
					(SELECT COUNT(0) FROM T_CUST_LINKMAN
  							WHERE  CUST_ID IN (SELECT CUST_ID FROM T_PRJT_CREDIT WHERE ID = T1.ID) 
              				AND LINK_TYPE = 0) HAS_LINKMAN,
					</isNotEmpty>
					     T10.RECP_STATUS,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 upper.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE,
						 t1.wind_result_date,
						  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE,
						 CASE WHEN T2.STATUS=-1 
						 	  THEN 'N'
        				  	  ELSE CASE WHEN T1.DELAY_PAY_STATUS IS NULL OR T1.DELAY_PAY_STATUS=0 THEN 'Y' ELSE 'N' END
        				       END FLAG,T1.production_type,TRFS.STATE TRFS_STATE
			  FROM T_PRJT_CREDIT T1
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
			  
			  <!-- LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID -->
			  <![CDATA[
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  ]]>
			  <!-- 2012/01/18 Yang Yun 修改办事处的抓取方式. -->
			  <![CDATA[
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
			  ]]>
			  <!-- 2012/01/18 Yang Yun 修改办事处的抓取方式. -->
			  <![CDATA[
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			  ]]>
			  <!-- left join T_DEPT_COMPANY t9 on t9.DECP_ID=T1.DECP_ID and t9.STATUS=0 -->
			  <![CDATA[
			  LEFT JOIN T_RENT_COLLECTIONPLAN T10 ON T10.RECT_ID = T2.RECT_ID AND T10.STATUS = 0
			  
			  LEFT JOIN T_RENT_CONTRACTSCHEMA T12 ON T12.RECT_ID = T2.RECT_ID AND T12.STATUS = 0
			  
			  LEFT JOIN (
			  SELECT CREDIT_ID,STATE FROM T_RENT_FILE_SENDER_STATE
				 WHERE ID IN
				(SELECT MIN(ID) FROM T_RENT_FILE_SENDER_STATE 
				GROUP BY CREDIT_ID)
			  ) TRFS ON T1.ID = TRFS.CREDIT_ID
			  
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS!=-2 OR T2.STATUS IS NULL) 
			]]>
			<isNotEmpty prepend="and" property="CAR_NUMBER">
				<![CDATA[
					exists (
					
					SELECT distinct TPCE.CREDIT_ID
					  FROM T_PRJT_CREDITEQUIPMENT TPCE
					  LEFT JOIN T_SUPL_EQUIPMENT T3 ON T3.SUEQ_ID = TPCE.SUEQ_ID
					  LEFT JOIN T_PRDC_PRODUCT T4 ON T4.ID = T3.PRODUCT_ID
					  LEFT JOIN T_PRDC_KIND T5 ON T5.ID = T4.KIND_ID
					  LEFT JOIN T_PRDC_TYPE T7 ON T7.ID = t5.TYPE_ID AND T7.PRDC_TYPE_STATUS = 0
					 WHERE  TPCE.CAR_RIGSTER_NUMBER is not null 
					 and TPCE.CAR_RIGSTER_NUMBER like '%$CAR_NUMBER$%' 
					 and TPCE.CREDIT_ID = T1.ID
					)
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="companyCode">
			    T1.company_code = #companyCode#
			</isNotEmpty>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
				<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	T1.sensor_id = #s_employeeId# ]]> -->
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or upper.ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[
					exists(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId# and uc.dept_id = dept.id)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(	T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
					 	OR upper.NAME LIKE '%$QSEARCH_VALUE$%' 
					 	OR T6.NAME LIKE '%$QSEARCH_VALUE$%'
					 	OR T7.BRAND LIKE '%$QSEARCH_VALUE$%'
					 	or t9.DECP_NAME_CN like '%$QSEARCH_VALUE$%'
					 	or t1.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%'
					 )
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
			<![CDATA[
				 CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) >= #QSTART_DATE# 
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
			<![CDATA[
				  CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) <= #QEND_DATE#
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS is null ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="0">
						<![CDATA[ t2.RECT_STATUS is not null ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="1">
						<![CDATA[ t2.RECT_STATUS = 1 and isnull(T8.PAYLISTFLAG,0)=0  ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="2">
						<![CDATA[ t2.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="3">
						<![CDATA[ t2.RECT_STATUS = 1 and isnull(T8.PAYLISTFLAG,0)>0 ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="4">
						<![CDATA[ t2.RECT_STATUS = 0 ]]>
					</isEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
		  	<isNotEmpty prepend="and" property="RECP_STATUS">
		  		<![CDATA[ T10.RECP_STATUS = #RECP_STATUS# ]]>
		  	</isNotEmpty>
		  	<!-- added by yangliu 2014-1-22 -->
		  	<isNotEmpty prepend="and" property="credit_id_">
		  		<![CDATA[ T1.ID = #credit_id_# ]]>
		  	</isNotEmpty>
			
		<![CDATA[  GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          upper.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG, 
			          T1.CONTRACT_TYPE,
			          t1.wind_result_date,
			          t9.DECP_NAME_CN,
			          T10.RECP_STATUS,
			          t1.CREDIT_RUNCODE,
			          T1.DELAY_PAY_STATUS,T1.production_type,TRFS.STATE
		]]>
	</select>
	<select id="queryRentContractForLossFile_count" parameterClass="map" resultClass="java.lang.Integer">
	<!-- SELECT 
					 T1.ID PRCD_ID,
					 T10.RECP_STATUS,
					 T1.STATUS PRCD_STATUS,
					 T2.RECT_ID,
					 T1.LEASE_CODE,
					 T2.RECT_STATUS,
					 T2.STATUS,
					 T3.CUST_NAME,
					 T4.NAME AREA,
					 T5.NAME CLERK_NAME,
					 T6.NAME SENSOR_NAME,
					 T2.LESSOR_TIME,
					 MAX(T7.BRAND) BRAND,
					 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
					 t1.wind_result_date, t9.DECP_NAME_CN
				  FROM T_PRJT_CREDIT T1
				  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
				  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
				  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
				  LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID
				  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
				  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
				  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			 	  LEFT JOIN T_RENT_CONTRACTSCHEMA T12 ON T12.RECT_ID = T2.RECT_ID AND T12.STATUS = 0
		  			left join T_DEPT_COMPANY t9 on t9.DECP_ID=T1.DECP_ID and t9.STATUS=0
		  			 LEFT JOIN T_RENT_COLLECTIONPLAN T10 ON T10.RECT_ID = T2.RECT_ID AND T10.STATUS = 0
		  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  			AND (T2.STATUS!=-2 OR T2.STATUS IS NULL)
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]>
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or T1.CLERK_ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	2012/01/11 Yang Yun 增加区域筛选功能.Start
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T1.SENSOR_ID)
				]]>
			</isEqual>
			2012/01/11 Yang Yun 增加区域筛选功能.End
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(	T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
						OR T5.NAME LIKE '%$QSEARCH_VALUE$%' 
						OR T6.NAME LIKE '%$QSEARCH_VALUE$%'
						OR T7.BRAND LIKE '%$QSEARCH_VALUE$%'
						)
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
			<![CDATA[
				 CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) >= #QSTART_DATE# 
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
			<![CDATA[
				  CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) <= #QEND_DATE#
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS is null ]]>
					</isEqual>
					<isNotEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			<isNotEmpty prepend="and" property="RECP_STATUS">
		  		<![CDATA[ T10.RECP_STATUS = #RECP_STATUS# ]]>
		  	</isNotEmpty>
			
		<![CDATA[  GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          T5.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG  , t1.wind_result_date, t9.DECP_NAME_CN,
			          T10.RECP_STATUS -->
		<![CDATA[ SELECT COUNT(1) FROM (
						SELECT T1.ID PRCD_ID,
					     T10.RECP_STATUS,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 upper.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE,
						 t1.wind_result_date,
						  t9.DECP_NAME_CN
			  FROM T_PRJT_CREDIT T1
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
			  ]]>
			  <!-- LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID -->
			  <![CDATA[
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  ]]>
			  <!-- 2012/01/18 Yang Yun 修改办事处的抓取方式. -->
			  <![CDATA[
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
			  ]]>
			  <!-- 2012/01/18 Yang Yun 修改办事处的抓取方式. -->
			  <![CDATA[
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			  ]]>
			  <!-- left join T_DEPT_COMPANY t9 on t9.DECP_ID=T1.DECP_ID and t9.STATUS=0 -->
			  <![CDATA[
			  LEFT JOIN T_RENT_COLLECTIONPLAN T10 ON T10.RECT_ID = T2.RECT_ID AND T10.STATUS = 0
			  
			  LEFT JOIN T_RENT_CONTRACTSCHEMA T12 ON T12.RECT_ID = T2.RECT_ID AND T12.STATUS = 0
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS!=-2 OR T2.STATUS IS NULL) 
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
				<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]> -->
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or upper.ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[
					exists(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId# and uc.dept_id = dept.id)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<!-- Modify by Michael 2012 07-13 增加案件号查询 -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(	T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
					 	OR upper.NAME LIKE '%$QSEARCH_VALUE$%' 
					 	OR T6.NAME LIKE '%$QSEARCH_VALUE$%'
					 	OR T7.BRAND LIKE '%$QSEARCH_VALUE$%'
					 	or t9.DECP_NAME_CN like '%$QSEARCH_VALUE$%'
					 	or t1.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%'
					 )
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
			<![CDATA[
				 CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) >= #QSTART_DATE# 
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
			<![CDATA[
				  CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) <= #QEND_DATE#
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS is null ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="0">
						<![CDATA[ t2.RECT_STATUS is not null ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="1">
						<![CDATA[ t2.RECT_STATUS = 1 and isnull(T8.PAYLISTFLAG,0)=0  ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="2">
						<![CDATA[ t2.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="3">
						<![CDATA[ t2.RECT_STATUS = 1 and isnull(T8.PAYLISTFLAG,0)>0 ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="4">
						<![CDATA[ t2.RECT_STATUS = 0 ]]>
					</isEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
		  	<isNotEmpty prepend="and" property="RECP_STATUS">
		  		<![CDATA[ T10.RECP_STATUS = #RECP_STATUS# ]]>
		  	</isNotEmpty>
		  	<isEqual prepend="and" property="SELF_DISPATCH" compareValue="true">
		  		<![CDATA[ exists( SELECT DISPATCH_USER_ID
        					FROM T_RENT_FILE_SENDER_STATE
        					WHERE CREDIT_ID = T1.ID AND DISPATCH_USER_ID = #s_employeeId#
        				) ]]>
		  	</isEqual>
		  	<isEqual prepend="and" property="LOSS_ONLY" compareValue="true">
				exists(select REFD_ID from T_RENT_FILEDETAIL where PRCD_ID = T1.ID and FILE_TYPE=3 AND IS_ALREADY = 0)
			</isEqual>
			
		<![CDATA[  GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          upper.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG, 
			          T1.CONTRACT_TYPE,
			          t1.wind_result_date,
			          t9.DECP_NAME_CN,
			          T10.RECP_STATUS,
			          t1.CREDIT_RUNCODE
			        ) t
			 ]]>
	</select>
	<select id="queryRentContractForLossFile" parameterClass="map" resultClass="java.util.HashMap">
				  SELECT T1.ID PRCD_ID,
					<isNotEmpty property="isSalesDesk">
					(SELECT COUNT(0) FROM T_CUST_LINKMAN
  							WHERE  CUST_ID IN (SELECT CUST_ID FROM T_PRJT_CREDIT WHERE ID = T1.ID) 
              				AND LINK_TYPE = 0) HAS_LINKMAN,
					</isNotEmpty>
					     T10.RECP_STATUS,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 upper.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE,
						 t1.wind_result_date,
						  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE,
						 CASE WHEN T2.STATUS=-1 
						 	  THEN 'N'
        				  	  ELSE CASE WHEN T1.DELAY_PAY_STATUS IS NULL OR T1.DELAY_PAY_STATUS=0 THEN 'Y' ELSE 'N' END
        				       END FLAG,T1.production_type,       
        				(SELECT TOP 1 b.NAME
        					FROM T_RENT_FILE_SENDER_STATE a 
        					LEFT JOIN T_USER_USER b ON a.DISPATCH_USER_ID=b.ID
        					WHERE a.CREDIT_ID = T1.ID
        				) AS DISPATCH_NAME,
        				TRFS.STATE TRFS_STATE       
			  FROM T_PRJT_CREDIT T1
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
			  
			  <!-- LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID -->
			  <![CDATA[
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  ]]>
			  <!-- 2012/01/18 Yang Yun 修改办事处的抓取方式. -->
			  <![CDATA[
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
			  ]]>
			  <!-- 2012/01/18 Yang Yun 修改办事处的抓取方式. -->
			  <![CDATA[
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			  ]]>
			  <!-- left join T_DEPT_COMPANY t9 on t9.DECP_ID=T1.DECP_ID and t9.STATUS=0 -->
			  <![CDATA[
			  LEFT JOIN T_RENT_COLLECTIONPLAN T10 ON T10.RECT_ID = T2.RECT_ID AND T10.STATUS = 0
			  
			  LEFT JOIN T_RENT_CONTRACTSCHEMA T12 ON T12.RECT_ID = T2.RECT_ID AND T12.STATUS = 0
			  
			  LEFT JOIN (
			  SELECT CREDIT_ID,STATE FROM T_RENT_FILE_SENDER_STATE
				 WHERE ID IN
				(SELECT MIN(ID) FROM T_RENT_FILE_SENDER_STATE 
				GROUP BY CREDIT_ID)
			  ) TRFS ON T1.ID = TRFS.CREDIT_ID
			  
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS!=-2 OR T2.STATUS IS NULL)
			]]>
			<isNotEmpty prepend="and" property="CAR_NUMBER">
				<![CDATA[
					exists (
					
					SELECT distinct TPCE.CREDIT_ID
					  FROM T_PRJT_CREDITEQUIPMENT TPCE
					  LEFT JOIN T_SUPL_EQUIPMENT T3 ON T3.SUEQ_ID = TPCE.SUEQ_ID
					  LEFT JOIN T_PRDC_PRODUCT T4 ON T4.ID = T3.PRODUCT_ID
					  LEFT JOIN T_PRDC_KIND T5 ON T5.ID = T4.KIND_ID
					  LEFT JOIN T_PRDC_TYPE T7 ON T7.ID = t5.TYPE_ID AND T7.PRDC_TYPE_STATUS = 0
					 WHERE  TPCE.CAR_RIGSTER_NUMBER is not null 
					 and TPCE.CAR_RIGSTER_NUMBER like '%$CAR_NUMBER$%' 
					 and TPCE.CREDIT_ID = T1.ID
					)
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="companyCode">
			    T1.company_code = #companyCode#
			</isNotEmpty>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
				<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	T1.sensor_id = #s_employeeId# ]]> -->
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or upper.ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[
					exists(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId# and uc.dept_id = dept.id)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(	T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
					 	OR upper.NAME LIKE '%$QSEARCH_VALUE$%' 
					 	OR T6.NAME LIKE '%$QSEARCH_VALUE$%'
					 	OR T7.BRAND LIKE '%$QSEARCH_VALUE$%'
					 	or t9.DECP_NAME_CN like '%$QSEARCH_VALUE$%'
					 	or t1.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%'
					 )
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
			<![CDATA[
				 CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) >= #QSTART_DATE# 
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
			<![CDATA[
				  CONVERT(DATE,
					CASE 
						WHEN T10.START_DATE IS NOT NULL
							THEN T10.START_DATE
						WHEN T12.START_DATE IS NOT NULL
							THEN T12.START_DATE
					END 
				 ) <= #QEND_DATE#
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS is null ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="0">
						<![CDATA[ t2.RECT_STATUS is not null ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="1">
						<![CDATA[ t2.RECT_STATUS = 1 and isnull(T8.PAYLISTFLAG,0)=0  ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="2">
						<![CDATA[ t2.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="3">
						<![CDATA[ t2.RECT_STATUS = 1 and isnull(T8.PAYLISTFLAG,0)>0 ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="4">
						<![CDATA[ t2.RECT_STATUS = 0 ]]>
					</isEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
		  	<isNotEmpty prepend="and" property="RECP_STATUS">
		  		<![CDATA[ T10.RECP_STATUS = #RECP_STATUS# ]]>
		  	</isNotEmpty>
		  	<!-- added by yangliu 2014-1-22 -->
		  	<isNotEmpty prepend="and" property="credit_id_">
		  		<![CDATA[ T1.ID = #credit_id_# ]]>
		  	</isNotEmpty>
		  	<isEqual prepend="and" property="SELF_DISPATCH" compareValue="true">
		  		<![CDATA[ exists( SELECT DISPATCH_USER_ID
        					FROM T_RENT_FILE_SENDER_STATE
        					WHERE CREDIT_ID = T1.ID AND DISPATCH_USER_ID = #s_employeeId#
        				) ]]>
		  	</isEqual>
			<isEqual prepend="and" property="LOSS_ONLY" compareValue="true">
				exists(select REFD_ID from T_RENT_FILEDETAIL where PRCD_ID = T1.ID and FILE_TYPE=3 AND IS_ALREADY = 0)
			</isEqual>
		<![CDATA[  GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          upper.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG, 
			          T1.CONTRACT_TYPE,
			          t1.wind_result_date,
			          t9.DECP_NAME_CN,
			          T10.RECP_STATUS,
			          t1.CREDIT_RUNCODE,
			          T1.DELAY_PAY_STATUS,T1.production_type,TRFS.STATE
		]]>
	</select>
	<!-- init -->
	<select id="readCustByPrcdId" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ 
		SELECT PC.ID PRCD_ID,
		       CC.CUST_ID,
		       CC.CUST_CODE,
		       CC.CUST_TYPE,
		       CC.CUST_NAME,
		       t1.ORGANIZATION_CODE_CERTIFICATE CORP_ORAGNIZATION_CODE,
		       CC.OPEN_BANK,
		       CC.BANK_ACCOUNTS,
		       t1.TELEPHONE CORP_COMPANY_PHONE,
		       t1.FAX CORP_COMPANY_FAX,
		       t1.LEGAL_PERSON CORP_HEAD_SIGNATURE,
		       t1.POSTCODE CORP_COMPANY_ZIP,
		       t1.COMMON_OFFICE_ADDRESS CORP_WORK_ADDRESS,
		       CC.NATU_IDCARD,
		       CC.NATU_MOBILE,
		       CC.NATU_MATE_NAME,
		       CC.NATU_MATE_IDCARD,
		       CC.NATU_MATE_MOBILE,
		       CC.NATU_ZIP,
		       CC.NATU_FAX,
		       CC.NATU_HOME_ADDRESS,
		       t1.REGISTERED_OFFICE_ADDRESS CORP_REGISTE_ADDRESS,
		       PC.DECP_ID,
		       PC.LEASE_CODE,
		       PC.PROVINCE_ID,
		       PC.CITY_ID,
		       PC.CONTRACT_TYPE ,
		       PC.AREA_ID  ,  
		       CC.ID_CARD_TYPE,
			     ( select top(1)  CL.LINK_NAME  from   T_CUST_LINKMAN  CL  where   CL.CUST_ID =  (
					select PC.CUST_ID  FROM T_PRJT_CREDIT PC  WHERE PC.STATUS = 0
		   AND PC.ID =  #PRCD_ID#
					) )  CUST_LINKMAN,PC.LESSOR_TIME
		  FROM T_PRJT_CREDIT PC
		  LEFT JOIN T_CUST_CUSTOMER CC ON CC.CUST_ID = PC.CUST_ID
		  LEFT JOIN T_PRJT_CREDITCUSTOMERCORP t1 ON t1.CREDIT_ID = PC.ID
		 WHERE PC.STATUS = 0
		   AND PC.ID = #PRCD_ID#
		   
		]]>
	</select>
	<select id="readCorpByPrcdId" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ 
		 SELECT PC.ID PRCD_ID,
		       CC.CUST_ID,
		       CC.CUST_CODE,
		       CC.CUST_TYPE,
		       CC.CUST_NAME,
		       CC.CORP_ORAGNIZATION_CODE,
		       CC.OPEN_BANK,
		       CC.BANK_ACCOUNTS,
		       CC.CORP_COMPANY_PHONE ,
		       CC.CORP_COMPANY_FAX,
		       CC.CORP_HEAD_SIGNATURE,
		       PC.DECP_ID,
		       PC.LEASE_CODE,
		       PC.PROVINCE_ID,
		       PC.CITY_ID,
		       PC.CONTRACT_TYPE ,
		       PC.AREA_ID  ,  
		       CC.ID_CARD_TYPE,
		       CP.LINK_MAN,
		       CP.LINK_POSTCODE,
		       CP.LINK_MAILING_ADDRESS
		  FROM T_PRJT_CREDIT PC
		  LEFT JOIN T_PRJT_CREDITCUSTOMERCORP CP ON CP.CREDIT_ID = PC.ID
           LEFT JOIN T_CUST_CUSTOMER CC ON CC.CUST_ID = PC.CUST_ID
		 WHERE PC.STATUS = 0
		   AND PC.ID =  #PRCD_ID#
		]]>
	</select>
	<select id="readCreditSchemaByPrcdId" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
		SELECT T.PRCS_ID,T.LEASE_TERM AS LEASE_PERIOD,T.LEASE_COURSE AS LEASE_TERM,T.PLEDGE_PRICE,T.PLEDGE_PRICE_RATE,T.HEAD_HIRE,T.HEAD_HIRE_PERCENT,
			T.MANAGEMENT_FEE,T.MANAGEMENT_FEE_RATE,T.BUSINESS_TRIP_PRICE,T.FLOAT_RATE,T.YEAR_INTEREST,T.YEAR_INTEREST_TYPE,
			T.FINE_RATE,T.FINE_TYPE,T.LEASE_RZE,T.PAY_WAY,T.START_DATE,T.EQUPMENT_ADDRESS,T.DEAL_WAY,T.BUY_INSURANCE_WAY,
			T.INSURANCE_COMPANY_ID,T.BUY_INSURANCE_TIME,T.INSURE_REBATE_RATE,T.PLEDGE_WAY,T.PLEDGE_PERIOD,T.INSURE_BASE_RATE,T.SALES_TAX_RATE,
			T.STAMP_TAX_TOPRIC,T.STAMP_TAX_MONTHPRIC,T.STAMP_TAX_INSUREPRIC,T.TR_IRR_RATE,T.TR_RATE,T.PLEDGE_REALPRIC,
			t.PLEDGE_AVE_PRICE,t.PLEDGE_BACK_PRICE,t.PLEDGE_LAST_PRICE,t.PLEDGE_LAST_PERIOD,t.PLEDGE_PERIOD,
			t.PLEDGE_ENTER_WAY,t.PLEDGE_ENTER_CMPRICE,t.PLEDGE_ENTER_CMRATE,t.PLEDGE_ENTER_WAY,t.PLEDGE_ENTER_AG,t.PLEDGE_ENTER_AGRATE,t.PLEDGE_ENTER_MCTOAG,
			t.PLEDGE_ENTER_MCTOAGRATE,t.SUPL_TRUE,T.RATE_DIFF,T.TAX_PLAN_CODE,T.PLEDGE_LAST_PRICE_TAX,T.DEFER_PERIOD,T.ESTIMATES_PAY_DATE
			FROM T_PRJT_CREDITSCHEME T
			WHERE T.STATUS=0
			AND T.CREDIT_ID=#PRCD_ID#
		]]>
	</select>
	<select id="readCreditEquipmentByPrcdId" parameterClass="map" resultClass="java.util.HashMap">
	<!-- 
		<![CDATA[
		SELECT TPK.TYPE_ID,TPP.KIND_ID,TSE.PRODUCT_ID,TSE.SUPPLIER_ID,TPC.SUEQ_ID,
			TPC.STAYBUY_PRICE,TPC.UNIT_PRICE,SUM(TPC.AMOUNT) AS AMOUNT,TPC.UNIT,MAX(TPC.MEMO) AS MEMO,
			TPC.THING_KIND,TPC.THING_NAME,TPC.MODEL_SPEC,TPC.BRAND,tpc.shui_price,TPC.LOCK_CODE
			FROM T_PRJT_CREDITEQUIPMENT TPC
			LEFT JOIN T_SUPL_EQUIPMENT TSE ON TPC.SUEQ_ID=TSE.SUEQ_ID
			LEFT JOIN T_PRDC_PRODUCT TPP ON TSE.PRODUCT_ID=TPP.ID
			LEFT JOIN T_PRDC_KIND TPK ON TPK.ID=TPP.KIND_ID
		WHERE TPC.CREDIT_ID=#PRCD_ID# AND TPC.EQMT_STATUS=0
		GROUP BY TPK.TYPE_ID,TPP.KIND_ID,TSE.PRODUCT_ID,TSE.SUPPLIER_ID,TPC.SUEQ_ID,
			TPC.STAYBUY_PRICE,TPC.UNIT_PRICE,TPC.UNIT,
			TPC.THING_KIND,TPC.THING_NAME,TPC.MODEL_SPEC,TPC.BRAND,tpc.shui_price,TPC.LOCK_CODE
		]]>
		-->
		<!-- Modify by Michael 2012 4-18 增加重车相关信息 -->
		<![CDATA[
			SELECT 
				TPK.TYPE_ID,TPP.KIND_ID,TSE.PRODUCT_ID,TSE.SUPPLIER_ID,TPC.SUEQ_ID,
				TPC.STAYBUY_PRICE,TPC.UNIT_PRICE,SUM(TPC.AMOUNT) AS AMOUNT,TPC.UNIT,MAX(TPC.MEMO) AS MEMO,
				TPC.THING_KIND,TPC.THING_NAME,TPC.MODEL_SPEC,TPC.BRAND,tpc.shui_price,TPC.LOCK_CODE,t7.MANUFACTURER,
				 T7.NAME TYPE_NAME,TPC.CAR_COLOR,TPC.CAR_RIGSTER_NUMBER,TPC.CAR_ID_NUMBER,TPC.CAR_ENGINE_NUMBER,TPC.CAR_IMPORT_DOMESTIC
			FROM T_PRJT_CREDITEQUIPMENT TPC
			LEFT JOIN T_SUPL_EQUIPMENT TSE ON TPC.SUEQ_ID=TSE.SUEQ_ID
			LEFT JOIN T_PRDC_PRODUCT TPP ON TSE.PRODUCT_ID=TPP.ID
			LEFT JOIN T_PRDC_KIND TPK ON TPK.ID=TPP.KIND_ID
			LEFT JOIN T_PRDC_TYPE T7 ON T7.ID = TPK.TYPE_ID AND T7.PRDC_TYPE_STATUS = 0
			WHERE 
				TPC.CREDIT_ID=#PRCD_ID# AND TPC.EQMT_STATUS=0
			GROUP BY TPK.TYPE_ID,TPP.KIND_ID,TSE.PRODUCT_ID,TSE.SUPPLIER_ID,TPC.SUEQ_ID,
				TPC.STAYBUY_PRICE,TPC.UNIT_PRICE,TPC.UNIT,
				TPC.THING_KIND,TPC.THING_NAME,TPC.MODEL_SPEC,TPC.BRAND,tpc.shui_price,TPC.LOCK_CODE,t7.MANUFACTURER,
				 T7.NAME,TPC.CAR_COLOR,TPC.CAR_RIGSTER_NUMBER,TPC.CAR_ID_NUMBER,TPC.CAR_ENGINE_NUMBER,TPC.CAR_IMPORT_DOMESTIC
		]]>
	</select>
	<select id="readCreditInsureByPrcdId" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
		SELECT T.PJCI_ID,
		       T.INSURE_ITEM,
		       T.START_DATE,
		       T.END_DATE,
		       T.INSURE_RATE,
		       T.INSURE_PRICE,
		       T.MEMO
		  FROM T_PRJT_CREDITINSURE T
		WHERE T.CREDIT_ID=#PRCD_ID#
		]]>
	</select>
	<statement id="readCreditOtherFeeByPrcdId" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
		SELECT T.PJCO_ID, T.OTHER_NAME, T.OTHER_PRICE, T.OTHER_DATE, T.MEMO
		  FROM T_PRJT_CREDITOTHERPRICE T
		 WHERE T.CREDIT_ID = #PRCD_ID#
		]]>
	</statement>
	<!-- create -->
	<!-- Modify by michael 2012-3-2 增加合同类型录入rect_type -->
	<insert id="createRentContract" parameterClass="map">
			  INSERT INTO T_RENT_CONTRACT
					  (  CREATE_USER_ID,
					   MODIFY_USER_ID,
					   PRCD_ID,
					   LEASE_CODE,
					   LESSOR,
					   LESSEE,
					   CUST_TYPE,
					   PROVINCE_ID,
					   CITY_ID,
					   AREA_ID,
					   CUST_CODE,
					   CUST_NAME,
					   NATU_IDCARD,
					   CUST_ADDRESS,
					   CUST_ZIP,
					   CUST_PHONE,
					   CUST_FAX,
					   NATU_MATE_NAME,
					   NATU_MATE_IDCARD,
					   CUST_LINKMAN,
					   CORP_ORAGNIZATION_CODE,
					   OPEN_BANK,
					   BANK_ACCOUNTS,
					   LEASE_TOPRIC,
					   OTHER_AGREEMENT,
					   DECP_ID,
					   CUST_ID,
					   PRJT_ID,
					   CLERK_ID,
					   SENSOR_ID,
					   RECT_TYPE,
					   ID_CARD_TYPE,
					   CORP_REGISTE_ADDRESS,
					   CORP_WORK_ADDRESS
				<isNotEmpty prepend="," property="LESSOR_TIME">
					LESSOR_TIME
				</isNotEmpty>
				<isNotEmpty prepend="," property="LESSEE_TIME">
					LESSEE_TIME
				</isNotEmpty>					   
					   )
					  SELECT  #s_employeeId#,
					         #s_employeeId#,
					         #PRCD_ID#,
					         #LEASE_CODE#,
					         #LESSOR#,
					         #LESSEE#,
					         #CUST_TYPE#,
					         #PROVINCE_ID#,
					         #CITY_ID#,
					         #AREA_ID#,
					         #CUST_CODE#,
					         #CUST_NAME#,
					         #NATU_IDCARD#,
					         #CUST_ADDRESS#,
					         #CUST_ZIP#,
					         #CUST_PHONE#,
					         #CUST_FAX#,
					         #NATU_MATE_NAME#,
					         #NATU_MATE_IDCARD#,
					         #CUST_LINKMAN#,
					         #CORP_ORAGNIZATION_CODE#,
					         #OPEN_BANK#,
					         #BANK_ACCOUNTS#,
					         #LEASE_TOPRIC#,
					         #OTHER_AGREEMENT#,
					         #DECP_ID#,
					         PC.CUST_ID,
					         PC.PROJECT_ID,
					         PC.CLERK_ID,
					         PC.SENSOR_ID,
					         #RECT_TYPE#,
					         #ID_CARD_TYPE#,
					         #CORP_REGISTE_ADDRESS#,
					         #CORP_WORK_ADDRESS#
							<isNotEmpty prepend="," property ="LESSOR_TIME">
								cast(#LESSOR_TIME# as datetime)
							</isNotEmpty >	
							<isNotEmpty prepend="," property ="LESSEE_TIME">
								 cast(#LESSEE_TIME# as datetime)	
							</isNotEmpty >					         
					    FROM T_PRJT_CREDIT PC
					   WHERE PC.ID = #PRCD_ID#
		<selectKey resultClass="java.lang.Long" keyProperty="RECT_ID">
			SELECT @@IDENTITY AS RECT_ID
		</selectKey>   
	</insert>
	<!-- Modify by Michael 2012 1/5 增加利差栏位 -->
	<insert id="createRentContractSchema" parameterClass="map">
		
		<![CDATA[
		INSERT INTO T_RENT_CONTRACTSCHEMA
			  ( CREATE_USER_ID,
			   MODIFY_USER_ID,
			   RECT_ID,
			   LEASE_TERM,
			   LEASE_PERIOD,
			   PLEDGE_PRICE,
			   PLEDGE_PRICE_RATE,
			   HEAD_HIRE_PERCENT,
			   HEAD_HIRE,
			   FLOAT_RATE,
			   YEAR_INTEREST_TYPE,
			   YEAR_INTEREST,
			   LEASE_TOPRIC,
			   PAY_WAY,
			   FINE_TYPE,		   
			   LEASE_RZE,
			   DEAL_WAY,
			   START_DATE,
			   EQUPMENT_ADDRESS,
			   BUSINESS_TRIP_PRICE,
			   PLEDGE_WAY,
			   PLEDGE_PERIOD,		  
			   STAMP_TAX_TOPRIC,
			   STAMP_TAX_MONTHPRIC,
			   STAMP_TAX_INSUREPRIC,
			   TR_RATE,
			   TR_IRR_RATE,
			   OTHER_TAX,
			   PLEDGE_REALPRIC,
			   PLEDGE_AVE_PRICE,
			   PLEDGE_BACK_PRICE,
			   PLEDGE_LAST_PRICE,
			   PLEDGE_LAST_PERIOD,
			   PLEDGE_ENTER_WAY,
			   PLEDGE_ENTER_CMPRICE,
			   PLEDGE_ENTER_CMRATE,
			   PLEDGE_ENTER_AG,
			   PLEDGE_ENTER_AGRATE,
			   PLEDGE_ENTER_MCTOAG,
			   PLEDGE_ENTER_MCTOAGRATE,
			   FINE_RATE,
			   SALES_TAX_RATE,
			   LOAN_RATE,
			   SUPL_TRUE,
			   MANAGE_RATE,
			   RATE_DIFF,TAX_PLAN_CODE,PLEDGE_LAST_PRICE_TAX,DEFER_PERIOD
			   )
			VALUES
			  ( #s_employeeId#,
			   #s_employeeId#,
			   #RECT_ID#,
			   #LEASE_TERM#,
			   #LEASE_PERIOD#,
			   #PLEDGE_PRICE#,
			   #PLEDGE_PRICE_RATE#,
			   #HEAD_HIRE_PERCENT#,
			   #HEAD_HIRE#,
			   #FLOAT_RATE#,
			   #YEAR_INTEREST_TYPE#,
			   #YEAR_INTEREST#,
			   #LEASE_TOPRIC#,
			   #PAY_WAY#,
			   #FINE_TYPE#,		   
			   #LEASE_RZE#,
			   #DEAL_WAY#,
			   cast(#START_DATE# as datetime),
			   #EQUPMENT_ADDRESS#,
			   #BUSINESS_TRIP_PRICE#,
			   #PLEDGE_WAY#,
			   #PLEDGE_PERIOD#,
			   #STAMP_TAX_TOPRIC#,
			   #STAMP_TAX_MONTHPRIC#,
 			   #STAMP_TAX_INSUREPRIC#,
			   #TR_RATE#,
			   #TR_IRR_RATE#,
			   0,
			   #PLEDGE_REALPRIC#,
			   #PLEDGE_AVE_PRICE#,
			   #PLEDGE_BACK_PRICE#,
			   #PLEDGE_LAST_PRICE#,
			   #PLEDGE_LAST_PERIOD#,
			   #PLEDGE_ENTER_WAY#,
			   #PLEDGE_ENTER_CMPRICE#,
			   #PLEDGE_ENTER_CMRATE#,
			   #PLEDGE_ENTER_AG#,
			   #PLEDGE_ENTER_AGRATE#,
			   #PLEDGE_ENTER_MCTOAG#,
			   #PLEDGE_ENTER_MCTOAGRATE#,
			   #FINE_RATE#,
			   #SALES_TAX_RATE#,
			   #LOAN_RATE#,
			   #SUPL_TRUE#,
			   #MANAGE_RATE#,
			   #RATE_DIFF#,#TAX_PLAN_CODE#,#PLEDGE_LAST_PRICE_TAX#,#DEFER_PERIOD#
			   )
		]]>
		<selectKey resultClass="java.lang.Long" keyProperty="RECS_ID">
			<![CDATA[	SELECT @@IDENTITY AS RECS_ID ]]>
		</selectKey>    
	</insert>
	<insert id="createRentContractEquip" parameterClass="map">
		
		 <![CDATA[
		 		INSERT INTO T_EQMT_EQUIPMENT
						  (
						   CREATE_USER_ID,
						   MODIFY_USER_ID,
						   SUEQ_ID,
						   THING_NAME,
						   BRAND,
						   MODEL_SPEC,
						   UNIT_PRICE,
						   MEMO,
						   STAYBUY_PRICE,
						   UNIT,
						   THING_KIND,
						   THING_NUMBER,
						   SHUI_PRICE)
						VALUES
						  (
						   #s_employeeId#,
						   #s_employeeId#,
						   #SUEQ_ID#,
						   #THING_NAME#,
						   #BRAND#,
						   #MODEL_SPEC#,
						   #UNIT_PRICE#,
						   #MEMO#,
						   #STAYBUY_PRICE#,
						   #UNIT#,
						   #THING_KIND#,
						   #THING_NUMBER#,
						   #SHUI_PRICE#)
		 	]]>
		 	<selectKey resultClass="java.lang.Long" keyProperty="EQMT_ID">
			<![CDATA[	SELECT @@IDENTITY AS EQMT_ID  ]]>
		</selectKey> 
	</insert>
	<!-- Add by Michael 2012 4-18 增加重车相关资料  -->
	<insert id="createRentContractDetail" parameterClass="map">
	 	<![CDATA[
		INSERT INTO T_RENT_CONTRACTDETAIL
				  ( CREATE_USER_ID,
				   MODIFY_USER_ID,
				   RECT_ID,
				   EQMT_ID,
				   RECS_ID,
				   THING_NAME,
				   BRAND,
				   MODEL_SPEC,
				   UNIT_PRICE,
				   THING_KIND,
				   THING_NUMBER,
				   UNIT,
				   STAYBUY_PRICE,
				   MEMO,
				   LOCK_CODE,CAR_COLOR,CAR_RIGSTER_NUMBER,CAR_ID_NUMBER,CAR_ENGINE_NUMBER,CAR_IMPORT_DOMESTIC,
				   SHUI_PRICE)
				VALUES
				  ( #s_employeeId#,
				   #s_employeeId#,
				   #RECT_ID#,
				   #EQMT_ID#,
				   #RECS_ID#,
				   #THING_NAME#,
				   #BRAND#,
				   #MODEL_SPEC#,
				   #UNIT_PRICE#,
				   #THING_KIND#,
				   #THING_NUMBER#,
				   #UNIT#,
				   #STAYBUY_PRICE#,
				   #MEMO#,
				   #LOCK_CODE#,#CAR_COLOR#,#CAR_RIGSTER_NUMBER#,#CAR_ID_NUMBER#,#CAR_ENGINE_NUMBER#,#CAR_IMPORT_DOMESTIC#,
				   #SHUI_PRICE#)
		 ]]>
	</insert>
	<insert id="createRentContractInsure" parameterClass="map">
		<![CDATA[
		INSERT INTO T_RENT_CONTRACTINSURE
				  ( CREATE_USER_ID,
				   MODIFY_USER_ID,
				   RECT_ID,
				   INSURE_ITEM,
				   START_DATE,
				   END_DATE,
				   INSURE_RATE,
				   INSURE_PRICE,
				   MEMO)
				VALUES
				  (  #s_employeeId#,
				   #s_employeeId#,
				   #RECT_ID#,
				   #INSURE_ITEM#,
				   #START_DATE#,
				   #END_DATE#,
				   #INSURE_RATE#,
				   #INSURE_PRICE#,
				   #MEMO#)
		]]>
	</insert>
	<insert id="createRentContractOtherFee" parameterClass="map">
		<![CDATA[
		INSERT INTO T_RENT_CONTRACTOTHERFEE
				  ( CREATE_USER_ID,
				   MODIFY_USER_ID,
				   RECT_ID,
				   OTHER_NAME,
				   OTHER_PRICE,
				   OTHER_DATE,
				   MEMO)
				VALUES
				  (  #s_employeeId#,
				   #s_employeeId#,
				   #RECT_ID#,
				   #OTHER_NAME#,
				   #OTHER_PRICE#,
				   #OTHER_DATE#,
				   #MEMO#)
   		]]>
	</insert>
	<insert id="createRentContractRemark">
		<![CDATA[
			INSERT INTO T_RENT_CONTRACTREMARK
				  (  CREATE_USER_ID, MODIFY_USER_ID, RECT_ID, PRCD_ID, REMARK)
				VALUES
				  ( #s_employeeId#,
				   #s_employeeId#,
				   #RECT_ID#,
				   #PRCD_ID#,
				   #REMARK#)
		]]>
	</insert>
	<!-- read -->
	<statement id="readRentContractByRectId" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
		SELECT T2.CONTRACT_TYPE,T1.RECT_ID,T1.LEASE_CODE,T1.LESSOR_TIME,T1.LESSEE_TIME,T1.LESSOR,T1.LESSEE,T1.CUST_TYPE,T1.PROVINCE_ID,T1.CITY_ID,
			T1.CUST_CODE,T1.CUST_NAME,T1.NATU_IDCARD,T1.CUST_ADDRESS,T1.CUST_ZIP,T1.CUST_PHONE,T1.CUST_FAX,T1.NATU_MATE_NAME,
			T1.NATU_MATE_IDCARD,T1.CUST_LINKMAN,T1.CORP_ORAGNIZATION_CODE,T1.OPEN_BANK,T1.BANK_ACCOUNTS,T1.LEASE_TOPRIC,
			T1.OTHER_AGREEMENT,T1.DECP_ID,T1.RECT_TYPE,T1.AREA_ID,T1.ID_CARD_TYPE,t1.CORP_REGISTE_ADDRESS,t1.CORP_WORK_ADDRESS,t1.PRCD_ID,trts.TAX_PLAN_CODE,trts.DEFER_PERIOD
		FROM T_RENT_CONTRACT T1
		LEFT JOIN T_PRJT_CREDIT T2 ON T2.ID = T1.PRCD_ID 
		left join T_RENT_CONTRACTSCHEMA trts on trts.RECT_ID = T1.RECT_ID and trts.STATUS = 0
		WHERE T1.RECT_ID=#RECT_ID#
		]]>
	</statement>
	<statement id="readEquipmentByRectId" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
		SELECT T5.TYPE_ID,
		       T4.KIND_ID,
		       T3.PRODUCT_ID,
		       T3.SUPPLIER_ID,
		       T2.SUEQ_ID,
		       T1.STAYBUY_PRICE,
		       T1.UNIT_PRICE,
		       T1.SHUI_PRICE,
		       SUM(T1.AMOUNT) AS AMOUNT,
		       T1.UNIT,
		       MAX(T1.MEMO) AS MEMO,
		       T1.THING_KIND,
		       T5.NAME THING_NAME,
		       T4.NAME MODEL_SPEC,
		       T1.BRAND,
		       T1.LOCK_CODE,
		       t1.shui_price ,
		       T2.THING_NUMBER,
		        T7.Manufacturer,
		         T7.NAME TYPE_NAME
		  FROM T_RENT_CONTRACTDETAIL T1
		  LEFT JOIN T_EQMT_EQUIPMENT T2 ON T1.EQMT_ID = T2.EQMT_ID
		  LEFT JOIN T_SUPL_EQUIPMENT T3 ON T3.SUEQ_ID = T2.SUEQ_ID
		  LEFT JOIN T_PRDC_PRODUCT T4 ON T4.ID = T3.PRODUCT_ID
		  LEFT JOIN T_PRDC_KIND T5 ON T5.ID = T4.KIND_ID
		  LEFT JOIN T_PRDC_TYPE T7 ON T7.ID = t5.TYPE_ID AND T7.PRDC_TYPE_STATUS = 0
		 WHERE T1.STATUS=0 AND T1.RECT_ID = #RECT_ID#
		 GROUP BY T5.TYPE_ID,
		          T4.KIND_ID,
		          T3.PRODUCT_ID,
		          T3.SUPPLIER_ID,
		          T2.SUEQ_ID,
		          T1.STAYBUY_PRICE,
		          T1.UNIT_PRICE,
		          T1.SHUI_PRICE,
		          T1.UNIT,
		          T1.THING_KIND,
		          T4.NAME,
		          T5.NAME,
		          T1.BRAND,
		          T1.LOCK_CODE,
		          t1.shui_price ,
		          T2.THING_NUMBER,
		           T7.Manufacturer,
		            T7.NAME
		]]>
	</statement>
	<statement id="readSchemaByRectId" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
		SELECT     T1.*,tpcs.ESTIMATES_PAY_DATE
		FROM         T_RENT_CONTRACTSCHEMA AS T1
		left join t_rent_contract c on c.RECT_ID = T1.RECT_ID and c.status = 0
		left join t_prjt_creditscheme tpcs on tpcs.credit_id = c.prcd_id and tpcs.status = 0
		WHERE     (T1.STATUS = 0) AND (T1.RECT_ID = #RECT_ID#)
		]]>
	</statement>
	<statement id="readInsureByRectId" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
		SELECT T1.RECI_ID,T1.INSURE_ITEM,T1.START_DATE,T1.END_DATE,T1.INSURE_RATE,T1.INSURE_PRICE,T1.MEMO
			FROM T_RENT_CONTRACTINSURE T1
			WHERE T1.STATUS=0
			AND T1.RECT_ID=#RECT_ID#
		]]>
	</statement>	
	<statement id="readOtherFeeByRectId" parameterClass="map" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT T1.RECO_ID,T1.OTHER_NAME,T1.OTHER_PRICE,T1.OTHER_DATE,T1.MEMO
			FROM T_RENT_CONTRACTOTHERFEE T1
			WHERE T1.STATUS=0
			AND T1.RECT_ID=#RECT_ID#
	]]>
	</statement>
	<statement id="readContractRemark" parameterClass="map" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT T1.RECR_ID, T1.CREATE_TIME, T2.NAME, T1.REMARK, T1.RECT_ID
		  FROM T_RENT_CONTRACTREMARK T1
		  LEFT JOIN T_USER_USER T2 ON T2.ID = T1.CREATE_USER_ID
		 WHERE T1.STATUS = 0
		   AND T1.RECT_ID = #RECT_ID#
		   ORDER BY T1.CREATE_TIME DESC 
	]]>
	</statement>
	<!-- update -->
	<update id="updateRentContract" parameterClass="map">
	<![CDATA[
	  UPDATE T_RENT_CONTRACT 
		   SET MODIFY_TIME            = getdate(),
		       MODIFY_USER_ID         = #s_employeeId#,
		       LESSOR_TIME            = CONVERT(datetime,#LESSOR_TIME#),
		       LESSEE_TIME            = CONVERT(datetime,#LESSEE_TIME#),
		       LESSOR                 = #LESSOR#,
		       LESSEE                 = #LESSEE#,
		       PROVINCE_ID            = #PROVINCE_ID#,
		       CITY_ID                = #CITY_ID#,
		       AREA_ID                = #AREA_ID#,
		       NATU_IDCARD            = #NATU_IDCARD#,
		       CUST_ADDRESS           = #CUST_ADDRESS#,
		       CUST_ZIP               = #CUST_ZIP#,
		       CUST_PHONE             = #CUST_PHONE#,
		       CUST_FAX               = #CUST_FAX#,
		       NATU_MATE_NAME         = #NATU_MATE_NAME#,
		       NATU_MATE_IDCARD       = #NATU_MATE_IDCARD#,
		       CUST_LINKMAN           = #CUST_LINKMAN#,
		       CORP_ORAGNIZATION_CODE = #CORP_ORAGNIZATION_CODE#,
		       OPEN_BANK              = #OPEN_BANK#,
		       BANK_ACCOUNTS          = #BANK_ACCOUNTS#,
		       LEASE_TOPRIC           = #LEASE_TOPRIC#,
		       OTHER_AGREEMENT        = #OTHER_AGREEMENT#,
		       DECP_ID                = #DECP_ID#,
		       RECT_TYPE			  = #RECT_TYPE#,
		       ID_CARD_TYPE           = #ID_CARD_TYPE#,
		       CORP_REGISTE_ADDRESS   = #CORP_REGISTE_ADDRESS#,
		       CORP_WORK_ADDRESS      = #CORP_WORK_ADDRESS#
		 WHERE RECT_ID = #RECT_ID#
	]]>
	</update>
	<update id="updateRentContractSchema" parameterClass="map">
	<![CDATA[
	UPDATE T_RENT_CONTRACTSCHEMA 
		   SET MODIFY_TIME          = getdate(),
		       MODIFY_USER_ID       = #s_employeeId#,
		       LEASE_TERM           = #LEASE_TERM#,
		       LEASE_PERIOD         = #LEASE_PERIOD#,
		       PLEDGE_PRICE         = #PLEDGE_PRICE#,
		       PLEDGE_PRICE_RATE    = #PLEDGE_PRICE_RATE#,
		       HEAD_HIRE_PERCENT    = #HEAD_HIRE_PERCENT#,
		       HEAD_HIRE            = #HEAD_HIRE#,
		       MANAGEMENT_FEE       = #MANAGEMENT_FEE#,
		       MANAGEMENT_FEE_RATE  = #MANAGEMENT_FEE_RATE#,
		       FLOAT_RATE           = #FLOAT_RATE#,
		       YEAR_INTEREST_TYPE   = #YEAR_INTEREST_TYPE#,
		       YEAR_INTEREST        = #YEAR_INTEREST#,
		       LEASE_TOPRIC         = #LEASE_TOPRIC#,
		       PAY_WAY              = #PAY_WAY#,
		       FINE_TYPE            = #FINE_TYPE#,
		       LEASE_RZE            = #LEASE_RZE#,
		       DEAL_WAY             = #DEAL_WAY#,
		       START_DATE           = CONVERT(datetime,#START_DATE#),
		       EQUPMENT_ADDRESS     = #EQUPMENT_ADDRESS#,
		       INSURANCE_COMPANY_ID = #INSURANCE_COMPANY_ID#,
		       BUY_INSURANCE_WAY    = #BUY_INSURANCE_WAY#,
		       BUY_INSURANCE_TIME   = #BUY_INSURANCE_TIME#,
		       INSURE_REBATE_RATE   = #INSURE_REBATE_RATE#,
		       BUSINESS_TRIP_PRICE  = #BUSINESS_TRIP_PRICE#,
		       PLEDGE_PERIOD  		= #PLEDGE_PERIOD#,
		       STAMP_TAX_TOPRIC  	= #STAMP_TAX_TOPRIC#,
		       STAMP_TAX_MONTHPRIC  = #STAMP_TAX_MONTHPRIC#,
		       STAMP_TAX_INSUREPRIC = #STAMP_TAX_INSUREPRIC#,
		       TR_RATE 				= #TR_RATE#,
		       TR_IRR_RATE 			= #TR_IRR_RATE#,
		       PLEDGE_AVE_PRICE     = #PLEDGE_AVE_PRICE#,
			   PLEDGE_BACK_PRICE    = #PLEDGE_BACK_PRICE#,
			   PLEDGE_LAST_PRICE    = #PLEDGE_LAST_PRICE#,
			   PLEDGE_LAST_PERIOD   = #PLEDGE_LAST_PERIOD#,
			   PLEDGE_ENTER_WAY     = #PLEDGE_ENTER_WAY#,
			   PLEDGE_ENTER_CMPRICE = #PLEDGE_ENTER_CMPRICE#,
			   PLEDGE_ENTER_CMRATE  = #PLEDGE_ENTER_CMRATE#,
			   PLEDGE_ENTER_AG      = #PLEDGE_ENTER_AG#,
			   PLEDGE_ENTER_AGRATE  = #PLEDGE_ENTER_AGRATE#,
			   PLEDGE_ENTER_MCTOAG  = #PLEDGE_ENTER_MCTOAG#,
			   PLEDGE_ENTER_MCTOAGRATE  = #PLEDGE_ENTER_MCTOAGRATE#,
			   FINE_RATE            = #FINE_RATE#,
			   INSURE_BASE_RATE     = #INSURE_BASE_RATE#,
			   SALES_TAX_RATE       = #SALES_TAX_RATE#,
			   LOAN_RATE       		= #LOAN_RATE#,
			   SUPL_TRUE			= #SUPL_TRUE#,
			   MANAGE_RATE       	= #MANAGE_RATE#
		 WHERE RECS_ID = #RECS_ID#
	]]>
	</update>
	<update id="updateRentContractInsure" parameterClass="map">
	<![CDATA[
		UPDATE T_RENT_CONTRACTINSURE 
		   SET MODIFY_TIME      = getdate(),
		       MODIFY_USER_ID   = #s_employeeId#,
		       INSURE_ITEM      = #INSURE_ITEM#,
		       START_DATE       = #START_DATE#,
		       END_DATE         = #END_DATE#,
		       INSURE_RATE      = #INSURE_RATE#,
		       INSURE_PRICE     = #INSURE_PRICE#,
		       MEMO             = #MEMO#
		 WHERE RECI_ID = #RECI_ID#
	 ]]>
	</update>
	<update id="updateRentContractOtherFee" parameterClass="map">
	<![CDATA[
		UPDATE T_RENT_CONTRACTOTHERFEE 
		   SET MODIFY_TIME      = getdate(),
		       MODIFY_USER_ID   = #s_employeeId#,
		       OTHER_NAME       = #OTHER_NAME#,
		       OTHER_PRICE      = #OTHER_PRICE#,
		       OTHER_DATE       = #OTHER_DATE#,
		       MEMO             = #MEMO#
		 WHERE RECO_ID = #RECO_ID#
	 ]]>
	</update>
	<statement id="queryEquipmentIdsByRectId" parameterClass="map" resultClass="java.util.HashMap">
	<![CDATA[
		SELECT T.EQMT_ID
		  FROM T_RENT_CONTRACTDETAIL T
		 WHERE T.STATUS = 0
		   AND T.RECT_ID = #RECT_ID#
	]]>
	</statement>
	<delete id="deleteRentContractDetailByRectId" parameterClass="map">
	<![CDATA[
		DELETE FROM T_RENT_CONTRACTDETAIL  WHERE RECT_ID=#RECT_ID#
	]]>
	</delete>
	<delete id="deleteRentContractEquipment" parameterClass="map">
	<![CDATA[
		DELETE FROM T_EQMT_EQUIPMENT  WHERE EQMT_ID=#EQMT_ID#
	]]>
	</delete>
	<delete id="deleteRentContractInsureByRectId" parameterClass="map">
	<![CDATA[
		DELETE FROM T_RENT_CONTRACTINSURE WHERE RECT_ID=#RECT_ID#
	]]>
	</delete>
	<delete id="deleteRentContractOtherFeeByRectId" parameterClass="map">
	<![CDATA[
		DELETE FROM T_RENT_CONTRACTOTHERFEE WHERE RECT_ID=#RECT_ID#
	]]>
	</delete>
	
	<delete id="deleteRentContractDetailByRectIdFalse" parameterClass="map">
	<![CDATA[
		UPDATE T_RENT_CONTRACTDETAIL SET STATUS=-2 WHERE RECT_ID=#RECT_ID#
	]]>
	</delete>
	<delete id="deleteRentContractEquipmentFalse" parameterClass="map">
	<![CDATA[
		UPDATE T_EQMT_EQUIPMENT SET STATUS=-2 WHERE EQMT_ID=#EQMT_ID#
	]]> 
	</delete>
	<delete id="deleteRentContractEquipmentFalse2" parameterClass="map">
	<![CDATA[
		 update t_eqmt_equipment 
    	 set status = -2
   		where eqmt_id in (select eqmt_id
                           from t_rent_contractdetail trcd
                          where trcd.rect_id =#RECT_ID#
                            and trcd.status = 0)
	]]>
	</delete>
	<delete id="deleteRentContractInsureByRectIdFalse" parameterClass="map">
	<![CDATA[
		UPDATE T_RENT_CONTRACTINSURE SET STATUS=-2 WHERE RECT_ID=#RECT_ID#
	]]>
	</delete>
	<delete id="deleteRentContractOtherFeeByRectIdFalse" parameterClass="map">
	<![CDATA[
		UPDATE T_RENT_CONTRACTOTHERFEE SET STATUS=-2 WHERE RECT_ID=#RECT_ID#
	]]>
	</delete>
	 
	 
	<select id="selectRentEquipment" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select t1.eqmt_id,t2.model_spec, t2.thing_name, t2.amount, t2.create_time,t1.recp_id
			  from t_rent_contractdetail t1
			  left join t_eqmt_equipment t2 on t2.eqmt_id = t1.eqmt_id
			 where t1.rect_id = #RECT_ID#
			   and t1.status = 0
		]]>
	</select>	
		<update id="invalidrentContract" parameterClass="map">
		<![CDATA[
		update T_RENT_CONTRACT 
		   set 	MODIFY_TIME = getdate(),
				MODIFY_USER_ID = #s_employeeId#,
				STATUS = -1				
		where RECT_ID = #RECT_ID#	
			]]>
	</update>
		<select id="queryRecpid" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
			select RECP_ID
			  from T_RENT_COLLECTIONPLAN 
			 where RECT_ID = #RECT_ID#
			   and status = 0
		]]>
	</select>
			<update id="invalidCollection" parameterClass="map">
		<![CDATA[
		update T_RENT_COLLECTIONPLAN
		   set 	MODIFY_TIME = getdate(),
				MODIFY_USER_ID = #s_employeeId#,
				STATUS = -1				
		where RECP_ID = #recpId#	
			]]>
	</update>
	
	<!-- 2012/01/19 Yang Yun 合同是否可以作废验证. -->
	<select id="validateInvaliRent" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
			select count(0) from T_RENT_COLLECTIONPLAN cp
			where exists (
			  select RECP_ID, sum(REDUCE_OWN_PRICE), max(d.RECD_ID), min(d.RECD_ID) from T_RENT_COLLECTIONDETAIL d
			  group by d.RECP_ID
			  having (sum(REDUCE_OWN_PRICE) is null or sum(REDUCE_OWN_PRICE) = 0)
			  and d.RECP_ID = cp.RECP_ID
			) and cp.RECT_ID = #rect_id#
		]]>
	</select>
	
	
	<insert id="createContractIrr" parameterClass="map">
		<![CDATA[
			insert into t_rent_contractschemairr
	           (create_id
	           ,create_date
	           ,status
	           ,type
	           ,reci_status
	           ,irr_month_price
	           ,irr_month_price_start
	           ,irr_month_price_end
	           ,recs_id)
	     values
	           (#s_employeeId#,
	           getdate(),
	           0,
	           0,
	           0,
	           #irr_month_price#,
	           #irr_month_price_start#,
	           #irr_month_price_end#,
	           #recs_id#)
		]]>
	</insert>
	<select id="readSchemaIrrByRecsId" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select reci_id
			      ,create_id
			      ,create_date
			      ,modify_id
			      ,modify_date
			      ,status
			      ,type
			      ,reci_status
			      ,irr_month_price
			      ,irr_month_price_start
			      ,irr_month_price_end
			      ,recs_id
			  from t_rent_contractschemairr where status=0 and recs_id=#RECS_ID#
		]]>
	</select>
	<delete id="deleteRentContractIrr" parameterClass="map">
		<![CDATA[
			DELETE FROM T_RENT_CONTRACTSCHEMAIRR WHERE RECS_ID=#RECS_ID#
		]]>
	</delete>
	
	
	<!-- 导出确认函 -->
	<select id="queryeqmts" parameterClass="map" resultClass="hashmap">
		<!-- 
		select 
			T2.THING_NAME,T2.BRAND,T2.MODEL_SPEC,T2.AMOUNT,T2.UNIT,T2.SHUI_PRICE,T2.THING_KIND,T2.UNIT_PRICE
			,T2.UNIT_PRICE*T2.AMOUNT LEASE_PRICE
			,T2.THING_NUMBER THING_NUMBER
		from T_RENT_CONTRACT T1
			LEFT JOIN T_RENT_CONTRACTDETAIL T2 ON T1.RECT_ID=T2.RECT_ID
		where T1.RECT_ID=#RECT_ID# AND T2.STATUS=0
		 -->
		 	select 
			T6.NAME THING_NAME,T2.BRAND,T5.NAME MODEL_SPEC,T2.AMOUNT,T2.UNIT,T2.SHUI_PRICE,T2.THING_KIND,T2.UNIT_PRICE
			,T2.UNIT_PRICE*T2.AMOUNT LEASE_PRICE
			,T2.THING_NUMBER THING_NUMBER
		from T_RENT_CONTRACT T1
			LEFT JOIN T_RENT_CONTRACTDETAIL T2 ON T1.RECT_ID=T2.RECT_ID
			 LEFT JOIN T_EQMT_EQUIPMENT T3 ON T3.EQMT_ID = T2.EQMT_ID and T3.STATUS=0
			  LEFT JOIN T_SUPL_EQUIPMENT T4 ON T4.SUEQ_ID = T3.SUEQ_ID and T4.STATUS=0
			  LEFT JOIN T_PRDC_PRODUCT T5 ON T5.ID = T4.PRODUCT_ID and T5.STATUS=0
			  LEFT JOIN T_PRDC_KIND T6 ON T6.ID = T5.KIND_ID
		where T2.STATUS=0
			<isNotEmpty prepend="AND" property="RECT_ID">
				T1.RECT_ID=#RECT_ID# 
			</isNotEmpty>
			<isEmpty prepend="AND" property="RECT_ID">
				T1.PRCD_ID = #PRCD_ID#
			</isEmpty>
	</select>
	
	<select id="queryeqmtsPrjt" parameterClass="map" resultClass="hashmap">
		<!-- 
		select 
			T2.THING_NAME,T2.BRAND,T2.MODEL_SPEC,T2.AMOUNT,T2.UNIT,T2.SHUI_PRICE,T2.THING_KIND,T2.UNIT_PRICE
			,T2.UNIT_PRICE*T2.AMOUNT LEASE_PRICE
		from T_PRJT_CREDIT T1
			LEFT JOIN T_PRJT_CREDITEQUIPMENT T2 ON T2.CREDIT_ID=T1.ID
		where T1.ID=#PRCD_ID#
		 -->
		 <!-- Modify by michael 2012 4-18 增加重车相关信息 -->
		 select 
			T6.NAME THING_NAME,T2.BRAND,T5.NAME MODEL_SPEC,T2.AMOUNT,T2.UNIT,T2.SHUI_PRICE,T2.THING_KIND,T2.UNIT_PRICE
			,T2.UNIT_PRICE*T2.AMOUNT LEASE_PRICE,t7.Manufacturer,t2.CAR_COLOR,t2.CAR_RIGSTER_NUMBER,t2.CAR_ID_NUMBER,t2.CAR_ENGINE_NUMBER,t2.CAR_IMPORT_DOMESTIC
		from T_PRJT_CREDIT T1
			LEFT JOIN T_PRJT_CREDITEQUIPMENT T2 ON T2.CREDIT_ID=T1.ID
			LEFT JOIN T_SUPL_EQUIPMENT T4 ON T4.SUEQ_ID = t2.SUEQ_ID and T4.STATUS=0
		LEFT JOIN T_PRDC_PRODUCT T5 ON T5.ID = T4.PRODUCT_ID and T5.STATUS=0
		LEFT JOIN T_PRDC_KIND T6 ON T6.ID = T5.KIND_ID
		LEFT JOIN T_PRDC_TYPE t7 on t6.type_id=t7.id
		where T1.ID=#PRCD_ID#
	</select>
	
	<!-- Modify by Michael 2012 4-10 增加我司入供应商 -->
	<select id="queryContract" parameterClass="map" resultClass="hashmap">
		select DISTINCT
				 T1.LEASE_CODE,T1.CUST_NAME
				 ,T6.PLEDGE_ENTER_AG,T6.PLEDGE_ENTER_AGRATE
				 ,T6.PLEDGE_AVE_PRICE,MAX(T5.NAME) SUPL_NAME
				 ,T7.PUCT_CODE,T6.PLEDGE_ENTER_MCTOAG
		from T_RENT_CONTRACT T1
			LEFT JOIN T_RENT_CONTRACTDETAIL T2 ON T1.RECT_ID=T2.RECT_ID
			LEFT JOIN T_EQMT_EQUIPMENT T3 ON T3.EQMT_ID=T2.EQMT_ID
			LEFT JOIN T_SUPL_EQUIPMENT T4 ON T4.SUEQ_ID=T3.SUEQ_ID
			LEFT JOIN T_SUPL_SUPPLIER T5 ON T5.ID=T4.SUPPLIER_ID
			LEFT JOIN T_RENT_CONTRACTSCHEMA T6 ON T6.RECT_ID = T1.RECT_ID
			LEFT JOIN T_PUCS_CONTRACT T7 ON T7.RECT_ID=T1.RECT_ID
		where T1.RECT_ID=#RECT_ID#
		GROUP BY  T1.LEASE_CODE,T1.CUST_NAME
				 ,T6.PLEDGE_ENTER_AG,T6.PLEDGE_ENTER_AGRATE
				 ,T7.PUCT_CODE,T6.PLEDGE_AVE_PRICE,T6.PLEDGE_ENTER_MCTOAG
	</select>
	
		<select id="queryContractPrjt" parameterClass="map" resultClass="hashmap">
		select DISTINCT
			T1.LEASE_CODE,T6.CUST_NAME
			,max(T5.NAME) SUPL_NAME
			,T7.PLEDGE_ENTER_AG,T7.PLEDGE_ENTER_AGRATE
			,T7.PLEDGE_AVE_PRICE,T8.PUCT_CODE,T7.PLEDGE_ENTER_MCTOAG
		from T_PRJT_CREDIT T1
			LEFT JOIN T_PRJT_CREDITEQUIPMENT T2 ON T1.ID=T2.CREDIT_ID
			LEFT JOIN T_SUPL_EQUIPMENT T4 ON T4.SUEQ_ID=T2.SUEQ_ID
			LEFT JOIN T_SUPL_SUPPLIER T5 ON T5.ID=T4.SUPPLIER_ID
			LEFT JOIN T_CUST_CUSTOMER T6 ON T6.CUST_ID=T1.CUST_ID
			LEFT JOIN T_PRJT_CREDITSCHEME T7 ON T7.CREDIT_ID=T1.ID
			LEFT JOIN T_PUCS_CONTRACT T8 ON T8.PRCD_ID=T1.ID
		WHERE T1.ID=#PRCD_ID#
		group by 
			T1.LEASE_CODE,
			T6.CUST_NAME,
			T7.PLEDGE_ENTER_AG,
			T7.PLEDGE_ENTER_AGRATE,
			T8.PUCT_CODE,
			T7.PLEDGE_AVE_PRICE,T7.PLEDGE_ENTER_MCTOAG
	</select>
	
	<!--
	<select id="getCreditByID" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ 
		 SELECT top 1 t1.ID PRCD_ID,
		      // t2.BRAND,
		      // t3.CUST_NAME,
		       t2.UNIT_PRICE*t2.AMOUNT LEASE_PRICE,
		       //t2.THING_NAME,
		       //t2.THING_KIND,
		       //t2.MODEL_SPEC,
		       //t2.AMOUNT,
		       //t2.UNIT_PRICE,
		       //t2.SHUI_PRICE,
		       //t4.LEASE_CODE,
		      // t6.PLEDGE_ENTER_AG,
		       //t6.PLEDGE_ENTER_AGRATE,
		       t5.PUCT_CODE
		  FROM T_PRJT_CREDIT t1
		  LEFT JOIN T_PRJT_CREDITEQUIPMENT t2 ON t2.CREDIT_ID = t1.ID
          LEFT JOIN T_CUST_CUSTOMER t3 ON t3.CUST_ID = t1.CUST_ID
          LEFT JOIN T_RENT_CONTRACT t4 ON t4.PRCD_ID = t1.ID
          LEFT JOIN T_RENT_CONTRACTSCHEMA t6 ON t6.RECT_ID = t4.RECT_ID
          LEFT JOIN T_PUCS_CONTRACT t5 ON t5.PRCD_ID = t1.ID
		 WHERE t1.STATUS = 0
		   AND t1.ID = #PRCD_ID#
		   order by t5.CREATE_TIME desc
		]]>
	</select>
	-->
	<!-- Modify by Michael 2012-3-8 增加虚拟账号 -->
	<select id="getCreditCustNameByID" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ 
		 SELECT 
		 	t3.CUST_NAME,
		 	t3.CUST_CODE,
		 	t3.VIRTUAL_CODE		
		  FROM T_PRJT_CREDIT t1
          LEFT JOIN T_CUST_CUSTOMER t3 ON t3.CUST_ID = t1.CUST_ID
		 WHERE t1.STATUS = 0   AND t1.ID = #PRCD_ID#
		]]>
	</select>	
			
	<!--  只查已复核的信息 -->
	<select id="queryRentContractBackMoney_count" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[ SELECT COUNT(1) FROM (select t.*,tt.PAYCOUNT,tt.PAY_MONEYShenhe,tt.PAY_MONEY,
				(ISNULL(tt1.LEASE_TOPRIC,0) - ISNULL(tt1.PLEDGE_ENTER_AG,0) - ISNULL(tt1.PLEDGE_ENTER_MCTOAG,0)) LEASE_TOPRIC 
				from (
					SELECT T1.ID CREDIT_ID,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T1.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 T5.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE,
						  (case
						 when min(t9.CREATE_TIME) is null
						 then -1
						 when  DATEDIFF(day,min(t9.CREATE_TIME),GETDATE())<=max(t9.VALID_DAY)
						 then 0
						 when DATEDIFF(day,min(t9.CREATE_TIME),GETDATE())>max(t9.VALID_DAY)
						 then 1
						 end
						 ) as timeState,
						  min(t9.CREATE_TIME) CREATE_TIME
			  FROM  T_PRJT_CREDIT T1 
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
			  LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			   left join (
			   select t1.CREATE_TIME,t.CREDIT_ID, pc.VALID_DAY
				from t_prjt_risk_control t
				left join T_PRJT_RISK_CONTROLMEMO t1 on t.PRC_ID=t1.PRC_ID and t1.STATUS=0 and t1.PRCM_LEVEL is null
				left join T_PRJT_CREDIT pc on t.CREDIT_ID = pc.ID and pc.STATUS = 0
				where t.STATUS=0 and t.STATE in (1,2)
			   ) t9 on t9.CREDIT_ID=T1.ID
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS=0 OR T2.STATUS IS NULL) 
			]]>
			<isEqual property="p_usernode" compareValue="1">
				<isEqual prepend="and" property="job" compareValue="8">
					<![CDATA[ (T1.DECP_ID = #decp_id# OR T2.DECP_ID = #decp_id#)]]>		
				</isEqual>
				<isNotEqual prepend="and" property="job" compareValue="8">
					<![CDATA[ T1.sensor_id = #s_employeeId# ]]>	
				</isNotEqual>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T1.SENSOR_ID)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<!-- 2012/02/27 Michael 增加供应商模糊搜索功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%' OR T7.BRAND LIKE '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 T2.LESSOR_TIME&gt;=cast(#QSTART_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 T2.LESSOR_TIME&lt;=cast(#QEND_DATE# as datetime)
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			
		<![CDATA[ GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          T5.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG, 
			          T1.CONTRACT_TYPE) t
			          left join (select t.CREDIT_ID,t.PAYCOUNT,sum(case  when t.STATE=0 or t.STATE=1 then t.PAY_MONEY end) PAY_MONEYShenhe,sum(case  when t.STATE=3 then t.PAY_MONEY end) PAY_MONEY from T_SUPL_PLAYDETIL t where BACKSTATE='0' and STATUS=0 
group by t.CREDIT_ID,t.PAYCOUNT) tt on T.CREDIT_ID=tt.CREDIT_ID
					  left join (select LEASE_TOPRIC,CREDIT_ID,PLEDGE_ENTER_MCTOAG,PLEDGE_ENTER_AG from t_prjt_creditscheme group by LEASE_TOPRIC,CREDIT_ID,PLEDGE_ENTER_MCTOAG,PLEDGE_ENTER_AG) tt1  ON tt1.CREDIT_ID=T.CREDIT_ID
			     ) t
			 ]]>
	</select>
	
	<select id="queryRentContractBackMoney" parameterClass="map" resultClass="java.util.HashMap">
		select pc.ID as CREDIT_ID
		, rc.LESSOR_TIME
		, pc.CREDIT_RUNCODE
		, pc.CONTRACT_TYPE
		, pc.LEASE_CODE
		, cu.CUST_NAME
		, pe.BRAND
		, u.[NAME] as SENSOR_NAME
		, uu.[NAME] as CLERK_NAME
		, dc.DECP_NAME_CN
		, isnull(p.PAY_MONEY,0) as PAY_MONEY
		, isnull(up.PAY_MONEYSHENHE,0) as PAY_MONEYSHENHE
		, (ps.LEASE_TOPRIC - ps.PLEDGE_ENTER_MCTOAG - ps.PLEDGE_ENTER_AG) as LEASE_TOPRIC
		, isnull(pc.DELAY_PAY_STATUS, '0') as DELAY_PAY_STATUS
		, case when datediff(day,ft.FINISH_TIME, getdate()) > pc.VALID_DAY
		  and (ps.LEASE_TOPRIC - ps.PLEDGE_ENTER_MCTOAG - ps.PLEDGE_ENTER_AG) > (isnull(p.PAY_MONEY,0) + isnull(up.PAY_MONEYSHENHE,0))
		  then '1' else '0' end as VALID_STATUS
		, (select count(0) from T_CUST_LINKMAN
			where  CUST_ID = cu.CUST_ID
			and LINK_TYPE = 0) 
			as HAS_LINKMAN
		, ps.ESTIMATES_PAY_DATE
		from T_PRJT_CREDIT pc
		left join T_CUST_CUSTOMER cu on cu.CUST_ID = pc.CUST_ID
		left join T_RENT_CONTRACT rc on rc.PRCD_ID = pc.ID
		left join T_USER_USER u on pc.SENSOR_ID = u.ID
		left join T_USER_USER uu on u.upper_user = uu.ID
		left join T_DEPT_DEPARTMENT dp on u.DEPT_ID = dp.ID
		left join T_DEPT_COMPANY dc on dp.DECP_ID = dc.DECP_ID
		left join T_PRJT_CREDITSCHEME ps on ps.CREDIT_ID = pc.ID
		left join (
		  select max(tpe.BRAND) as BRAND, tpe.CREDIT_ID
		  from T_PRJT_CREDITEQUIPMENT tpe
		  where tpe.EQMT_STATUS = 0
		  group by tpe.CREDIT_ID
		) pe on pe.CREDIT_ID = pc.ID
		left join (
		  select ftr.CREDIT_ID, max(ftr.FINISH_TIME) as FINISH_TIME
		  from T_PRJT_RISK_CONTROL ftr
		  where ftr.STATUS = 0
		  and ftr.STATE = 1
		  group by ftr.CREDIT_ID
		) ft on ft.CREDIT_ID = pc.ID
		left join (
		  select count(0) as pay_count
		  , sum(isnull(pay.PAY_MONEY,0)) as PAY_MONEY
		  , pay.CREDIT_ID 
		  from T_SUPL_PLAYDETIL pay
		  where pay.STATUS = 0
		  and pay.BACKSTATE = 0
		  and pay.STATE = 3
		  group by pay.CREDIT_ID
		)p on p.CREDIT_ID = pc.ID
		left join (
		  select count(0) as unpay_count
		  , sum(isnull(pay.PAY_MONEY,0)) as PAY_MONEYSHENHE
		  , pay.CREDIT_ID
		  from T_SUPL_PLAYDETIL pay
		  where pay.STATUS = 0
		  and pay.BACKSTATE = 0
		  and (pay.STATE = 0 or pay.STATE = 1)
		  group by pay.CREDIT_ID
		)up on up.CREDIT_ID = pc.ID
		
		where pc.STATUS = 0
		and exists (
		  select 0 from T_PRJT_RISK_CONTROL tr
		  where tr.STATUS = 0
		  and tr.STATE = 1
		  and tr.CREDIT_ID = pc.ID
		)
		<isEqual property="p_usernode" compareValue="1">
			<isEqual prepend="and" property="job" compareValue="8">
				<![CDATA[ (u.DECP_ID = #decp_id#)]]>		
			</isEqual>
			<isNotEqual prepend="and" property="job" compareValue="8">
				<![CDATA[ pc.sensor_id = #s_employeeId# ]]>	
			</isNotEqual>
	  	</isEqual>
	  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
		<isEqual prepend="and" property="p_usernode" compareValue="2">
			<![CDATA[	
				exists(select ID from T_USER_USER
				where DEPT_ID in 
				(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
				where uc.USER_ID = #s_employeeId#)
				and ID = pc.SENSOR_ID)
			]]>
		</isEqual>
		<isNotEmpty prepend="and" property="QSEARCH_VALUE">
			<![CDATA[
				(pc.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
				OR cu.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
			  	OR u.NAME LIKE '%$QSEARCH_VALUE$%' 
			  	OR uu.NAME LIKE '%$QSEARCH_VALUE$%' 
			  	OR pe.BRAND LIKE '%$QSEARCH_VALUE$%'
			  	or pc.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%'
			  	or dc.DECP_NAME_CN like '%$QSEARCH_VALUE$%')
			]]>
		</isNotEmpty>
		
		<isNotEmpty prepend="and" property="QSTART_DATE">
			 rc.LESSOR_TIME&gt;=cast(#QSTART_DATE# as datetime) 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="QEND_DATE">
			 rc.LESSOR_TIME&lt;=cast(#QEND_DATE# as datetime) 
		</isNotEmpty>
		<isNotEmpty property="RENTSTAUTS">
	  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
	  		 rc.status=#RENTSTAUTS#
	  	</isNotEqual> 
	  	</isNotEmpty>
	  	<isEqual property="searchStatus" compareValue="2">
	  		and (ps.LEASE_TOPRIC - ps.PLEDGE_ENTER_MCTOAG - ps.PLEDGE_ENTER_AG) > (isnull(p.PAY_MONEY,0) + isnull(up.PAY_MONEYSHENHE,0))
	  	</isEqual>
	  	<isEqual property="searchStatus" compareValue="3">
	  		and (isnull(p.PAY_MONEY,0) + isnull(up.PAY_MONEYSHENHE,0)) >= (ps.LEASE_TOPRIC - ps.PLEDGE_ENTER_MCTOAG - ps.PLEDGE_ENTER_AG) 
	  	</isEqual>
	  	<isEqual property="pcStatus" compareValue="1">
	  		and isnull(pc.DELAY_PAY_STATUS, 0) = 0
	  		<![CDATA[ and datediff(day,ft.FINISH_TIME, getdate()) <= pc.VALID_DAY ]]>
	  	</isEqual>
	  	<isEqual property="pcStatus" compareValue="2">
	  		and datediff(day,ft.FINISH_TIME, getdate()) > pc.VALID_DAY
		  	and (ps.LEASE_TOPRIC - ps.PLEDGE_ENTER_MCTOAG - ps.PLEDGE_ENTER_AG) > (isnull(p.PAY_MONEY,0) + isnull(up.PAY_MONEYSHENHE,0))
	  	</isEqual>
	  	<isEqual property="pcStatus" compareValue="3">
	  		and isnull(pc.DELAY_PAY_STATUS, 0) = -1
	  	</isEqual>
	</select>
	
	<select id="queryRentContractBackMoney_del" parameterClass="map" resultClass="java.util.HashMap">
			<!-- 
		<![CDATA[ 
				select t.*,tt.PAYCOUNT,tt.PAY_MONEYShenhe,tt.PAY_MONEY,
				(ISNULL(tt1.LEASE_TOPRIC,0) - ISNULL(tt1.PLEDGE_ENTER_AG,0) - ISNULL(tt1.PLEDGE_ENTER_MCTOAG,0)) LEASE_TOPRIC 
				from (
					SELECT T1.ID PRCD_ID,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T2.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 T5.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE,
						  (case
						 when min(t9.CREATE_TIME) is null
						 then -1
						 when  DATEDIFF(day,min(t9.CREATE_TIME),GETDATE())<=90
						 then 0
						 when DATEDIFF(day,min(t9.CREATE_TIME),GETDATE())>90
						 then 1
						 end
						 ) as timeState,
						  min(t9.CREATE_TIME) CREATE_TIME
			  FROM  T_RENT_CONTRACT T2 
			  LEFT JOIN T_PRJT_CREDIT T1 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
			  LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			   left join (select t1.CREATE_TIME,t.CREDIT_ID from t_prjt_risk_control t
left join T_PRJT_RISK_CONTROLMEMO t1 on t.PRC_ID=t1.PRC_ID and t1.STATUS=0 and t1.PRCM_LEVEL is null
where t.STATUS=0 and t.STATE in (1,2)) t9 on t9.CREDIT_ID=T1.ID
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS=0 OR T2.STATUS IS NULL) 
  				]]>
  				-->
			<![CDATA[
				select t.*,tt.PAYCOUNT,tt.PAY_MONEYShenhe,tt.PAY_MONEY,
				(ISNULL(tt1.LEASE_TOPRIC,0) - ISNULL(tt1.PLEDGE_ENTER_AG,0) - ISNULL(tt1.PLEDGE_ENTER_MCTOAG,0)) LEASE_TOPRIC 
				from (
					SELECT T1.ID CREDIT_ID,T1.DELAY_PAY_STATUS,
					]]>
					<!--2011/12/22 Yang Yun Add search field has default link man. Start -->
					<![CDATA[
						 (select count(0) from T_CUST_LINKMAN
  							where  CUST_ID in (select CUST_ID from T_PRJT_CREDIT where ID = T1.ID) 
              				and LINK_TYPE = 0) 
						 as HAS_LINKMAN,
						 ]]>
					<!--2011/12/22 Yang Yun Add search field has default link man. End -->
					<![CDATA[
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T1.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 T5.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE,
						  (case
						 when min(t9.CREATE_TIME) is null
						 then -1
						 ]]>
			   	<!-- 2012/02/24 Yang Yun 增加案件期限管理功能.  -->
			   	<!-- when  DATEDIFF(day,min(t9.CREATE_TIME),GETDATE())<=90 -->
				<![CDATA[
						 when  DATEDIFF(day,min(t9.CREATE_TIME),GETDATE()) <= max(t9.VALID_DAY)
						 ]]>
			   	<!-- 2012/02/24 Yang Yun 增加案件期限管理功能.....................................  -->
				<![CDATA[
						 then 0
						 ]]>
			   	<!-- 2012/02/24 Yang Yun 增加案件期限管理功能.  -->
			   	<!-- when DATEDIFF(day,min(t9.CREATE_TIME),GETDATE())>90 -->
				<![CDATA[
						 when DATEDIFF(day,min(t9.CREATE_TIME),GETDATE()) > max(t9.VALID_DAY)
						 ]]>
			   	<!-- 2012/02/24 Yang Yun 增加案件期限管理功能.....................................  -->
				<![CDATA[
						 then 1
						 end
						 ) as timeState,
						  min(t9.CREATE_TIME) CREATE_TIME,
						 T1.CREDIT_RUNCODE
					  FROM  T_PRJT_CREDIT T1 
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  LEFT JOIN T_USER_USER T5 ON T6.upper_user = T5.ID
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			   left join (
			   ]]>
			   	<!-- 2012/02/24 Yang Yun 增加案件期限管理功能.  -->
			   	<!-- select t1.CREATE_TIME,t.CREDIT_ID from t_prjt_risk_control t
				left join T_PRJT_RISK_CONTROLMEMO t1 on t.PRC_ID=t1.PRC_ID and t1.STATUS=0 and t1.PRCM_LEVEL is null
				where t.STATUS=0 and t.STATE in (1,2) -->
				<![CDATA[
				select t1.CREATE_TIME,t.CREDIT_ID, pc.VALID_DAY
				from t_prjt_risk_control t
				left join T_PRJT_RISK_CONTROLMEMO t1 on t.PRC_ID=t1.PRC_ID and t1.STATUS=0 and t1.PRCM_LEVEL is null
				left join T_PRJT_CREDIT pc on t.CREDIT_ID = pc.ID and pc.STATUS = 0
				where t.STATUS=0 and t.STATE in (1,2)
				
				) t9 on t9.CREDIT_ID=T1.ID
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS=0 OR T2.STATUS IS NULL) 
			]]>
			<isEqual property="p_usernode" compareValue="1">
				<isEqual prepend="and" property="job" compareValue="8">
					<![CDATA[ (T1.DECP_ID = #decp_id# OR T2.DECP_ID = #decp_id#)]]>		
				</isEqual>
				<isNotEqual prepend="and" property="job" compareValue="8">
					<![CDATA[ T1.sensor_id = #s_employeeId# ]]>	
				</isNotEqual>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T1.SENSOR_ID)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<!-- 2012/02/27 Michael 增加供应商模糊搜索功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%' OR T7.BRAND LIKE '%$QSEARCH_VALUE$%'
				  or T1.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 T2.LESSOR_TIME&gt;=cast(#QSTART_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 T2.LESSOR_TIME&lt;=cast(#QEND_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			<!-- 
		<![CDATA[ 	GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T2.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          T5.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG, 
			          T1.CONTRACT_TYPE) t
			          left join (select t.RECT_ID,t.PAYCOUNT,sum(case  when t.STATE=0 or t.STATE=1 then t.PAY_MONEY end) PAY_MONEYShenhe,sum(case  when t.STATE=3 then t.PAY_MONEY end) PAY_MONEY from T_SUPL_PLAYDETIL t where BACKSTATE='0' and STATUS=0 
group by t.RECT_ID,t.PAYCOUNT) tt on t.RECT_ID=tt.RECT_ID
					  left join (select LEASE_TOPRIC,CREDIT_ID,PLEDGE_ENTER_MCTOAG,PLEDGE_ENTER_AG from t_prjt_creditscheme group by LEASE_TOPRIC,CREDIT_ID,PLEDGE_ENTER_MCTOAG,PLEDGE_ENTER_AG) tt1  ON tt1.CREDIT_ID=t.PRCD_ID
			    ORDER BY  t.PRCD_ID DESC,t.RECT_STATUS
		]]>
		-->
		<![CDATA[
			GROUP BY T1.ID,T1.DELAY_PAY_STATUS,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          T5.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG, 
			          T1.CONTRACT_TYPE,
			          T1.CREDIT_RUNCODE) t
			          left join (select t.CREDIT_ID,SUM(t.PAYCOUNT) PAYCOUNT,sum(case  when t.STATE=0 or t.STATE=1 then t.PAY_MONEY end) PAY_MONEYShenhe,sum(case  when t.STATE=3 then t.PAY_MONEY end) PAY_MONEY from T_SUPL_PLAYDETIL t where BACKSTATE='0' and STATUS=0 
group by t.CREDIT_ID) tt on T.CREDIT_ID=tt.CREDIT_ID
					  left join (select LEASE_TOPRIC,CREDIT_ID,PLEDGE_ENTER_MCTOAG,PLEDGE_ENTER_AG from t_prjt_creditscheme group by LEASE_TOPRIC,CREDIT_ID,PLEDGE_ENTER_MCTOAG,PLEDGE_ENTER_AG) tt1  ON tt1.CREDIT_ID=T.CREDIT_ID
					  
		]]>
				<isEqual property="searchStatus" compareValue="2">
					where (ISNULL(tt1.LEASE_TOPRIC,0) - ISNULL(tt1.PLEDGE_ENTER_AG,0) - ISNULL(tt1.PLEDGE_ENTER_MCTOAG,0)) > (isnull(tt.PAY_MONEY,0) + isnull(tt.PAY_MONEYShenhe,0))
					and t.TIMESTATE = 0
					and (t.DELAY_PAY_STATUS is null or t.DELAY_PAY_STATUS = 0)
				</isEqual>
				
				<isEqual property="searchStatus" compareValue="3">
					where (isnull(tt.PAY_MONEY,0) + isnull(tt.PAY_MONEYShenhe,0)) >= (ISNULL(tt1.LEASE_TOPRIC,0) - ISNULL(tt1.PLEDGE_ENTER_AG,0) - ISNULL(tt1.PLEDGE_ENTER_MCTOAG,0))
				</isEqual>
	</select>
	
	
	<select id="payMoneyManagerByOne" parameterClass="map" resultClass="java.util.HashMap">
	<!-- 
		<![CDATA[
			select top 1
				t.RECT_ID,
				t.LEASE_CODE,
				t1.CUST_NAME,
				T3.START_DATE,
				T3.LEASE_TOPRIC INIT_LEASE_TOPRIC,
				(ISNULL(T3.LEASE_TOPRIC,0) - ISNULL(T3.PLEDGE_ENTER_MCTOAG,0) - ISNULL(t3.PLEDGE_ENTER_AG,0)) LEASE_TOPRIC,
				T3.LEASE_TOPRIC LEASE_TOPRIC1,
				T3.PLEDGE_REALPRIC,
				T3.PLEDGE_AVE_PRICE,
				T3.PLEDGE_BACK_PRICE,
				T3.PLEDGE_LAST_PRICE,
				T3.PLEDGE_ENTER_CMRATE,
				T3.PLEDGE_ENTER_MCTOAG,
				T3.PLEDGE_ENTER_CMPRICE, 
				T3.PLEDGE_ENTER_AGRATE,
				T3.PLEDGE_ENTER_MCTOAGRATE,
				T3.PAY_WAY,
				t3.INVOICE_PERSON,
				t3.PLEDGE_PRICE,
				t10.PAYINSURANCE,
				t6.NAME,
				getDate() as time,
				t3.PLEDGE_ENTER_AG
			from 
				T_RENT_CONTRACT t 
				LEFT JOIN T_CUST_CUSTOMER T1 ON T.CUST_ID = T1.CUST_ID
				LEFT JOIN T_PRJT_CREDIT T2 ON t.PRCD_ID=T2.ID
				LEFT JOIN t_prjt_creditscheme T3 ON T3.CREDIT_ID=T2.ID
				LEFT JOIN T_PRJT_CREDITEQUIPMENT T4 ON T2.ID = T4.CREDIT_ID
				left join T_SUPL_EQUIPMENT t5 on t4.sueq_id=t5.sueq_id
				left join T_SUPL_SUPPLIER t6 on t5.supplier_id=t6.id
				LEFT JOIN T_SUPL_SUPPLIERBANKACCOUNT T7 ON  T7.SUPL_ID=t6.ID
				left join T_RENT_COLLECTIONPLAN t9 on t9.RECT_ID=t.RECT_ID and t9.STATUS=0
			 	left join (select SUM(INSURE_PRICE) PAYINSURANCE,t10.RECP_ID from T_RENT_COLLECTIONDETAIL t10 where t10.STATUS=0 GROUP BY t10.RECP_ID) t10 on t10.RECP_ID=t9.RECP_ID
			where 
				t.STATUS='0' 
				and T3.STATUS='0' 
				and t.LEASE_CODE=#lease_code#
			group by 
				t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,T3.LEASE_TOPRIC,T3.PLEDGE_REALPRIC,T3.PLEDGE_ENTER_MCTOAG,T3.PLEDGE_AVE_PRICE
			,T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,T3.PLEDGE_ENTER_CMPRICE, T3.PLEDGE_ENTER_AGRATE,T3.PLEDGE_ENTER_MCTOAGRATE,T3.PAY_WAY,t6.NAME,t.RECT_ID,t3.INVOICE_PERSON,t3.PLEDGE_PRICE,t10.PAYINSURANCE,t3.PLEDGE_ENTER_AG
		]]>
		-->
		
		<![CDATA[
		select top 1
				t.ID CREDIT_ID,
				t.LEASE_CODE,
				t1.CUST_NAME,
				T3.START_DATE,
				T3.LEASE_TOPRIC INIT_LEASE_TOPRIC,
				(ISNULL(T3.LEASE_TOPRIC,0) - ISNULL(T3.PLEDGE_ENTER_MCTOAG,0) - ISNULL(t3.PLEDGE_ENTER_AG,0)) LEASE_TOPRIC,
				T3.LEASE_TOPRIC LEASE_TOPRIC1,
				T3.PLEDGE_REALPRIC,
				T3.PLEDGE_AVE_PRICE,
				T3.PLEDGE_BACK_PRICE,
				T3.PLEDGE_LAST_PRICE,
				T3.PLEDGE_ENTER_CMRATE,
				T3.PLEDGE_ENTER_MCTOAG,
				T3.PLEDGE_ENTER_CMPRICE, 
				T3.PLEDGE_ENTER_AGRATE,
				T3.PLEDGE_ENTER_MCTOAGRATE,
				T3.PAY_WAY,
				t3.INVOICE_PERSON,
				t3.PLEDGE_PRICE,
				t10.PAYINSURANCE,
				t6.NAME,
				getDate() as time,
				t3.PLEDGE_ENTER_AG,
				t6.NET_PAY,t.LESSOR_TIME
				, T3.ESTIMATES_PAY_DATE
			from 
				T_PRJT_CREDIT t 
				LEFT JOIN T_CUST_CUSTOMER T1 ON T.CUST_ID = T1.CUST_ID
				LEFT JOIN T_RENT_CONTRACT T2 ON T.ID = T2.PRCD_ID
				LEFT JOIN t_prjt_creditscheme T3 ON T3.CREDIT_ID=T.ID
				LEFT JOIN T_PRJT_CREDITEQUIPMENT T4 ON T.ID = T4.CREDIT_ID
				left join T_SUPL_EQUIPMENT t5 on t4.sueq_id=t5.sueq_id
				left join T_SUPL_SUPPLIER t6 on t5.supplier_id=t6.id
				LEFT JOIN T_SUPL_SUPPLIERBANKACCOUNT T7 ON  T7.SUPL_ID=t6.ID
				left join T_RENT_COLLECTIONPLAN t9 on t9.RECT_ID=t2.RECT_ID and t9.STATUS=0
			 	left join (select SUM(INSURE_PRICE) PAYINSURANCE,t10.RECP_ID from T_RENT_COLLECTIONDETAIL t10 where t10.STATUS=0 GROUP BY t10.RECP_ID) t10 on t10.RECP_ID=t9.RECP_ID
			where 
				t.STATUS='0' 
				and T3.STATUS='0' 
				and t.LEASE_CODE=#lease_code#
			group by 
				t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,T3.LEASE_TOPRIC,T3.PLEDGE_REALPRIC,T3.PLEDGE_ENTER_MCTOAG,T3.PLEDGE_AVE_PRICE
			,T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,T3.PLEDGE_ENTER_CMPRICE, T3.PLEDGE_ENTER_AGRATE,T3.PLEDGE_ENTER_MCTOAGRATE,T3.PAY_WAY,t6.NAME,t.ID,t3.INVOICE_PERSON,t3.PLEDGE_PRICE,t10.PAYINSURANCE,t3.PLEDGE_ENTER_AG,t6.NET_PAY,
			t.LESSOR_TIME, T3.ESTIMATES_PAY_DATE
		]]>
	</select>
	
	
	<select id="payMoneyManagerByOne1" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select 
				t.RECT_ID,
				t.LEASE_CODE,
				t1.CUST_NAME,
				T3.START_DATE,
				T3.LEASE_TOPRIC INIT_LEASE_TOPRIC,
				(ISNULL(T3.LEASE_TOPRIC,0) - ISNULL(T3.PLEDGE_ENTER_MCTOAG,0) - ISNULL(t3.PLEDGE_ENTER_AG,0)) LEASE_TOPRIC,
				T3.LEASE_TOPRIC LEASE_TOPRIC1,
				T3.PLEDGE_REALPRIC,
				T3.PLEDGE_AVE_PRICE,
				T3.PLEDGE_BACK_PRICE,
				T3.PLEDGE_LAST_PRICE,
				T3.PLEDGE_ENTER_CMRATE,
				T3.PLEDGE_ENTER_MCTOAG,
				t3.INVOICE_PERSON,
				t3.PLEDGE_PRICE,
				t10.PAYINSURANCE,
				t6.NAME,
				getDate() as time,
				t3.PLEDGE_ENTER_AG,t.LESSOR_TIME
			from 
				T_RENT_CONTRACT t 
				LEFT JOIN T_CUST_CUSTOMER T1 ON T.CUST_ID = T1.CUST_ID
				LEFT JOIN T_PRJT_CREDIT T2 ON t.PRCD_ID=T2.ID
				LEFT JOIN t_prjt_creditscheme T3 ON T3.CREDIT_ID=T2.ID
				LEFT JOIN T_PRJT_CREDITEQUIPMENT T4 ON T2.ID = T4.CREDIT_ID
				left join T_SUPL_EQUIPMENT t5 on t4.sueq_id=t5.sueq_id
				left join T_SUPL_SUPPLIER t6 on t5.supplier_id=t6.id
				LEFT JOIN T_SUPL_SUPPLIERBANKACCOUNT T7 ON  T7.SUPL_ID=t6.ID
				left join T_RENT_COLLECTIONPLAN t9 on t9.RECT_ID=t.RECT_ID and t9.STATUS=0
			 	left join (select SUM(INSURE_PRICE) PAYINSURANCE,t10.RECP_ID from T_RENT_COLLECTIONDETAIL t10 where t10.STATUS=0 GROUP BY t10.RECP_ID) t10 on t10.RECP_ID=t9.RECP_ID
			where 
				t.STATUS='0' 
				and T3.STATUS='0' 
				and t.LEASE_CODE=#lease_code#
			group by 
				t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,T3.LEASE_TOPRIC,T3.PLEDGE_REALPRIC,T3.PLEDGE_ENTER_MCTOAG,T3.PLEDGE_AVE_PRICE
			,T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,t6.NAME,t.RECT_ID,t3.INVOICE_PERSON,t3.PLEDGE_PRICE,t10.PAYINSURANCE,t3.PLEDGE_ENTER_AG,
			t.LESSOR_TIME
		]]>
	</select>
	
	<select id="payMoneyManagerByOne_2" parameterClass="map" resultClass="java.util.HashMap">
	<!-- 
		<![CDATA[
			select top 1 	t.RECT_ID,
					t.LEASE_CODE,
					t1.CUST_NAME,
					T3.START_DATE,
					T3.LEASE_TOPRIC,
					T3.PLEDGE_REALPRIC,
					T3.PLEDGE_AVE_PRICE
					,T3.PLEDGE_BACK_PRICE PLEDGE_BACK_PRICE,
					T3.PLEDGE_LAST_PRICE,
					T3.PLEDGE_ENTER_CMRATE,
					T3.PLEDGE_ENTER_MCTOAG,
					T3.PLEDGE_ENTER_CMPRICE,
					t3.INVOICE_PERSON,
					t3.PLEDGE_PRICE,
					t10.PAYINSURANCE,
					t6.NAME,
					getDate() as time
					,t3.PLEDGE_ENTER_AG,T3.PLEDGE_ENTER_MCTOAGRATE,tt2.PLEDGE_BACK_PRICE IS_PLEDGE_BACK_PRICE
			from T_RENT_CONTRACT t 
			LEFT JOIN T_CUST_CUSTOMER T1 ON T.CUST_ID = T1.CUST_ID
			LEFT JOIN T_PRJT_CREDIT T2 ON t.PRCD_ID=T2.ID
			LEFT JOIN t_prjt_creditscheme T3 ON T3.CREDIT_ID=T2.ID
			LEFT JOIN T_PRJT_CREDITEQUIPMENT T4 ON T2.ID = T4.CREDIT_ID
			left join T_SUPL_EQUIPMENT t5 on t4.sueq_id=t5.sueq_id
			left join T_SUPL_SUPPLIER t6 on t5.supplier_id=t6.id
			LEFT JOIN T_SUPL_SUPPLIERBANKACCOUNT T7 ON  T7.SUPL_ID=t6.ID
			left join T_RENT_COLLECTIONPLAN t9 on t9.RECT_ID=t.RECT_ID and t9.STATUS=0
			 left join (select SUM(INSURE_PRICE) PAYINSURANCE,t10.RECP_ID from T_RENT_COLLECTIONDETAIL t10 where t10.STATUS=0 GROUP BY t10.RECP_ID) t10 on t10.RECP_ID=t9.RECP_ID
			]]>
			<![CDATA[
			left join (
						select isnull(PLEDGE_BACK_PRICE,0) PLEDGE_BACK_PRICE,CREDIT_ID from T_PRJT_CREDITSCHEME 
							where STATUS=0 and CREDIT_ID in (
									(
									select ID CREDIT_ID from t_prjt_credit t1
									left join T_RENT_CONTRACT t2 on t2.PRCD_ID=t1.ID
									left join T_RENT_COLLECTIONPLAN t3 on t3.RECT_ID=t2.RECT_ID
									where t1.STATUS=0 and t2.STATUS=0 and t3.STATUS=0
										and t3.RECP_ID in (select RECP_ID from T_RENT_SETTLE where STATUS=0)
									)
								union
									(
										select ID CREDIT_ID from t_prjt_credit t1
										left join T_PRJT_CREDITSCHEME t4 on t4.CREDIT_ID=t1.ID
										left join T_RENT_CONTRACT t2 on t2.PRCD_ID=t1.ID
										left join T_RENT_COLLECTIONPLAN t3 on t3.RECT_ID=t2.RECT_ID
										left join(
											select COUNT(recp_id) num,RECP_ID from (
											select SUM(real_price) sum_real_price,RECD_PERIOD,FICB_ITEM,RECP_ID from t_fina_collectionbill where STATUS=0  and FICB_STATE=5 group by RECD_PERIOD,FICB_ITEM,RECP_ID
											) as t where t.sum_real_price!=0 and FICB_ITEM=#zj# group by RECP_ID
										) tt on tt.RECP_ID=t3.RECP_ID
										where tt.num>=t4.LEASE_TERM-1	
									)
								)
					
					) tt2 on tt2.CREDIT_ID=t.PRCD_ID
			
			where t.STATUS='0' and T3.STATUS='0' and t.LEASE_CODE=#lease_code#
			group by t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,T3.LEASE_TOPRIC,T3.PLEDGE_REALPRIC,T3.PLEDGE_ENTER_MCTOAG,T3.PLEDGE_AVE_PRICE
			,T3.PLEDGE_ENTER_CMPRICE,T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,t6.NAME,t.RECT_ID,t3.INVOICE_PERSON,t3.PLEDGE_PRICE,t10.PAYINSURANCE,t3.PLEDGE_ENTER_AG,T3.PLEDGE_ENTER_MCTOAGRATE,tt2.PLEDGE_BACK_PRICE
			]]>
			 -->
			 <![CDATA[
			 select top 1 	t.ID CREDIT_ID,
					t.LEASE_CODE,
					t1.CUST_NAME,
					T3.START_DATE,
					T3.LEASE_TOPRIC,
					T3.PLEDGE_REALPRIC,
					T3.PLEDGE_AVE_PRICE
					,T3.PLEDGE_BACK_PRICE PLEDGE_BACK_PRICE,
					T3.PLEDGE_LAST_PRICE,
					T3.PLEDGE_ENTER_CMRATE,
					T3.PLEDGE_ENTER_MCTOAG,
					T3.PLEDGE_ENTER_CMPRICE,
					t3.INVOICE_PERSON,
					t3.PLEDGE_PRICE,
					t10.PAYINSURANCE,
					t6.NAME,
					getDate() as time
					,t3.PLEDGE_ENTER_AG,T3.PLEDGE_ENTER_MCTOAGRATE,tt2.PLEDGE_BACK_PRICE IS_PLEDGE_BACK_PRICE,t.LESSOR_TIME
			from T_PRJT_CREDIT t 
			LEFT JOIN T_CUST_CUSTOMER T1 ON T.CUST_ID = T1.CUST_ID
			LEFT JOIN T_RENT_CONTRACT T2 ON t.ID=T2.PRCD_ID
			LEFT JOIN t_prjt_creditscheme T3 ON T3.CREDIT_ID=T.ID
			LEFT JOIN T_PRJT_CREDITEQUIPMENT T4 ON T.ID = T4.CREDIT_ID
			left join T_SUPL_EQUIPMENT t5 on t4.sueq_id=t5.sueq_id
			left join T_SUPL_SUPPLIER t6 on t5.supplier_id=t6.id
			LEFT JOIN T_SUPL_SUPPLIERBANKACCOUNT T7 ON  T7.SUPL_ID=t6.ID
			left join T_RENT_COLLECTIONPLAN t9 on t9.RECT_ID=t2.RECT_ID and t9.STATUS=0
			 left join (select SUM(INSURE_PRICE) PAYINSURANCE,t10.RECP_ID from T_RENT_COLLECTIONDETAIL t10 where t10.STATUS=0 GROUP BY t10.RECP_ID) t10 on t10.RECP_ID=t9.RECP_ID
			
			left join (
						select isnull(PLEDGE_BACK_PRICE,0) PLEDGE_BACK_PRICE,CREDIT_ID from T_PRJT_CREDITSCHEME 
							where STATUS=0 and CREDIT_ID in (
									(
									select ID CREDIT_ID from t_prjt_credit t1
									left join T_RENT_CONTRACT t2 on t2.PRCD_ID=t1.ID
									left join T_RENT_COLLECTIONPLAN t3 on t3.RECT_ID=t2.RECT_ID
									where t1.STATUS=0 and t2.STATUS=0 and t3.STATUS=0
										and t3.RECP_ID in (select RECP_ID from T_RENT_SETTLE where STATUS=0)
									)
								union
									(
										select ID CREDIT_ID from t_prjt_credit t1
										left join T_PRJT_CREDITSCHEME t4 on t4.CREDIT_ID=t1.ID
										left join T_RENT_CONTRACT t2 on t2.PRCD_ID=t1.ID
										left join T_RENT_COLLECTIONPLAN t3 on t3.RECT_ID=t2.RECT_ID
										left join(
											select COUNT(recp_id) num,RECP_ID from (
											select SUM(real_price) sum_real_price,RECD_PERIOD,FICB_ITEM,RECP_ID from t_fina_collectionbill where STATUS=0  and FICB_STATE=5 group by RECD_PERIOD,FICB_ITEM,RECP_ID
											) as t where t.sum_real_price!=0 and FICB_ITEM=#zj# group by RECP_ID
										) tt on tt.RECP_ID=t3.RECP_ID
										where tt.num>=t4.LEASE_TERM-1	
									)
								)
					
					) tt2 on tt2.CREDIT_ID=T.ID
			
			where t.STATUS='0' and T3.STATUS='0' and t.LEASE_CODE=#lease_code#
			group by t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,T3.LEASE_TOPRIC,T3.PLEDGE_REALPRIC,T3.PLEDGE_ENTER_MCTOAG,T3.PLEDGE_AVE_PRICE
			,T3.PLEDGE_ENTER_CMPRICE,T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,t6.NAME,t.ID,t3.INVOICE_PERSON,t3.PLEDGE_PRICE,t10.PAYINSURANCE,t3.PLEDGE_ENTER_AG,T3.PLEDGE_ENTER_MCTOAGRATE,tt2.PLEDGE_BACK_PRICE,
			t.LESSOR_TIME
			 ]]>
	</select>	
	
	<select id="payMoneyBankManagerByOne" parameterClass="map" resultClass="java.util.HashMap">
		<!-- 
		<![CDATA[
			select t7.bank_name,t7.bank_account,t7.state,t7.STATUS,t7.PCCBA_ID
from T_RENT_CONTRACT t 
LEFT JOIN T_CUST_CUSTOMER T1 ON T.CUST_ID = T1.CUST_ID
LEFT JOIN T_PRJT_CREDIT T2 ON t.PRCD_ID=T2.ID
LEFT JOIN t_prjt_creditscheme T3 ON T3.CREDIT_ID=T2.ID
LEFT JOIN T_PRJT_CREDITEQUIPMENT T4 ON T2.ID = T4.CREDIT_ID
left join T_SUPL_EQUIPMENT t5 on t4.sueq_id=t5.sueq_id
left join T_SUPL_SUPPLIER t6 on t5.supplier_id=t6.id
LEFT JOIN T_SUPL_SUPPLIERBANKACCOUNT T7 ON  T7.SUPL_ID=t6.ID
where t.STATUS='0' and T3.STATUS='0' and t.LEASE_CODE=#lease_code#
group by t7.bank_name,t7.bank_account,t7.state,t7.STATUS,t7.PCCBA_ID
		]]>
		-->
		<![CDATA[
		select t7.bank_name,t7.bank_account,t7.state,t7.STATUS,t7.PCCBA_ID,t.LESSOR_TIME
		from T_PRJT_CREDIT t 
			LEFT JOIN T_CUST_CUSTOMER T1 ON T.CUST_ID = T1.CUST_ID
			LEFT JOIN t_prjt_creditscheme T3 ON T3.CREDIT_ID=T.ID
			LEFT JOIN T_PRJT_CREDITEQUIPMENT T4 ON T.ID = T4.CREDIT_ID
			left join T_SUPL_EQUIPMENT t5 on t4.sueq_id=t5.sueq_id
			left join T_SUPL_SUPPLIER t6 on t5.supplier_id=t6.id
			LEFT JOIN T_SUPL_SUPPLIERBANKACCOUNT T7 ON  T7.SUPL_ID=t6.ID
		where t.STATUS='0' and T3.STATUS='0' and t.LEASE_CODE=#lease_code#
		group by t7.bank_name,t7.bank_account,t7.state,t7.STATUS,t7.PCCBA_ID,t.LESSOR_TIME
		]]>
	</select>
	
	<!--  查询该合同的预付款(设备) -->
	<select id="payMoneyBankManagerByRECTID" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select t.PAY_MONEY from T_SUPL_PLAYDETIL t where t.CREDIT_ID=#CREDIT_ID# and t.status=0 and backState='0' and t.state=3
		]]>
	</select>
	
	<!--  查询该合同的预付款(保证金) -->
	<select id="payMoneyBankManagerByRECTIDByMargin" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select t.PAY_MONEY from T_SUPL_PLAYDETIL t where t.CREDIT_ID=#CREDIT_ID# and t.status=0 and backState='1' and t.state=3
		]]>
	</select>
	
	<!--  查询该合同的预付款(保证金) -->
	<select id="payMoneyBankManagerByRECTIDByInsurance" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select t.PAY_MONEY from T_SUPL_PLAYDETIL t where t.CREDIT_ID=#CREDIT_ID# and t.status=0 and backState='2' and t.state=3
		]]>
	</select>
	
	<!-- 新增一条付款记录 -->
	<!-- Modify by Michael 2012 08-01 增加交机前后Flag -->
 	<insert id="createPayMoneyManager" parameterClass="map">
		<![CDATA[
			insert into T_SUPL_PLAYDETIL
			  (CREDIT_ID,PAY_DATE, APPLICATION_DATE, PAY_MONEY, PAY_WAY, CREATE_DATE, CREATE_ID, 
			  MODIFY_DATE, MODIFY_ID, STATUS,PCCBA_ID,BANK_NAME,BANK_ACCOUNT,PAYCOUNT,PAYED,STATE,
			  BACKTYPE,BACKSTATE,BACKCOMP,EXPECTEDDATE,ADVANCE_FLAG,ENDORSER_1,ENDORSER_2,CHEQUE_TIME,REMARK,FSS_ID,EXPRESS,EXPRESS_PAY_WAY)
			values
			  (#CREDIT_ID#,#pay_Date#,convert(datetime,convert(varchar,(#application_date#),23)),#pay_money#,
			  #pay_way#,convert(datetime,convert(varchar,(getdate()),23)),#id#,convert(datetime,convert(varchar,(getdate()),23)),
			  #id#,0,#pccba_id#,#bank_name#,#bank_account#,#paycount#,#payed#,#state#,#backtype#,#backState#,#payByName#,
			  #expecteddate#,#ADVANCE_FLAG#,#endorser_1#,#endorser_2#,
		]]>
		<isNotEmpty property="CHEQUE_TIME">
			  convert(date,#CHEQUE_TIME#),
		</isNotEmpty>
		<isEmpty property="CHEQUE_TIME">
			  NULL,
		</isEmpty>
		<![CDATA[
			  #remart#,#FSS_ID#,#express#,#express_pay_way#)
		]]>
		<selectKey resultClass="java.lang.Long" keyProperty="PAY_ID">
			<![CDATA[SELECT @@IDENTITY AS PAY_ID]]>
		</selectKey>
	</insert>
	
	<!-- 修改一条付款记录 -->
	<update id="updatePayMoneyManager" parameterClass="map">
		update T_SUPL_PLAYDETIL SET
			APPLICATION_DATE=convert(datetime,convert(varchar,(#application_date#),23)),
			PAY_MONEY=#pay_money#,
			PAY_WAY=#pay_way#,
			MODIFY_DATE=convert(datetime,convert(varchar,(getdate()),23)),
			MODIFY_ID=#id#,
			EXPECTEDDATE=#expecteddate#,
			BACKCOMP=#payByName#,
			PCCBA_ID=#pccba_id#,
			BANK_NAME=#bank_name#,
			BANK_ACCOUNT=#bank_account#,
			PAYCOUNT=#paycount#,
			PAYED=#payed#,
			BACKTYPE=#backtype#
		where ID=#payMoneyId#
	</update>
	
	<select id="queryPayById" parameterClass="map" resultClass="java.util.HashMap">
		select * from T_SUPL_PLAYDETIL where ID=#payMoneyId#
	</select>
	
	<!-- 新增一条付款记录 -->
 	<insert id="createPayMoneyManagerByInsurance" parameterClass="map">
		<![CDATA[
			insert into T_SUPL_PLAYDETIL
			  ( APPLICATION_DATE, PAY_MONEY, PAY_WAY, CREATE_DATE, CREATE_ID, MODIFY_DATE, MODIFY_ID, STATUS,BANK_NAME,BANK_ACCOUNT,PAYCOUNT,PAYED,STATE,BACKSTATE,BACKCOMP,EXPECTEDDATE
			  	,COMPANY_CODE
			  )
			values
			  (convert(datetime,convert(varchar,(#application_date#),23)),#pay_money#,
			  #pay_way#,convert(datetime,convert(varchar,(getdate()),23)),#id#,convert(datetime,convert(varchar,(getdate()),23)),#id#,0,#bank_name#,#bank_account#,#pay_money#
			  ,#pay_money#,0,3,#payByName#,#expecteddate#
			  ,#companyCode#
			  )
		]]>
		<selectKey resultClass="java.lang.Long" keyProperty="ID">
			<![CDATA[	select @@IDENTITY as ID  ]]>
		</selectKey>
	</insert>
	
	<!-- 插入保单和付款表中间表 -->
	<insert id="createPayMoneyInsuranceJoin" parameterClass="map">
		<![CDATA[
			insert into T_PAY_INC_JOIN (PAYMONEYID,INCID) values(#numId#,#insu_id#)
		]]>
		<selectKey resultClass="java.lang.Long" keyProperty="ID">
			<![CDATA[	select @@IDENTITY as ID  ]]>
		</selectKey>
	</insert>
	
	
	<!-- 根据合同Id查询出该合同的支付信息 (and t.STATE='3') -->
	<select id="payMoneyByRect_ID" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select t.ID,t.CREDIT_ID, t.PAY_DATE, t.APPLICATION_DATE, t.PAY_MONEY, t.PAY_WAY, t.CREATE_DATE,t.BACKSTATE, 
			t.CREATE_ID, t.MODIFY_DATE, t.MODIFY_ID, t.STATUS,t.PCCBA_ID,t.BANK_NAME,t.BANK_ACCOUNT,t.PAYCOUNT,PAYED,t1.FLAG,t.STATE,FINANCIALSTATUS,DEPARTMENTSTATUS
			 from T_SUPL_PLAYDETIL t
			 left join T_DATA_DICTIONARY t1 on t.PAY_WAY=t1.CODE AND T1.TYPE=#dataType# AND T1.STATUS = 0
			 where t.CREDIT_ID=#CREDIT_ID# and (t.status=0 or t.status=1) and t.BACKSTATE=#NUM#
			 order by t.PAY_DATE,t.CREATE_DATE
		]]>
	</select>
	
	
	
	<select id="payMoneyManagerToPdf" parameterClass="map" resultClass="java.util.HashMap">
	<!-- 
		<![CDATA[
		select top 1
				T12.HEAD_HIRE QIANAPPRORIATEMON,t.RECT_ID,t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,
				T3.LEASE_TOPRIC INIT_LEASE_TOPRIC,
				(ISNULL(T3.LEASE_TOPRIC,0) - ISNULL(T3.PLEDGE_ENTER_MCTOAG,0) - ISNULL(t3.PLEDGE_ENTER_AG,0)) LEASE_TOPRIC,
				T3.PLEDGE_REALPRIC,T3.PLEDGE_AVE_PRICE,T2.contract_type,
				T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,T3.PLEDGE_ENTER_MCTOAG,T3.PLEDGE_ENTER_AGRATE,T3.PLEDGE_ENTER_MCTOAGRATE,T12.PAY_WAY,t6.NAME,getDate() as time,T8.ID,T8.APPLICATION_DATE,T8.STATE T8STATE,
				T8.BANK_ACCOUNT,T8.BACKCOMP,T8.BANK_NAME,T8.PAY_DATE,T8.PAY_MONEY,T8.PAY_WAY,T8.PAYCOUNT,T8.PAYED,T9.FLAG,T8.BACKSTATE,T8.BACKTYPE,T8.EXPECTEDDATE,t10.TYPE qianType,t11.TYPE houType,t11.APPRORIATEMON houAPPRORIATEMON,T3.PLEDGE_ENTER_CMPRICE,T3.PLEDGE_ENTER_AG
		from 	
				T_RENT_CONTRACT t 
				LEFT JOIN T_CUST_CUSTOMER T1 ON T.CUST_ID = T1.CUST_ID
				LEFT JOIN T_PRJT_CREDIT T2 ON t.PRCD_ID=T2.ID
				LEFT JOIN t_prjt_creditscheme T3 ON T3.CREDIT_ID=T2.ID
				LEFT JOIN T_PRJT_CREDITEQUIPMENT T4 ON T2.ID = T4.CREDIT_ID
				left join T_SUPL_EQUIPMENT t5 on t4.sueq_id=t5.sueq_id
				left join T_SUPL_SUPPLIER t6 on t5.supplier_id=t6.id
				LEFT JOIN T_SUPL_SUPPLIERBANKACCOUNT T7 ON  T7.SUPL_ID=t6.ID
				LEFT JOIN T_SUPL_PLAYDETIL T8 ON  T8.RECT_ID=t.RECT_ID
				LEFT JOIN T_DATA_DICTIONARY T9 ON  T8.PAY_WAY=T9.DATA_ID
				LEFT join (select credit_id,TYPE,APPRORIATEMON from T_PRJT_CREDITAPPROPIATE where STATUS=0 and TYPE=0) t10 on t10.CREDIT_ID=T2.ID
				LEFT join (select credit_id,TYPE,APPRORIATEMON from T_PRJT_CREDITAPPROPIATE where STATUS=0 and TYPE=1) t11 on t11.CREDIT_ID=T2.ID
				LEFT JOIN T_RENT_CONTRACTSCHEMA T12 ON T12.RECT_ID = T.RECT_ID AND T12.STATUS = 0
		where
				 t.STATUS='0' 
				 and T3.STATUS='0' 
				 and t.RECT_ID=#RECT_ID# 
				 and T8.ID=#payMoneyId#
		group by
				t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,T3.LEASE_TOPRIC,T3.PLEDGE_REALPRIC,T3.PLEDGE_AVE_PRICE
				,T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,T3.PLEDGE_ENTER_MCTOAG,T3.PLEDGE_ENTER_AGRATE,T3.PLEDGE_ENTER_MCTOAGRATE,T12.PAY_WAY,t6.NAME,t.RECT_ID,T8.ID,T8.APPLICATION_DATE,
				T8.BANK_ACCOUNT,T8.BACKCOMP,T8.BANK_NAME,T8.PAY_DATE,T8.PAY_MONEY,T8.PAY_WAY,T8.PAYCOUNT,T8.PAYED,T9.FLAG,T8.BACKSTATE,T8.BACKTYPE,T8.EXPECTEDDATE,T2.contract_type,t10.TYPE,t11.TYPE,t11.APPRORIATEMON,T8.STATE,
				T3.PLEDGE_ENTER_MCTOAG,T3.PLEDGE_ENTER_AG,T3.PLEDGE_ENTER_CMPRICE,T12.HEAD_HIRE
		]]>
		 -->
		 <!-- Modify by Michael 2012 09-03 增加办事处ID -->
		 <![CDATA[
		 select top 1
				T3.HEAD_HIRE QIANAPPRORIATEMON,T2.RECT_ID,t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,
				T3.LEASE_TOPRIC INIT_LEASE_TOPRIC,
				(ISNULL(T3.LEASE_TOPRIC,0) - ISNULL(T3.PLEDGE_ENTER_MCTOAG,0) - ISNULL(t3.PLEDGE_ENTER_AG,0)) LEASE_TOPRIC,
				T3.PLEDGE_REALPRIC,T3.PLEDGE_AVE_PRICE,T.contract_type,
				T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,T3.PLEDGE_ENTER_MCTOAG,T3.PLEDGE_ENTER_AGRATE,T3.PLEDGE_ENTER_MCTOAGRATE,T3.PAY_WAY,t6.NAME,getDate() as time,T8.ID,T8.APPLICATION_DATE,T8.STATE T8STATE,
				T8.BANK_ACCOUNT,T8.BACKCOMP,T8.BANK_NAME,T8.PAY_DATE,T8.PAY_MONEY,T8.PAY_WAY SUPL_PAY_WAY,T8.PAYCOUNT,T8.PAYED,T9.FLAG,T8.BACKSTATE,T8.BACKTYPE,T8.EXPECTEDDATE,t10.TYPE qianType,t11.TYPE houType,t11.APPRORIATEMON houAPPRORIATEMON,T3.PLEDGE_ENTER_CMPRICE,T3.PLEDGE_ENTER_AG
				,tdc.DECP_ID,tpgp.ADVANCEMACHINE_GRANT_PRICE,t3.LEASE_TERM LEASE_PERIOD, t3.TOTAL_VALUEADDED_TAX,t3.TAX_PLAN_CODE
				,T8.ENDORSER_1,T8.ENDORSER_2,T8.CHEQUE_TIME,T8.REMARK,T3.PLEDGE_LAST_PRICE_TAX,TUPER.NAME DEPARTMENT_USER_NAME,TUSER.NAME USER_NAME,convert(varchar,T8.MODIFY_DATE,23) MODIFY_DATE,convert(varchar,T8.DEPARTMENT_DATE,23) DEPARTMENT_DATE
				,T3.INCOME_PAY,T3.DEFER_PERIOD
		from 	
				T_PRJT_CREDIT t 
				LEFT JOIN T_CUST_CUSTOMER T1 ON T.CUST_ID = T1.CUST_ID
				LEFT JOIN T_RENT_CONTRACT T2 ON t2.PRCD_ID=T.ID
				LEFT JOIN t_prjt_creditscheme T3 ON T3.CREDIT_ID=T.ID
				LEFT JOIN T_PRJT_CREDITEQUIPMENT T4 ON T.ID = T4.CREDIT_ID
				left join T_SUPL_EQUIPMENT t5 on t4.sueq_id=t5.sueq_id
				left join T_SUPL_SUPPLIER t6 on t5.supplier_id=t6.id
				LEFT JOIN T_SUPL_SUPPLIERBANKACCOUNT T7 ON  T7.SUPL_ID=t6.ID
				LEFT JOIN T_SUPL_PLAYDETIL T8 ON  T8.CREDIT_ID=T.ID
				LEFT JOIN T_DATA_DICTIONARY T9 ON  T8.PAY_WAY=T9.DATA_ID
				left join T_USER_USER tuu on T.SENSOR_ID = tuu.ID
				LEFT JOIN T_USER_USER TUPER on TUPER.ID=T8.DEPARTMENT_USER_ID
				LEFT JOIN T_USER_USER TUSER on TUSER.ID=t8.MODIFY_ID
				left join T_DEPT_DEPARTMENT dept on dept.ID = tuu.DEPT_ID and dept.STATUS = 0
				left join T_DEPT_COMPANY tdc on dept.DECP_ID = tdc.DECP_ID and tdc.STATUS = 0
				LEFT join (select credit_id,TYPE,APPRORIATEMON from T_PRJT_CREDITAPPROPIATE where STATUS=0 and TYPE=0) t10 on t10.CREDIT_ID=T.ID
				LEFT join (select credit_id,TYPE,APPRORIATEMON from T_PRJT_CREDITAPPROPIATE where STATUS=0 and TYPE=1) t11 on t11.CREDIT_ID=T.ID
				LEFT JOIN T_RENT_CONTRACTSCHEMA T12 ON T12.RECT_ID = T2.RECT_ID AND T12.STATUS = 0
				left join T_PRODUCT_GRANTPLAN tpgp on t6.id=tpgp.PRODUCT_ID and tpgp.status=0 and tpgp.CUGP_STATUS=0
		where
				 t.STATUS='0' 
				 and T3.STATUS='0' 
				 and t.ID=#CREDIT_ID# 
				 and T8.ID=#payMoneyId#
		group by
				t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,T3.LEASE_TOPRIC,T3.PLEDGE_REALPRIC,T3.PLEDGE_AVE_PRICE
				,T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,T3.PLEDGE_ENTER_MCTOAG,T3.PLEDGE_ENTER_AGRATE,T3.PLEDGE_ENTER_MCTOAGRATE,T3.PAY_WAY,t6.NAME,t2.RECT_ID,T8.ID,T8.APPLICATION_DATE,
				T8.BANK_ACCOUNT,T8.BACKCOMP,T8.BANK_NAME,T8.PAY_DATE,T8.PAY_MONEY,T8.PAY_WAY,T8.PAYCOUNT,T8.PAYED,T9.FLAG,T8.BACKSTATE,T8.BACKTYPE,T8.EXPECTEDDATE,T.contract_type,t10.TYPE,t11.TYPE,t11.APPRORIATEMON,T8.STATE,
				T3.PLEDGE_ENTER_MCTOAG,T3.PLEDGE_ENTER_AG,T3.PLEDGE_ENTER_CMPRICE,T3.HEAD_HIRE,tdc.DECP_ID,tpgp.ADVANCEMACHINE_GRANT_PRICE,t3.LEASE_TERM, t3.TOTAL_VALUEADDED_TAX,t3.TAX_PLAN_CODE
				,T8.ENDORSER_1,T8.ENDORSER_2,T8.CHEQUE_TIME,T8.REMARK,T3.PLEDGE_LAST_PRICE_TAX,tuu.NAME,TUPER.NAME,T8.DEPARTMENT_DATE,T8.MODIFY_DATE,TUSER.NAME,T3.INCOME_PAY,T3.DEFER_PERIOD
		 ]]>
	</select>
	<!-- Add by Michael 2012 10-12 抓取已核准未拨款交机前拨款 总金额 -->
	<select id="payMoneyManagerAdvanceToPdf" parameterClass="map" resultClass="java.util.HashMap">	
		<![CDATA[ 
			select sum(tpca.APPRORIATEMON) SUM_APPRORIATEMON from t_prjt_credit tpc
			left join T_PRJT_CREDITAPPROPIATE tpca on tpc.id=tpca.CREDIT_ID and tpca.TYPE='0'
			where tpc.WIND_STATE='1' and tpc.FINANCECONTRACT_DATE is null
			and tpca.APPRORIATENAME=#BACKCOMP#
		 ]]>
	</select>
	
	<!-- 2012/02/09 Yang Yun 查询费用. -->
	<select id="getFeeList" parameterClass="map" resultClass="java.util.HashMap">
	<![CDATA[ 
		select CREATE_SHOW_NAME as fee_name, fee, is_leaserze_cost
		from t_prjt_credit_feelist
		where credit_id = #CREDIT_ID#
		]]>
	</select>
	
	<!--  query查询出有支付的合同总数 -->
	<select id="queryRentContractByPlay_count" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[ SELECT COUNT(1) FROM (SELECT 
					 T1.ID PRCD_ID,
					 T1.STATUS PRCD_STATUS,
					 T2.RECT_ID,
					 T1.LEASE_CODE,
					 T2.RECT_STATUS,
					 T2.STATUS,
					 T3.CUST_NAME,
					 T4.NAME AREA,
					 T5.NAME CLERK_NAME,
					 T6.NAME SENSOR_NAME,
					 T2.LESSOR_TIME,
					 MAX(T7.BRAND) BRAND,
					 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG
				  FROM T_PRJT_CREDIT T1
				  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
				  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
				  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
				  LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID
				  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
				  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
				  LEFT JOIN T_RENT_COLLECTIONPLAN t9 on t2.RECT_ID=t9.RECT_ID
				  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
		  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  			AND (T2.STATUS!=-2 OR T2.STATUS IS NULL) and t9.STATUS='0' and T2.STATUS='0'
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]> -->
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or T1.CLERK_ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T1.SENSOR_ID)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 T2.LESSOR_TIME&gt;=cast(#QSTART_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 T2.LESSOR_TIME&lt;=cast(#QEND_DATE# as datetime)
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS is null ]]>
					</isEqual>
					<isNotEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			
		<![CDATA[  GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          T5.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG) t
			 ]]>
	</select>
	<!--  query查询出有支付的合同 -->
	<select id="queryRentContractByPlay" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ SELECT T1.ID PRCD_ID,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 T5.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE
			  FROM T_PRJT_CREDIT T1
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  LEFT JOIN T_USER_USER T5 ON T6.upper_user = T5.ID
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  LEFT JOIN T_RENT_COLLECTIONPLAN t9 on t2.RECT_ID=t9.RECT_ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS!=-2 OR T2.STATUS IS NULL) and t9.STATUS='0' and T2.STATUS='0'
  				and T1.production_type = 1
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]> -->
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or T1.CLERK_ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T1.SENSOR_ID)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%' 
				  or T7.BRAND LIKE '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="search_thing_number">
				 exists(
				 	select 0 from T_RENT_CONTRACTDETAIL rc
					where rc.RECT_ID = t2.RECT_ID
					and rc.THING_NUMBER = #search_thing_number#
				 )
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 T2.LESSOR_TIME&gt;=cast(#QSTART_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 T2.LESSOR_TIME&lt;=cast(#QEND_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS is null ]]>
					</isEqual>
					<isNotEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			
		<![CDATA[  GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          T5.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG, 
			          T1.CONTRACT_TYPE
			    
		]]>
	</select>
	
	
		<select id="custByRectId" parameterClass="map" resultClass="java.util.HashMap">
		<!-- 
		<![CDATA[
			select t1.CUST_NAME NAME,t1.CUST_ID,t3.PCCBA_ID,t3.STATE,t3.BANK_NAME,t3.BANK_ACCOUNT from  T_RENT_CONTRACT t
left join T_CUST_CUSTOMER t1 on t.CUST_ID=t1.CUST_ID  
left join T_PRJT_CREDIT t2 on t2.ID=t.PRCD_ID
left join T_PRJT_CREDITCORPBANKACCOUNT t3 on t3.CREDIT_ID=t2.ID and t3.STATUS=0
where t.RECT_ID=#rect_id# and t.STATUS=0 and t1.STATUS=0 and t2.STATUS=0 
		]]>
		 -->
		<![CDATA[
			select t1.CUST_NAME NAME,t1.CUST_ID,t3.PCCBA_ID,t3.STATE,t3.BANK_NAME,t3.BANK_ACCOUNT 
from T_PRJT_CREDIT t
left join T_CUST_CUSTOMER t1 on t.CUST_ID=t1.CUST_ID  AND t1.STATUS = 0
left join T_PRJT_CREDITCORPBANKACCOUNT t3 on t3.CREDIT_ID=T.ID and t3.STATUS=0
where t.ID=#CREDIT_ID# and t.STATUS=0 
		]]>
	</select>
	
	
		<select id="suplByRectId" parameterClass="map" resultClass="java.util.HashMap">
		<!-- 
		<![CDATA[
			select t4.NAME,t4.ID,t5.PCCBA_ID,t5.STATE,t5.BANK_NAME,t5.BANK_ACCOUNT from  T_RENT_CONTRACT t
left join T_PRJT_CREDIT t1 on t.PRCD_ID=t1.ID
left join T_PRJT_CREDITEQUIPMENT t2 on t1.ID=t2.CREDIT_ID
left join T_SUPL_EQUIPMENT t3 on t2.SUEQ_ID=t3.SUEQ_ID
left join T_SUPL_SUPPLIER t4 on t3.SUPPLIER_ID=t4.ID
left join T_SUPL_SUPPLIERBANKACCOUNT t5 on t4.ID=t5.SUPL_ID
where t.RECT_ID=#rect_id# and t.STATUS=0 and t1.STATUS=0 and t3.STATUS=0 and t4.STATUS=0
		]]>
		 -->
		<![CDATA[
			select t4.NAME,t4.ID,t5.PCCBA_ID,t5.STATE,t5.BANK_NAME,t5.BANK_ACCOUNT 
	from  T_PRJT_CREDIT t 
left join T_PRJT_CREDITEQUIPMENT t2 on T.ID=t2.CREDIT_ID
left join T_SUPL_EQUIPMENT t3 on t2.SUEQ_ID=t3.SUEQ_ID
left join T_SUPL_SUPPLIER t4 on t3.SUPPLIER_ID=t4.ID
left join T_SUPL_SUPPLIERBANKACCOUNT t5 on t4.ID=t5.SUPL_ID
where t.ID=#CREDIT_ID# and t.STATUS=0 and t3.STATUS=0 and t4.STATUS=0
		]]>
	</select>
	
	<select id="suplByRectIds" parameterClass="map" resultClass="java.util.HashMap">
		<!-- 
		<![CDATA[
			select t4.NAME,t4.ID from  T_RENT_CONTRACT t
left join T_PRJT_CREDIT t1 on t.PRCD_ID=t1.ID
left join T_PRJT_CREDITEQUIPMENT t2 on t1.ID=t2.CREDIT_ID
left join T_SUPL_EQUIPMENT t3 on t2.SUEQ_ID=t3.SUEQ_ID
left join T_SUPL_SUPPLIER t4 on t3.SUPPLIER_ID=t4.ID
where t.RECT_ID=#rect_id# and t.STATUS=0 and t1.STATUS=0 and t3.STATUS=0 and t4.STATUS=0
		]]>
		 -->
		 <![CDATA[
			select t4.NAME,t4.ID 
			from  T_PRJT_CREDIT T 
				left join T_PRJT_CREDITEQUIPMENT t2 on T.ID=t2.CREDIT_ID
				left join T_SUPL_EQUIPMENT t3 on t2.SUEQ_ID=t3.SUEQ_ID
				left join T_SUPL_SUPPLIER t4 on t3.SUPPLIER_ID=t4.ID
			where T.ID=#CREDIT_ID# and t.STATUS=0 and t3.STATUS=0 and t4.STATUS=0
		]]>
	</select>
	
	<select id="suplBySuplIds" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select t5.BANK_ACCOUNT,t5.BANK_NAME,t5.STATE,t5.PCCBA_ID from T_SUPL_SUPPLIER t4
left join T_SUPL_SUPPLIERBANKACCOUNT t5 on t4.ID=t5.SUPL_ID
where t4.ID=#supl_id# and t4.STATUS=0 and t5.STATUS=0
		]]>
	</select>
	
	<select id="suplBySuplIdss" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select BANK_NAME,BANK_ACCOUNT,PCCBA_ID from T_SUPL_SUPPLIERBANKACCOUNT where PCCBA_ID=#pccba_id#
		]]>
	</select>
	
	
	
		
	<select id="queryRentContractBackMoneyByMargin_count" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[ select COUNT(*) from (
					select t.*,tt.PAY_MONEY,tt.PAYCOUNT,tt.PAY_MONEYShenhe,isnull(tt1.LEASE_TOPRIC,0) LEASE_TOPRIC,isnull(tt2.PLEDGE_BACK_PRICE,0) PLEDGE_BACK_PRICE from (
					SELECT T1.ID CREDIT_ID,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 T5.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE,
						 (case
						 when t10.CREATE_TIME is null
						 then -1
						 when  DATEDIFF(day,t10.CREATE_TIME,GETDATE())<=90
						 then 0
						 when DATEDIFF(day,t10.CREATE_TIME,GETDATE())>90
						 then 1
						 end
						 ) as timeState,
						 t10.CREATE_TIME
			  FROM  T_PRJT_CREDIT T1 
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID AND T3.STATUS = 0
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID 
			  LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  LEFT JOIN t_prjt_creditscheme T9 ON T9.CREDIT_ID=T1.ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			  left join (select t1.CREATE_TIME,t.CREDIT_ID from t_prjt_risk_control t
						 left join T_PRJT_RISK_CONTROLMEMO t1 on t.PRC_ID=t1.PRC_ID and t1.STATUS=0 and t1.PRCM_LEVEL is null
					where t.STATUS=0 and t.STATE in (1,2)) t10 on t10.CREDIT_ID=T1.ID
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS!=-2 OR T2.STATUS IS NULL) 
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]> -->
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or T1.CLERK_ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T1.SENSOR_ID)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 T2.LESSOR_TIME&gt;=cast(#QSTART_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 T2.LESSOR_TIME&lt;=cast(#QEND_DATE# as datetime)
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			
		<![CDATA[ GROUP BY T1.ID,
				          T1.STATUS,
				          T2.RECT_ID,
				          T1.LEASE_CODE,
				          T2.RECT_STATUS,
				          T2.STATUS,
				          T3.CUST_NAME,
				          T4.NAME,
				          T5.NAME,
				          T6.NAME,
				          T2.LESSOR_TIME,
				          T8.PAYLISTFLAG, 
				          T1.CONTRACT_TYPE,
				          T9.PLEDGE_PRICE,t10.CREATE_TIME) t
				        left join (select t.CREDIT_ID,t.PAYCOUNT,sum(case  when t.STATE=3 then t.PAY_MONEY end) PAY_MONEY,sum(case  when t.STATE=0 or t.STATE=1 then t.PAY_MONEY end) PAY_MONEYShenhe from T_SUPL_PLAYDETIL t where BACKSTATE='1' and STATUS=0 group by t.CREDIT_ID,t.PAYCOUNT) tt on t.CREDIT_ID=tt.CREDIT_ID
						left join (select isnull(PLEDGE_ENTER_MCTOAG,0)+isnull(PLEDGE_ENTER_MCTOAGRATE,0) LEASE_TOPRIC,CREDIT_ID from t_prjt_creditscheme group by PLEDGE_ENTER_MCTOAG,PLEDGE_ENTER_MCTOAGRATE,CREDIT_ID) tt1  ON tt1.CREDIT_ID=t.CREDIT_ID
						left join (
							select isnull(PLEDGE_BACK_PRICE,0) PLEDGE_BACK_PRICE,CREDIT_ID from T_PRJT_CREDITSCHEME 
								where STATUS=0 and CREDIT_ID in (
										(
										select ID CREDIT_ID from t_prjt_credit t1
										left join T_RENT_CONTRACT t2 on t2.PRCD_ID=t1.ID
										left join T_RENT_COLLECTIONPLAN t3 on t3.RECT_ID=t2.RECT_ID
										where t1.STATUS=0 and t2.STATUS=0 and t3.STATUS=0
											and t3.RECP_ID in (select RECP_ID from T_RENT_SETTLE where STATUS=0)
										)
									union
										(
											select ID CREDIT_ID from t_prjt_credit t1
											left join T_PRJT_CREDITSCHEME t4 on t4.CREDIT_ID=t1.ID
											left join T_RENT_CONTRACT t2 on t2.PRCD_ID=t1.ID
											left join T_RENT_COLLECTIONPLAN t3 on t3.RECT_ID=t2.RECT_ID
											left join(
												select COUNT(recp_id) num,RECP_ID from (
												select SUM(real_price) sum_real_price,RECD_PERIOD,FICB_ITEM,RECP_ID from t_fina_collectionbill where STATUS=0  and FICB_STATE=5 group by RECD_PERIOD,FICB_ITEM,RECP_ID
												) as t where t.sum_real_price!=0 and FICB_ITEM=#zj# group by RECP_ID
											) tt on tt.RECP_ID=t3.RECP_ID
											where tt.num>=t4.LEASE_TERM-1	
										)
									)
						
						) tt2 on tt2.CREDIT_ID=t.CREDIT_ID
				    where tt1.LEASE_TOPRIC>0 or tt2.PLEDGE_BACK_PRICE>0
				    ) t
				    ]]>
			 
	</select>
	
	<select id="getPledgeForPay" parameterClass="map" resultClass="hashMap">
		select * from (
		select pc.ID
		, pc.CREDIT_RUNCODE
		, pc.LEASE_CODE
		, cu.CUST_NAME
		, dc.DECP_NAME_CN
		, u.[NAME]
		, uu.[NAME] as UP_NAME
		, t.BRAND as BRAND
		, convert(money, (ps.PLEDGE_ENTER_MCTOAG + ps.PLEDGE_ENTER_MCTOAGRATE)) as PLEDGE_MONEY
		, (
		    select isnull(sum(pay.PAY_MONEY), 0)
		    from T_SUPL_PLAYDETIL pay
		    where BACKSTATE = 1
		    and STATUS = 0
		    and STATE in (0, 1)
		    and pay.CREDIT_ID = pc.ID
		  ) as AUTHING_MONEY
		, (
		    select isnull(sum(pay.PAY_MONEY), 0)
		    from T_SUPL_PLAYDETIL pay
		    where BACKSTATE = 1
		    and STATUS = 0
		    and STATE = 3
		    and pay.CREDIT_ID = pc.ID
		  ) as AUTHED_MONEY
		,(select count(0) from T_CUST_LINKMAN
			where CUST_ID in (select CUST_ID from T_PRJT_CREDIT where ID = pc.ID) 
       		and LINK_TYPE = 0
       	) as HAS_LINKMAN
		from T_PRJT_CREDIT pc
		left join T_RENT_CONTRACT rc on rc.PRCD_ID = pc.ID
		left join T_PRJT_CREDITSCHEME ps on ps.CREDIT_ID = pc.ID
		left join T_CUST_CUSTOMER cu on pc.CUST_ID = cu.CUST_ID
		left join T_USER_USER u on pc.SENSOR_ID = u.ID
		left join T_USER_USER uu on u.upper_user = uu.ID
		left join T_DEPT_DEPARTMENT dp on u.DEPT_ID = dp.ID
		left join T_DEPT_COMPANY dc on dp.DECP_ID = dc.DECP_ID
		left join (
			select pe.CREDIT_ID, MAX(pe.BRAND) AS BRAND
		    from T_PRJT_CREDITEQUIPMENT pe
		    group by pe.CREDIT_ID
		)t on t.CREDIT_ID = pc.ID
		where ps.PLEDGE_ENTER_MCTOAG > 0
		and pc.STATUS = 0
		<!-- and rc.LEASE_CODE is not null -->
		<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]> -->
		  	 	<![CDATA[ 
		  	 	(u.ID = #s_employeeId#
		  	 	or uu.ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = pc.SENSOR_ID)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
			<![CDATA[
				(pc.CREDIT_RUNCODE LIKE '%$QSEARCH_VALUE$%' 
					OR rc.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
					OR dc.DECP_NAME_CN LIKE '%$QSEARCH_VALUE$%'
				  	OR u.[NAME] LIKE '%$QSEARCH_VALUE$%' 
				  	OR uu.[NAME] LIKE '%$QSEARCH_VALUE$%'
				  	or t.BRAND LIKE '%$QSEARCH_VALUE$%'
				  	or cu.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
			  	)
			]]>
			</isNotEmpty>
			) t where 1 = 1
			<isEqual property="search_status" compareValue="1">
				<![CDATA[
				and t.AUTHED_MONEY <= 0
				and t.AUTHING_MONEY <= 0
				]]>
			</isEqual>
			<isEqual property="search_status" compareValue="2">
				and t.AUTHING_MONEY > 0
			</isEqual>
			<isEqual property="search_status" compareValue="3">
				and t.AUTHED_MONEY >= t.PLEDGE_MONEY
			</isEqual>
	</select>
	
	<select id="queryHandlingCharge" parameterClass="map" resultClass="hashMap">
		select pc.CREDIT_RUNCODE, pc.LEASE_CODE
		, pc.ID as CREDIT_ID
		, cust.CUST_NAME
		, dc.DECP_NAME_CN
		, u.[NAME] as U_NAME
		, uu.[NAME] as UU_NAME
		, ps.OUT_PAY
		, pay.STATUS as PAY_STATUS
		, pay.STATE as PAY_STATE
		<!-- Add by ZhangYizhou on 2014-06-16 Begin -->
		<!-- IT201406047 : 查询结果中增加 银行拨款日字段 -->
		, pc.FINANCECONTRACT_DATE as PAY_DATE
		<!-- Add by ZhangYizhou on 2014-06-16 End -->
		from T_PRJT_CREDIT pc
		left join T_USER_USER u on pc.SENSOR_ID = u.ID
		left join T_USER_USER uu on u.upper_user = uu.ID
		left join T_DEPT_DEPARTMENT dp on u.DEPT_ID = dp.ID
		left join T_DEPT_COMPANY dc on dp.DECP_ID = dc.DECP_ID
		left join T_CUST_CUSTOMER cust on pc.CUST_ID = cust.CUST_ID
		left join T_PRJT_CREDITSCHEME ps on ps.CREDIT_ID = pc.ID
		left join (
		  select ITEM_ID,  max(ORDER_ID) as ORDER_ID
		  from T_PAY_ORDER_LIST
		  where ITEM_TYPE = 1
		  and STATUS = 0
		  group by ITEM_ID
		) ol on ol.ITEM_ID = pc.ID
		left join T_PAY_ORDER po on ol.ORDER_ID = po.ID and po.ORDER_TYPE = 1
		left join T_SUPL_PLAYDETIL pay on po.ORDER_LINK = pay.ID and pay.STATUS = 0
		where pc.STATUS = 0
		and pc.WIND_STATE = 1
		and pc.STATE = 1
		and ps.STATUS = 0
		and ps.OUT_PAY > 0
		and pc.PRODUCTION_TYPE = 3
		<isNotEmpty prepend="and" property="companyCode">
			pc.company_code = #companyCode#
		</isNotEmpty>
		<isEqual property="search_status" compareValue="-1">
			and pay.STATUS is null
		</isEqual>
		<isEqual property="search_status" compareValue="1">
			and (pay.STATE = 1 or pay.STATE = 0)
			and pay.STATUS = 0
		</isEqual>
		<isEqual property="search_status" compareValue="2">
			and pay.STATUS = 1
		</isEqual>
		<isEqual property="search_status" compareValue="3">
			and pay.STATE = 3
			and pay.STATUS = 0
		</isEqual>
		<isNotEmpty property="search_value">
			and (
			  pc.CREDIT_RUNCODE like '%$search_value$%'
			  or pc.LEASE_CODE like '%$search_value$%'
			  or cust.CUST_NAME like '%$search_value$%'
			  or dc.DECP_NAME_CN like '%$search_value$%'
			  or u.[NAME] like '%$search_value$%'
			  or uu.[NAME] like '%$search_value$%'
			)
		</isNotEmpty>
		<!-- Add by ZhangYizhou on 2014-06-16 Begin -->
		<!-- IT201406047 :增加 银行拨款日起始、结束时间的查询条件 -->
		<isNotEmpty property="start_date">
		<![CDATA[
			and pc.FINANCECONTRACT_DATE >= cast(#start_date# as datetime)
		]]>
		</isNotEmpty>
		<isNotEmpty property="end_date">
		<![CDATA[
			and pc.FINANCECONTRACT_DATE <= cast(#end_date# as datetime)
		]]>
		<!-- Add by ZhangYizhou on 2014-06-16 End -->
		</isNotEmpty>
		<isNotEmpty property="cartItems">
			and pc.ID in ($cartItems$)
		</isNotEmpty>
	</select>
	
	<select id="queryBrokerage" parameterClass="map" resultClass="hashMap">
		select pc.CREDIT_RUNCODE, pc.LEASE_CODE
		, pc.ID as CREDIT_ID
		, pc.FINANCECONTRACT_DATE as PAY_DATE
		, cust.CUST_NAME
		, dc.DECP_NAME_CN
		, u.[NAME] as U_NAME
		, uu.[NAME] as UU_NAME
		, ps.SALES_PAY
		, pay.STATUS as PAY_STATUS
		, pay.STATE as PAY_STATE
		from T_PRJT_CREDIT pc
		left join T_USER_USER u on pc.SENSOR_ID = u.ID
		left join T_USER_USER uu on u.upper_user = uu.ID
		left join T_DEPT_DEPARTMENT dp on u.DEPT_ID = dp.ID
		left join T_DEPT_COMPANY dc on dp.DECP_ID = dc.DECP_ID
		left join T_CUST_CUSTOMER cust on pc.CUST_ID = cust.CUST_ID
		left join T_PRJT_CREDITSCHEME ps on ps.CREDIT_ID = pc.ID
		left join (
		  select ITEM_ID,  max(ORDER_ID) as ORDER_ID
		  from T_PAY_ORDER_LIST
		  where ITEM_TYPE = 2
		  and STATUS = 0
		  group by ITEM_ID
		) ol on ol.ITEM_ID = pc.ID
		left join T_PAY_ORDER po on ol.ORDER_ID = po.ID and po.ORDER_TYPE = 2
		left join T_SUPL_PLAYDETIL pay on po.ORDER_LINK = pay.ID and pay.STATUS = 0
		where pc.STATUS = 0
		and pc.WIND_STATE = 1
		and pc.STATE = 1
		and ps.STATUS = 0
		and ps.SALES_PAY > 0
		and pc.PRODUCTION_TYPE = 3
		<isNotEmpty prepend="and" property="companyCode">
			pc.company_code = #companyCode#
		</isNotEmpty>
		<isEqual property="search_status" compareValue="-1">
			and pay.STATUS is null
		</isEqual>
		<isEqual property="search_status" compareValue="1">
			and (pay.STATE = 1 or pay.STATE = 0)
			and pay.STATUS = 0
		</isEqual>
		<isEqual property="search_status" compareValue="2">
			and pay.STATUS = 1
		</isEqual>
		<isEqual property="search_status" compareValue="3">
			and pay.STATE = 3
			and pay.STATUS = 0
		</isEqual>
		<isNotEmpty property="search_value">
			and (
			  pc.CREDIT_RUNCODE like '%$search_value$%'
			  or pc.LEASE_CODE like '%$search_value$%'
			  or cust.CUST_NAME like '%$search_value$%'
			  or dc.DECP_NAME_CN like '%$search_value$%'
			  or u.[NAME] like '%$search_value$%'
			  or uu.[NAME] like '%$search_value$%'
			)
		</isNotEmpty>
		<isNotEmpty property="cartItems">
			and pc.ID in ($cartItems$)
		</isNotEmpty>
	</select>
	
	<select id="queryHandlingChargeByOrder" parameterClass="map" resultClass="hashMap">
		select po.ID as PO_ID
		, po.ORDER_CODE
		, pay.PAY_MONEY 
		, pay.STATUS as PAY_STATUS
		, pay.STATE as PAY_STATE
		, pay.APPLICATION_DATE
		, pay.BACKCOMP
		, pay.BANK_NAME
		, pay.BANK_ACCOUNT
		, u.[NAME]
		, pay.ID
		, pay.BACKSTATE
		, pay.DEPARTMENTSTATUS
		, pay.EXAMSTATUS
		, pay.FINANCIALSTATUS
		, pay.MANAGER
		, pay.STATUS
		, pay.STATE
		, pay.PAY_DATE
		, case when pay.PAY_WAY is null or pay.PAY_WAY = 0 then ''
	      else (
			select top 1 flag from T_DATA_DICTIONARY
			where [TYPE] = '拨款方式'
			and CODE = pay.PAY_WAY
		  ) end as PAY_WAY
		from T_PAY_ORDER po 
		left join T_SUPL_PLAYDETIL pay on po.ORDER_LINK = pay.ID
		left join T_USER_USER u on po.CREATE_BY = u.ID
		where po.ORDER_TYPE = 1
		<isNotEmpty prepend="and" property="companyCode">
			exists(
				select 0 
				from T_PAY_ORDER_LIST ol
				left join T_PRJT_CREDIT pc on ol.ITEM_ID = pc.ID
				where ORDER_ID = po.ID
				and pc.COMPANY_CODE = #companyCode#
			)
		</isNotEmpty>
		<isEqual property="search_status" compareValue="1">
			and (pay.STATE = 1 or pay.STATE = 0)
			and pay.STATUS = 0
		</isEqual>
		<isEqual property="search_status" compareValue="2">
			and pay.STATUS = 1
		</isEqual>
		<isEqual property="search_status" compareValue="3">
			and pay.STATE = 3
			and pay.STATUS = 0
		</isEqual>
		<isNotEmpty property="search_value">
			and ((
			  po.ORDER_CODE like '%$search_value$%'
			  or u.[NAME] like '%$search_value$%'
			  or pay.BANK_ACCOUNT like '%$search_value$%'
			  or pay.BACKCOMP like '%$search_value$%'
			) 
			or exists (
				select 0
				from T_PAY_ORDER_LIST pol 
				left join T_PRJT_CREDIT pc on pc.ID = pol.ITEM_ID
				left join T_USER_USER u on pc.SENSOR_ID = u.ID
				left join T_USER_USER uu on u.upper_user = uu.ID
				left join T_DEPT_DEPARTMENT dp on u.DEPT_ID = dp.ID
				left join T_DEPT_COMPANY dc on dp.DECP_ID = dc.DECP_ID
				left join T_CUST_CUSTOMER cust on pc.CUST_ID = cust.CUST_ID
				where pol.ORDER_ID = po.ID
				and (
					pc.CREDIT_RUNCODE like '%$search_value$%'
				  or pc.LEASE_CODE like '%$search_value$%'
				  or cust.CUST_NAME like '%$search_value$%'
				  or dc.DECP_NAME_CN like '%$search_value$%'
				  or u.[NAME] like '%$search_value$%'
				  or uu.[NAME] like '%$search_value$%'	
				)
			))
		</isNotEmpty>
		<isEqual property="shen_pi_STATE" compareValue="0">
			and (pay.STATE = 1 or pay.STATE = 0)
			and pay.STATUS = 0
		</isEqual>
		<isEqual property="shen_pi_STATE" compareValue="2">
			and pay.STATUS = 1
		</isEqual>
		<isEqual property="shen_pi_STATE" compareValue="1">
			and pay.STATE = 3
			and pay.STATUS = 0
		</isEqual>
		<isNotEmpty property="QSEARCH_VALUE">
			and (
			  po.ORDER_CODE like '%$QSEARCH_VALUE$%'
			  or u.[NAME] like '%$QSEARCH_VALUE$%'
			  or pay.BANK_ACCOUNT like '%$QSEARCH_VALUE$%'
			  or pay.BACKCOMP like '%$QSEARCH_VALUE$%'
			)
		</isNotEmpty>
	</select>
	
	<select id="queryBrokerageByOrder" parameterClass="map" resultClass="hashMap">
		select po.ID as PO_ID
		, po.ORDER_CODE
		, pay.PAY_MONEY 
		, pay.STATUS as PAY_STATUS
		, pay.STATE as PAY_STATE
		, pay.APPLICATION_DATE
		, pay.BACKCOMP
		, pay.BANK_NAME
		, pay.BANK_ACCOUNT
		, u.[NAME]
		, pay.ID
		, pay.BACKSTATE
		, pay.DEPARTMENTSTATUS
		, pay.EXAMSTATUS
		, pay.FINANCIALSTATUS
		, pay.MANAGER
		, pay.STATUS
		, pay.STATE
		, pay.PAY_DATE
		, case when pay.PAY_WAY is null or pay.PAY_WAY = 0 then ''
	      else (
			select top 1 flag from T_DATA_DICTIONARY
			where [TYPE] = '拨款方式'
			and CODE = pay.PAY_WAY
		  ) end as PAY_WAY
		from T_PAY_ORDER po 
		left join T_SUPL_PLAYDETIL pay on po.ORDER_LINK = pay.ID
		left join T_USER_USER u on po.CREATE_BY = u.ID
		where po.ORDER_TYPE = 2
		<isEqual property="search_status" compareValue="1">
			and (pay.STATE = 1 or pay.STATE = 0)
			and pay.STATUS = 0
		</isEqual>
		<isEqual property="search_status" compareValue="2">
			and pay.STATUS = 1
		</isEqual>
		<isEqual property="search_status" compareValue="3">
			and pay.STATE = 3
			and pay.STATUS = 0
		</isEqual>
		<isNotEmpty prepend="and" property="companyCode">
			exists(
				select 0 
				from T_PAY_ORDER_LIST ol
				left join T_PRJT_CREDIT pc on ol.ITEM_ID = pc.ID
				where ORDER_ID = po.ID
				and pc.COMPANY_CODE = #companyCode#
			)
		</isNotEmpty>
		<isNotEmpty property="search_value">
			and ((
			  po.ORDER_CODE like '%$search_value$%'
			  or u.[NAME] like '%$search_value$%'
			  or pay.BANK_ACCOUNT like '%$search_value$%'
			  or pay.BACKCOMP like '%$search_value$%'
			) 
			or exists (
				select 0
				from T_PAY_ORDER_LIST pol 
				left join T_PRJT_CREDIT pc on pc.ID = pol.ITEM_ID
				left join T_USER_USER u on pc.SENSOR_ID = u.ID
				left join T_USER_USER uu on u.upper_user = uu.ID
				left join T_DEPT_DEPARTMENT dp on u.DEPT_ID = dp.ID
				left join T_DEPT_COMPANY dc on dp.DECP_ID = dc.DECP_ID
				left join T_CUST_CUSTOMER cust on pc.CUST_ID = cust.CUST_ID
				where pol.ORDER_ID = po.ID
				and (
					pc.CREDIT_RUNCODE like '%$search_value$%'
				  or pc.LEASE_CODE like '%$search_value$%'
				  or cust.CUST_NAME like '%$search_value$%'
				  or dc.DECP_NAME_CN like '%$search_value$%'
				  or u.[NAME] like '%$search_value$%'
				  or uu.[NAME] like '%$search_value$%'	
				)
			))
		</isNotEmpty>
		<isEqual property="shen_pi_STATE" compareValue="0">
			and (pay.STATE = 1 or pay.STATE = 0)
			and pay.STATUS = 0
		</isEqual>
		<isEqual property="shen_pi_STATE" compareValue="2">
			and pay.STATUS = 1
		</isEqual>
		<isEqual property="shen_pi_STATE" compareValue="1">
			and pay.STATE = 3
			and pay.STATUS = 0
		</isEqual>
		<isNotEmpty property="QSEARCH_VALUE">
			and (
			  po.ORDER_CODE like '%$QSEARCH_VALUE$%'
			  or u.[NAME] like '%$QSEARCH_VALUE$%'
			  or pay.BANK_ACCOUNT like '%$QSEARCH_VALUE$%'
			  or pay.BACKCOMP like '%$QSEARCH_VALUE$%'
			)
		</isNotEmpty>
	</select>
	
	<select id="getBrokerageDetail" parameterClass="map" resultClass="hashMap">
		select pc.CREDIT_RUNCODE, pc.LEASE_CODE
			, pc.ID as CREDIT_ID
			, cust.CUST_NAME
			, dc.DECP_NAME_CN
			, u.[NAME] as U_NAME
			, uu.[NAME] as UU_NAME
			, ps.SALES_PAY
			, pc.FINANCECONTRACT_DATE AS PAY_DATE
			, (
				select sum(PAY_MONEY)
				from T_SUPL_PLAYDETIL
				where CREDIT_ID = pc.ID
				and STATUS = 0
				and BACKSTATE = 0
				and STATE = 3
			) as PAY_MONEY
		from T_PAY_ORDER po
		left join T_PAY_ORDER_LIST pol on pol.ORDER_ID = po.ID
		left join T_PRJT_CREDIT pc on pc.ID = pol.ITEM_ID
		left join T_USER_USER u on pc.SENSOR_ID = u.ID
		left join T_USER_USER uu on u.upper_user = uu.ID
		left join T_DEPT_DEPARTMENT dp on u.DEPT_ID = dp.ID
		left join T_DEPT_COMPANY dc on dp.DECP_ID = dc.DECP_ID
		left join T_CUST_CUSTOMER cust on pc.CUST_ID = cust.CUST_ID
		left join T_PRJT_CREDITSCHEME ps on ps.CREDIT_ID = pc.ID
		where po.ID = #po_id#
	</select>
	
	<select id="getBrokerageDetailForExport" parameterClass="map" resultClass="hashMap">
		select pc.CREDIT_RUNCODE, pc.LEASE_CODE
			, pc.ID as CREDIT_ID
			, cust.CUST_NAME
			, dc.DECP_NAME_CN
			, u.[NAME] as U_NAME
			, uu.[NAME] as UU_NAME
			, ps.SALES_PAY
			, pc.FINANCECONTRACT_DATE AS PAY_DATE
		  , (isnull(ps.LEASE_TOPRIC, 0) - isnull(ps.PLEDGE_ENTER_MCTOAG, 0) - isnull(ps.PLEDGE_ENTER_AG, 0)) as PAY_MONEY
		  , ps.LEASE_TERM
		  , supl.SUPL_NAME
		  , supl.OPEN_ACCOUNT_BANK
		  , supl.BANK_ACCOUNT
		from T_PAY_ORDER po
		left join T_PAY_ORDER_LIST pol on pol.ORDER_ID = po.ID
		left join T_PRJT_CREDIT pc on pc.ID = pol.ITEM_ID
		left join T_USER_USER u on pc.SENSOR_ID = u.ID
		left join T_USER_USER uu on u.upper_user = uu.ID
		left join T_DEPT_DEPARTMENT dp on u.DEPT_ID = dp.ID
		left join T_DEPT_COMPANY dc on dp.DECP_ID = dc.DECP_ID
		left join T_CUST_CUSTOMER cust on pc.CUST_ID = cust.CUST_ID
		left join T_PRJT_CREDITSCHEME ps on ps.CREDIT_ID = pc.ID
		left join (
		  select pe.CREDIT_ID
		  , max(su.[NAME]) as supl_name
		  , max(su.OPEN_ACCOUNT_BANK) as OPEN_ACCOUNT_BANK
		  , max(su.BANK_ACCOUNT) as BANK_ACCOUNT
		  from T_PRJT_CREDITEQUIPMENT pe
		  left join T_SUPL_EQUIPMENT se on pe.SUEQ_ID = se.SUEQ_ID
		  left join T_SUPL_SUPPLIER su on se.SUPPLIER_ID = su.ID
		  where pe.EQMT_STATUS = 0
		  group by pe.CREDIT_ID
		)supl on supl.CREDIT_ID = pc.ID
		where po.ID = #po_id#
	</select>
	
	<select id="getHandlingChargeDetail" parameterClass="map" resultClass="hashMap">
		select pc.CREDIT_RUNCODE, pc.LEASE_CODE
			, pc.ID as CREDIT_ID
			, cust.CUST_NAME
			, dc.DECP_NAME_CN
			, u.[NAME] as U_NAME
			, uu.[NAME] as UU_NAME
			, ps.OUT_PAY
			<!-- Add by ZhangYizhou on 2014-06-16 Begin -->
			<!-- IT201406047 :查询结果增加 银行拨款日  -->
			, pc.FINANCECONTRACT_DATE AS PAY_DATE
			<!-- Add by ZhangYizhou on 2014-06-16 End -->
			, (
				select sum(PAY_MONEY)
				from T_SUPL_PLAYDETIL
				where CREDIT_ID = pc.ID
				and STATUS = 0
				and BACKSTATE = 0
				and STATE = 3
			) as PAY_MONEY
		from T_PAY_ORDER po
		left join T_PAY_ORDER_LIST pol on pol.ORDER_ID = po.ID
		left join T_PRJT_CREDIT pc on pc.ID = pol.ITEM_ID
		left join T_USER_USER u on pc.SENSOR_ID = u.ID
		left join T_USER_USER uu on u.upper_user = uu.ID
		left join T_DEPT_DEPARTMENT dp on u.DEPT_ID = dp.ID
		left join T_DEPT_COMPANY dc on dp.DECP_ID = dc.DECP_ID
		left join T_CUST_CUSTOMER cust on pc.CUST_ID = cust.CUST_ID
		left join T_PRJT_CREDITSCHEME ps on ps.CREDIT_ID = pc.ID
		where po.ID = #po_id#
	</select>
	
	<select id="getSumOutPayMoney" parameterClass="com.brick.support.shopping.to.ShoppingCartTO" resultClass="java.lang.Double">
		select sum(OUT_PAY)
		from T_PRJT_CREDITSCHEME
		where STATUS = 0
		and CREDIT_ID in ($items$)
	</select>
	
	<select id="getSumBrokerageMoney" parameterClass="com.brick.support.shopping.to.ShoppingCartTO" resultClass="java.lang.Double">
		select sum(SALES_PAY)
		from T_PRJT_CREDITSCHEME
		where STATUS = 0
		and CREDIT_ID in ($items$)
	</select>
	
	<insert id="insertPayDetailForHandlingCharge" parameterClass="map">
		insert into T_SUPL_PLAYDETIL (
		  APPLICATION_DATE
		  ,PAY_MONEY
		  ,PAY_WAY
		  ,CREATE_DATE
		  ,CREATE_ID
		  ,MODIFY_DATE
		  ,MODIFY_ID
		  ,STATUS
		  ,BANK_NAME
		  ,BANK_ACCOUNT
		  ,STATE
		  ,BACKSTATE
		  ,DEPARTMENTSTATUS
		  ,EXAMSTATUS
		  ,FINANCIALSTATUS
		  ,MANAGER
		  ,BACKCOMP
		) VALUES (
		  getdate()
		  ,#pay_money#
		  ,#pay_way#
		  ,getdate()
		  ,#create_id#
		  ,getdate()
		  ,#create_id#
		  ,0
		  ,#bank_name#
		  ,#bank_account#
		  ,0
		  ,#back_state#
		  ,0
		  ,0
		  ,0
		  ,0
		  ,#back_comp#
		)
		<selectKey resultClass="java.lang.Integer" keyProperty="ID">
			<![CDATA[	select @@IDENTITY as ID  ]]>
		</selectKey>
	</insert>
	
	<select id="queryRentContractBackMoneyByMargin" parameterClass="map" resultClass="java.util.HashMap">
	<!--
		<![CDATA[   select t.*,tt.PAY_MONEY,tt.PAYCOUNT,tt.PAY_MONEYShenhe,isnull(tt1.LEASE_TOPRIC,0) LEASE_TOPRIC,isnull(tt2.PLEDGE_BACK_PRICE,0) PLEDGE_BACK_PRICE from (
					SELECT T1.ID PRCD_ID,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T2.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 T5.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE,
						 (case
						 when t10.CREATE_TIME is null
						 then -1
						 when  DATEDIFF(day,t10.CREATE_TIME,GETDATE())<=90
						 then 0
						 when DATEDIFF(day,t10.CREATE_TIME,GETDATE())>90
						 then 1
						 end
						 ) as timeState,
						 t10.CREATE_TIME
			  FROM  T_RENT_CONTRACT T2 
			  LEFT JOIN T_PRJT_CREDIT T1 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
			  LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  LEFT JOIN t_prjt_creditscheme T9 ON T9.CREDIT_ID=T1.ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			  left join (select t1.CREATE_TIME,t.CREDIT_ID from t_prjt_risk_control t
			  left join T_PRJT_RISK_CONTROLMEMO t1 on t.PRC_ID=t1.PRC_ID and t1.STATUS=0 and t1.PRCM_LEVEL is null
					where t.STATUS=0 and t.STATE in (1,2)) t10 on t10.CREDIT_ID=T1.ID
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS!=-2 OR T2.STATUS IS NULL) and t2.RECT_STATUS='1'
			]]>
			-->
			<![CDATA[
				select t.*,tt.PAY_MONEY,tt.PAYCOUNT,tt.PAY_MONEYShenhe,isnull(tt1.LEASE_TOPRIC,0) LEASE_TOPRIC,isnull(tt2.PLEDGE_BACK_PRICE,0) PLEDGE_BACK_PRICE from (
					SELECT T1.ID CREDIT_ID,
					]]>
					<!--2011/12/22 Yang Yun Add search field has default link man. Start -->
					<![CDATA[
						(select count(0) from T_CUST_LINKMAN
  							where  CUST_ID in (select CUST_ID from T_PRJT_CREDIT where ID = T1.ID) 
              				and LINK_TYPE = 0) 
						 as HAS_LINKMAN,
						 ]]>
					<!--2011/12/22 Yang Yun Add search field has default link man. End -->
					<![CDATA[
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T1.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 T5.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE
			  FROM  T_PRJT_CREDIT T1 
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID AND T3.STATUS = 0
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID 
			  LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  LEFT JOIN t_prjt_creditscheme T9 ON T9.CREDIT_ID=T1.ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			  left join (
			   select t1.CREATE_TIME,t.CREDIT_ID, pc.VALID_DAY
				from t_prjt_risk_control t
				left join T_PRJT_RISK_CONTROLMEMO t1 on t.PRC_ID=t1.PRC_ID and t1.STATUS=0 and t1.PRCM_LEVEL is null
				left join T_PRJT_CREDIT pc on t.CREDIT_ID = pc.ID and pc.STATUS = 0
				where t.STATUS=0 and t.STATE in (1,2)
			   ) t10 on t10.CREDIT_ID=T1.ID
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS!=-2 OR T2.STATUS IS NULL) 
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]> -->
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or T1.CLERK_ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T1.SENSOR_ID)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 T2.LESSOR_TIME&gt;=cast(#QSTART_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 T2.LESSOR_TIME&lt;=cast(#QEND_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			<!-- 
			<![CDATA[  GROUP BY T1.ID,
				          T1.STATUS,
				          T2.RECT_ID,
				          T2.LEASE_CODE,
				          T2.RECT_STATUS,
				          T2.STATUS,
				          T3.CUST_NAME,
				          T4.NAME,
				          T5.NAME,
				          T6.NAME,
				          T2.LESSOR_TIME,
				          T8.PAYLISTFLAG, 
				          T1.CONTRACT_TYPE,
				          T9.PLEDGE_PRICE,t10.CREATE_TIME) t
				        left join (select t.RECT_ID,t.PAYCOUNT,sum(case  when t.STATE=3 then t.PAY_MONEY end) PAY_MONEY,sum(case  when t.STATE=0 or t.STATE=1 then t.PAY_MONEY end) PAY_MONEYShenhe from T_SUPL_PLAYDETIL t where BACKSTATE='1' and STATUS=0 group by t.RECT_ID,t.PAYCOUNT) tt on t.RECT_ID=tt.RECT_ID
						left join (select isnull(PLEDGE_ENTER_MCTOAG,0)+isnull(PLEDGE_ENTER_MCTOAGRATE,0) LEASE_TOPRIC,CREDIT_ID from t_prjt_creditscheme group by PLEDGE_ENTER_MCTOAG,PLEDGE_ENTER_MCTOAGRATE,CREDIT_ID) tt1  ON tt1.CREDIT_ID=t.PRCD_ID
						left join (
							select isnull(PLEDGE_BACK_PRICE,0) PLEDGE_BACK_PRICE,CREDIT_ID from T_PRJT_CREDITSCHEME 
								where STATUS=0 and CREDIT_ID in (
										(
										select ID CREDIT_ID from t_prjt_credit t1
										left join T_RENT_CONTRACT t2 on t2.PRCD_ID=t1.ID
										left join T_RENT_COLLECTIONPLAN t3 on t3.RECT_ID=t2.RECT_ID
										where t1.STATUS=0 and t2.STATUS=0 and t3.STATUS=0
											and t3.RECP_ID in (select RECP_ID from T_RENT_SETTLE where STATUS=0)
										)
									union
										(
											select ID CREDIT_ID from t_prjt_credit t1
											left join T_PRJT_CREDITSCHEME t4 on t4.CREDIT_ID=t1.ID
											left join T_RENT_CONTRACT t2 on t2.PRCD_ID=t1.ID
											left join T_RENT_COLLECTIONPLAN t3 on t3.RECT_ID=t2.RECT_ID
											left join(
												select COUNT(recp_id) num,RECP_ID from (
												select SUM(real_price) sum_real_price,RECD_PERIOD,FICB_ITEM,RECP_ID from t_fina_collectionbill where STATUS=0  and FICB_STATE=5 group by RECD_PERIOD,FICB_ITEM,RECP_ID
												) as t where t.sum_real_price!=0 and FICB_ITEM=#zj# group by RECP_ID
											) tt on tt.RECP_ID=t3.RECP_ID
											where tt.num>=t4.LEASE_TERM-1	
										)
									)
						
						) tt2 on tt2.CREDIT_ID=t.PRCD_ID
				    where tt1.LEASE_TOPRIC>0 or tt2.PLEDGE_BACK_PRICE>0
				    ORDER BY  t.PRCD_ID DESC,t.RECT_STATUS
			]]>
			-->
			<![CDATA[
				GROUP BY T1.ID,
				          T1.STATUS,
				          T2.RECT_ID,
				          T1.LEASE_CODE,
				          T2.RECT_STATUS,
				          T2.STATUS,
				          T3.CUST_NAME,
				          T4.NAME,
				          T5.NAME,
				          T6.NAME,
				          T2.LESSOR_TIME,
				          T8.PAYLISTFLAG, 
				          T1.CONTRACT_TYPE,
				          T9.PLEDGE_PRICE) t
				        left join (select t.CREDIT_ID,t.PAYCOUNT,sum(case  when t.STATE=3 then t.PAY_MONEY end) PAY_MONEY,sum(case  when t.STATE=0 or t.STATE=1 then t.PAY_MONEY end) PAY_MONEYShenhe from T_SUPL_PLAYDETIL t where BACKSTATE='1' and STATUS=0 group by t.CREDIT_ID,t.PAYCOUNT) tt on t.CREDIT_ID=tt.CREDIT_ID
						left join (select isnull(PLEDGE_ENTER_MCTOAG,0)+isnull(PLEDGE_ENTER_MCTOAGRATE,0) LEASE_TOPRIC,CREDIT_ID from t_prjt_creditscheme group by PLEDGE_ENTER_MCTOAG,PLEDGE_ENTER_MCTOAGRATE,CREDIT_ID) tt1  ON tt1.CREDIT_ID=t.CREDIT_ID
						left join (
							select isnull(PLEDGE_BACK_PRICE,0) PLEDGE_BACK_PRICE,CREDIT_ID from T_PRJT_CREDITSCHEME 
								where STATUS=0 and CREDIT_ID in (
										(
										select ID CREDIT_ID from t_prjt_credit t1
										left join T_RENT_CONTRACT t2 on t2.PRCD_ID=t1.ID
										left join T_RENT_COLLECTIONPLAN t3 on t3.RECT_ID=t2.RECT_ID
										where t1.STATUS=0 and t2.STATUS=0 and t3.STATUS=0
											and t3.RECP_ID in (select RECP_ID from T_RENT_SETTLE where STATUS=0)
										)
									union
										(
											select ID CREDIT_ID from t_prjt_credit t1
											left join T_PRJT_CREDITSCHEME t4 on t4.CREDIT_ID=t1.ID
											left join T_RENT_CONTRACT t2 on t2.PRCD_ID=t1.ID
											left join T_RENT_COLLECTIONPLAN t3 on t3.RECT_ID=t2.RECT_ID
											left join(
												select COUNT(recp_id) num,RECP_ID from (
												select SUM(real_price) sum_real_price,RECD_PERIOD,FICB_ITEM,RECP_ID from t_fina_collectionbill where STATUS=0  and FICB_STATE=5 group by RECD_PERIOD,FICB_ITEM,RECP_ID
												) as t where t.sum_real_price!=0 and FICB_ITEM=#zj# group by RECP_ID
											) tt on tt.RECP_ID=t3.RECP_ID
											where tt.num>=t4.LEASE_TERM-1	
										)
									)
						
						) tt2 on tt2.CREDIT_ID=t.CREDIT_ID
				    where tt1.LEASE_TOPRIC>0 or tt2.PLEDGE_BACK_PRICE>0
				    ORDER BY  t.CREDIT_ID DESC,t.RECT_STATUS
			]]>
	</select>
	
	
	
	
	<select id="queryRentContractBackMoneyByInsurance_count" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[ SELECT COUNT(1) FROM (SELECT 
					 T1.ID PRCD_ID,
					 T1.STATUS PRCD_STATUS,
					 T2.RECT_ID,
					 T1.LEASE_CODE,
					 T2.RECT_STATUS,
					 T2.STATUS,
					 T3.CUST_NAME,
					 T4.NAME AREA,
					 T5.NAME CLERK_NAME,
					 T6.NAME SENSOR_NAME,
					 T2.LESSOR_TIME,
					 MAX(T7.BRAND) BRAND,
					 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG
				  FROM T_PRJT_CREDIT T1
				  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
				  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
				  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
				  LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID
				  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
				  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
				  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
		  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  			AND (T2.STATUS!=-2 OR T2.STATUS IS NULL) and t2.RECT_STATUS='1' 
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]> -->
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or T1.CLERK_ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T1.SENSOR_ID)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 T2.LESSOR_TIME&gt;=cast(#QSTART_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 T2.LESSOR_TIME&lt;=cast(#QEND_DATE# as datetime)
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			
		<![CDATA[  GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          T5.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG) t
			 ]]>
	</select>
	<select id="queryRentContractBackMoneyByInsurance" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ select t.*,tt.PAYCOUNT,tt.PAY_MONEY,tt.PAY_MONEYShenhe from (
					SELECT T1.ID PRCD_ID,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T2.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 T5.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND,
						 isnull(T8.PAYLISTFLAG,0) PAYLISTFLAG,
						 T1.CONTRACT_TYPE,
						 t10.LEASE_TOPRIC
			  FROM  T_RENT_CONTRACT T2 
			  LEFT JOIN T_PRJT_CREDIT T1 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
			  LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  left join T_RENT_COLLECTIONPLAN t9 on t9.RECT_ID=T2.RECT_ID and t9.STATUS=0
			  left join (select SUM(INSURE_PRICE) LEASE_TOPRIC,t10.RECP_ID from T_RENT_COLLECTIONDETAIL t10 where t10.STATUS=0 GROUP BY t10.RECP_ID) t10 on t10.RECP_ID=t9.RECP_ID
			  LEFT JOIN ( SELECT COUNT(1) PAYLISTFLAG,T8.RECT_ID FROM T_RENT_CONTRACTDETAIL T8 WHERE T8.STATUS=0  AND T8.RECP_ID IS NULL GROUP BY T8.RECT_ID) T8 ON T8.RECT_ID=T2.RECT_ID
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS!=-2 OR T2.STATUS IS NULL) and t2.RECT_STATUS='1'
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]> -->
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or T1.CLERK_ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T1.SENSOR_ID)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 T2.LESSOR_TIME&gt;=cast(#QSTART_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 T2.LESSOR_TIME&lt;=cast(#QEND_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			
		<![CDATA[ GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T2.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          T5.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME,
			          T8.PAYLISTFLAG, 
			          T1.CONTRACT_TYPE,
			          t10.LEASE_TOPRIC) t
			          left join (select t.RECT_ID,t.PAYCOUNT,sum(case  when t.STATE=3 then t.PAY_MONEY end) PAY_MONEY,sum(case  when t.STATE=0 or t.STATE=1 then t.PAY_MONEY end) PAY_MONEYShenhe from T_SUPL_PLAYDETIL t where BACKSTATE='3' and STATUS=0 
group by t.RECT_ID,t.PAYCOUNT) tt on t.RECT_ID=tt.RECT_ID
			    ORDER BY  t.PRCD_ID DESC,t.RECT_STATUS
		]]>
	</select>
	
	
	
	
	<!-- where  STATE not in (1,3,4) -->
	<select id="queryPayMoneyByFirst_count" parameterClass="map" resultClass="java.lang.Integer">
		<!-- <![CDATA[ select COUNT(1) from (
					select  T1.ID,
							T1.RECT_ID,
							T2.LEASE_CODE,
							T1.PAY_MONEY,
							T3.CUST_NAME,
							T4.NAME AREA,
							T5.NAME CLERK_NAME,
							T6.NAME SENSOR_NAME,
							max(T8.BRAND) BRAND,
							T2.LESSOR_TIME,
							T1.STATE
							FROM T_SUPL_PLAYDETIL T1
							LEFT JOIN T_RENT_CONTRACT T2 ON T1.RECT_ID = T2.RECT_ID
							LEFT JOIN T_CUST_CUSTOMER T3 ON T2.CUST_ID = T3.CUST_ID
							LEFT JOIN T_AREA T4 ON T2.PROVINCE_ID = T4.ID
							LEFT JOIN T_USER_USER T5 ON T2.CLERK_ID = T5.ID
							LEFT JOIN T_USER_USER T6 ON T2.SENSOR_ID = T6.ID
							LEFT JOIN T_PRJT_CREDITEQUIPMENT T8 ON (
							select T7.ID from T_PRJT_CREDIT T7 WHERE T2.LEASE_CODE = T7.LEASE_CODE) = T8.CREDIT_ID

							where  T1.BACKSTATE = #BACKSTATE# 
							
			]]>
			2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
		  	<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<![CDATA[ 
		  	 	(T2.SENSOR_ID = #s_employeeId#
		  	 	or T2.CLERK_ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件)
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 T1.EXPECTEDDATE&gt;=cast(#QSTART_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 T1.EXPECTEDDATE&lt;=cast(#QEND_DATE# as datetime)
			</isNotEmpty>
			<isNotEmpty prepend="and" property="PSTART_DATE">
				 T1.PAY_DATE&gt;=cast(#PSTART_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="PEND_DATE">
				 T1.PAY_DATE&lt;=cast(#PEND_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="" property="shen_pi_STATE">
			  <isNotEqual prepend="" property="QSELECT_STATUS" compareValue="9">
			    <isEqual prepend="and" property="shen_pi_STATE" compareValue="0">
						<![CDATA[ t1.STATUS=0 and (T1.STATE=0 or T1.STATE=1) ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="1">
						<![CDATA[ t1.STATUS=0 and T1.STATE=3 ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="2">
						<![CDATA[ t1.STATUS=1  ]]>
					</isEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS is null ]]>
					</isEqual>
					<isNotEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			
		<![CDATA[
				
		  	GROUP BY 
							T1.ID,
							T1.RECT_ID,
							T2.LEASE_CODE,
							T1.PAY_MONEY,
							T3.CUST_NAME,
							T4.NAME,
							T5.NAME,
							T6.NAME,
							T2.LESSOR_TIME,
							T1.STATE,
							T1.DEPARTMENTSTATUS,
							t1.EXAMSTATUS,
							t1.FINANCIALSTATUS,
							t1.MANAGER,
							t1.BACKTYPE,
							t1.BACKSTATE,T1.EXPECTEDDATE
		) t
			 ]]> -->
		<![CDATA[ 
			select count(0) from (
				select  	T1.ID,
							T1.CREDIT_ID,
							T2.LEASE_CODE,
							T1.PAY_MONEY,
							T3.CUST_NAME,
							T4.NAME AREA,
							T5.NAME CLERK_NAME,
							T6.NAME SENSOR_NAME,
							max(T9.RECT_ID)as RECT_ID,
							max(T8.BRAND) BRAND,
							CASE
							WHEN CONVERT(DATE,T9.LESSOR_TIME) = '1900-01-01'
								THEN NULL
							ELSE T9.LESSOR_TIME
							END LESSOR_TIME ,
							T1.STATE,
							T1.DEPARTMENTSTATUS,
							t1.EXAMSTATUS,
							t1.FINANCIALSTATUS,
							t1.MANAGER,
							t1.BACKTYPE,
							t1.BACKSTATE,
							t1.STATUS,
							t1.EXPECTEDDATE,
							CASE
							WHEN CONVERT(DATE,T1.pay_Date) = '1900-01-01'
								THEN NULL
							ELSE T1.PAY_DATE
							END PAY_DATE
							FROM T_SUPL_PLAYDETIL T1
							LEFT JOIN T_PRJT_CREDIT T2 ON T1.CREDIT_ID = T2.ID
							LEFT JOIN T_CUST_CUSTOMER T3 ON T2.CUST_ID = T3.CUST_ID
							LEFT JOIN T_AREA T4 ON T2.PROVINCE_ID = T4.ID
							LEFT JOIN T_USER_USER T5 ON T2.CLERK_ID = T5.ID
							LEFT JOIN T_USER_USER T6 ON T2.SENSOR_ID = T6.ID
							LEFT JOIN T_PRJT_CREDITEQUIPMENT T8 ON T2.ID = T8.CREDIT_ID 
							LEFT JOIN T_RENT_CONTRACT T9 ON T9.PRCD_ID = T2.ID
							where  T1.BACKSTATE = #BACKSTATE#
			]]>
			<!-- <isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]>
		  	</isEqual> -->
		  	<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件) -->
		  	<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<![CDATA[ 
		  	 	(T2.SENSOR_ID = #s_employeeId#
		  	 	or T2.CLERK_ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件) -->
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T2.SENSOR_ID)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
		  	<isNotEmpty prepend="" property="shen_pi_STATE">
			  <isNotEqual prepend="" property="QSELECT_STATUS" compareValue="9">
			    <isEqual prepend="and" property="shen_pi_STATE" compareValue="0">
						<![CDATA[ t1.STATUS=0 and (T1.STATE=0 or T1.STATE=1) ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="1">
						<![CDATA[ t1.STATUS=0 and T1.STATE=3 ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="2">
						<![CDATA[ t1.STATUS=1  ]]>
					</isEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%' OR T1.BACKCOMP LIKE '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 CONVERT(date,T1.EXPECTEDDATE)&gt;=CONVERT(date,#QSTART_DATE#) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 CONVERT(date,T1.EXPECTEDDATE)&lt;=CONVERT(date,#QEND_DATE#) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="PSTART_DATE">
				 CONVERT(date,T1.PAY_DATE)&gt;=CONVERT(date,#PSTART_DATE#) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="PEND_DATE">
				 CONVERT(date,T1.PAY_DATE)&lt;=CONVERT(date,#PEND_DATE#) 
			</isNotEmpty>
			
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ T9.RECT_STATUS is null ]]>
					</isEqual>
					<isNotEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ T9.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 T9.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
		  	<![CDATA[ 
		  	GROUP BY 
							T1.ID,
							T1.CREDIT_ID,
							T2.LEASE_CODE,
							T1.PAY_MONEY,
							T3.CUST_NAME,
							T4.NAME,
							T5.NAME,
							T6.NAME,
							T9.LESSOR_TIME,
							T1.STATE,
							T1.DEPARTMENTSTATUS,
							t1.EXAMSTATUS,
							t1.FINANCIALSTATUS,
							t1.MANAGER,
							t1.BACKTYPE,
							t1.BACKSTATE,
							t1.STATUS,t1.EXPECTEDDATE,
							T1.pay_Date
							)F
		]]>
	</select>
	
	
	<!-- where  STATE not in (1,3,4)  -->
	<!-- modify by xuyuefei 2014/8/27  增加查询拨款方式 -->
	<select id="queryPayMoneyByFirst" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ select  	T1.BACKCOMP,
		                    T1.PAY_WAY,
							T1.ID,
							T1.CREDIT_ID,
							T2.LEASE_CODE,
							T1.PAY_MONEY,
							T3.CUST_NAME,
							T4.NAME AREA,
							T5.NAME CLERK_NAME,
							T6.NAME SENSOR_NAME,
							max(T9.RECT_ID)as RECT_ID,
							max(T8.BRAND) BRAND,
							CASE
							WHEN CONVERT(DATE,T9.LESSOR_TIME) = '1900-01-01'
								THEN NULL
							ELSE T9.LESSOR_TIME
							END LESSOR_TIME ,
							T1.STATE,
							T1.DEPARTMENTSTATUS,
							t1.EXAMSTATUS,
							t1.FINANCIALSTATUS,
							t1.MANAGER,
							t1.BACKTYPE,
							t1.BACKSTATE,
							t1.STATUS,
							t1.EXPECTEDDATE,
							T2.CREDIT_RUNCODE,
							CASE
							WHEN CONVERT(DATE,T1.pay_Date) = '1900-01-01'
								THEN NULL
							ELSE T1.PAY_DATE
							END PAY_DATE,T2.CONTRACT_TYPE,trfss.ID AS FSS_ID,
							T1.PAY_ORDER,
							DD1.DECP_NAME_CN DEPT_NAME,
							T2.vip_flag,convert(date,dateAdd(day,-1,t1.EXPECTEDDATE),32) EXPECTEDDATE_BEFOR
							FROM T_SUPL_PLAYDETIL T1
							LEFT JOIN T_PRJT_CREDIT T2 ON T1.CREDIT_ID = T2.ID
							LEFT JOIN T_CUST_CUSTOMER T3 ON T2.CUST_ID = T3.CUST_ID
							LEFT JOIN T_AREA T4 ON T2.PROVINCE_ID = T4.ID
							LEFT JOIN T_USER_USER T6 ON T2.SENSOR_ID = T6.ID
							LEFT JOIN T_DEPT_DEPARTMENT DD ON DD.ID=T6.DEPT_ID AND DD.STATUS=0
							LEFT JOIN T_DEPT_COMPANY DD1 ON DD1.STATUS=0 AND DD1.DECP_ID=DD.DECP_ID
							LEFT JOIN T_USER_USER T5 ON T6.upper_user = T5.ID
							LEFT JOIN T_PRJT_CREDITEQUIPMENT T8 ON T2.ID = T8.CREDIT_ID 
							LEFT JOIN T_RENT_CONTRACT T9 ON T9.PRCD_ID = T2.ID
							left join T_RENT_FILE_SENDER_STATE trfss on trfss.CREDIT_ID=T1.CREDIT_ID and T1.FSS_ID=trfss.ID and trfss.status='0'
							where  T1.BACKSTATE = #BACKSTATE#
			]]>
			<isNotEmpty prepend="and" property="companyCode">
  					T2.company_code = #companyCode#
			</isNotEmpty>
			<isNotEmpty property="vip_flag">
				<isEqual property="vip_flag" compareValue="0">
					and (T2.vip_flag= #vip_flag# or T2.vip_flag is null)
				</isEqual>
				<isEqual property="vip_flag" compareValue="1">
					and T2.vip_flag = #vip_flag#
				</isEqual>
			</isNotEmpty>
			
			<isEqual property="pay_way" compareValue="1">
				and exists(
				select 0 from T_PRJT_CREDITAPPROPIATE
				where CREDIT_ID = T2.ID
				and [TYPE] = 0
				and STATUS = 0)
			</isEqual>
			<isEqual property="pay_way" compareValue="2">
				and not exists(
				select 0 from T_PRJT_CREDITAPPROPIATE
				where CREDIT_ID = T2.ID
				and [TYPE] = 0
				and STATUS = 0)
			</isEqual>
			
			
			<isNotEmpty prepend="and" property="production_type">
			    T2.production_type = #production_type#
			</isNotEmpty>
			<isEqual property="PAY_ORDER" compareValue="1">
					AND T1.PAY_ORDER=1
			</isEqual>
			<isNotEqual property="PAY_ORDER" compareValue="1">
				<isEqual property="PAY_ORDER" compareValue="0">
				
				</isEqual>
				<isNotEqual property="PAY_ORDER" compareValue="0">
					AND (T1.PAY_ORDER!=1 OR T1.PAY_ORDER IS NULL)
				</isNotEqual>
			</isNotEqual>
			<!-- <isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<![CDATA[ T1.sensor_id = #s_employeeId# ]]>
		  	</isEqual> -->
		  	<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件) -->
		  	<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<![CDATA[ 
		  	 	(T2.SENSOR_ID = #s_employeeId#
		  	 	or T5.ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
		  	<!-- 2011/12/27 Yang Yun Mantis[0000253] (區域主管無法看到該區域之逾期案件) -->
		  	<!-- 2012/01/11 Yang Yun 增加区域筛选功能.Start -->
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T2.SENSOR_ID)
				]]>
			</isEqual>
			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<isNotEmpty property="search_decp">
				and T2.SENSOR_ID in (
					select u.ID from T_DEPT_DEPARTMENT dept
					left join T_USER_USER u on u.DEPT_ID = dept.ID
					where dept.DECP_ID = #search_decp#
				)
			</isNotEmpty>
		  	<isNotEmpty prepend="" property="shen_pi_STATE">
			  <isNotEqual prepend="" property="QSELECT_STATUS" compareValue="9">
			    <isEqual prepend="and" property="shen_pi_STATE" compareValue="0">
						<![CDATA[ t1.STATUS=0 and (T1.STATE=0 or T1.STATE=1) ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="1">
						<![CDATA[ t1.STATUS=0 and T1.STATE=3 ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="2">
						<![CDATA[ t1.STATUS=1  ]]>
					</isEqual>
				</isNotEqual>
			</isNotEmpty>
			<!-- Modify by Michael 2012/02/06 增加供应商的模糊搜索.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%' OR T8.BRAND LIKE '%$QSEARCH_VALUE$%'
				  or T2.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%' OR T1.BACKCOMP LIKE '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			<!-- 修正时间查询的BUG add by ShenQi -->
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 CONVERT(date,T1.EXPECTEDDATE)&gt;=CONVERT(date,#QSTART_DATE#) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 CONVERT(date,T1.EXPECTEDDATE)&lt;=CONVERT(date,#QEND_DATE#) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="PSTART_DATE">
				 CONVERT(date,T1.PAY_DATE)&gt;=CONVERT(date,#PSTART_DATE#) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="PEND_DATE">
				 CONVERT(date,T1.PAY_DATE)&lt;=CONVERT(date,#PEND_DATE#) 
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ T9.RECT_STATUS is null ]]>
					</isEqual>
					<isNotEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ T9.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 T9.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
		  	<![CDATA[ 
		  	GROUP BY 		T1.BACKCOMP,
		  	                T1.PAY_WAY,
							T1.ID,
							T1.CREDIT_ID,
							T2.LEASE_CODE,
							T1.PAY_MONEY,
							T3.CUST_NAME,
							T4.NAME,
							T5.NAME,
							T6.NAME,
							T9.LESSOR_TIME,
							T1.STATE,
							T1.DEPARTMENTSTATUS,
							t1.EXAMSTATUS,
							t1.FINANCIALSTATUS,
							t1.MANAGER,
							t1.BACKTYPE,
							t1.BACKSTATE,
							t1.STATUS,t1.EXPECTEDDATE,
							T1.pay_Date,
							T2.CREDIT_RUNCODE,T2.CONTRACT_TYPE,trfss.ID,T1.PAY_ORDER,
							DD1.DECP_NAME_CN,T2.vip_flag
		]]>
	</select>
	
	
	<!-- where  STATE not in (1,3,4) -->
	<select id="queryPayMoneyByFirstInsusrance_count" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[ select COUNT(1) from (
					select  	t1.*
							FROM T_SUPL_PLAYDETIL T1
							where  T1.BACKSTATE = #BACKSTATE#
							
			]]>
			
			<isNotEmpty prepend="" property="shen_pi_STATE">
			  <isNotEqual prepend="" property="QSELECT_STATUS" compareValue="9">
			    <isEqual prepend="and" property="shen_pi_STATE" compareValue="0">
						<![CDATA[ t1.STATUS=0 and (T1.STATE=0 or T1.STATE=1) ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="1">
						<![CDATA[ t1.STATUS=0 and T1.STATE=3 ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="2">
						<![CDATA[ t1.STATUS=1  ]]>
					</isEqual>
				</isNotEqual>
			</isNotEmpty>
		<![CDATA[
				
		 
		) t
			 ]]>
	</select>
	
	
	<!-- where  STATE not in (1,3,4)  -->
	<select id="queryPayMoneyByFirstInsusrance" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ select  	t1.*
							FROM T_SUPL_PLAYDETIL T1
							
							where  T1.BACKSTATE = #BACKSTATE#
			]]>
			<isNotEmpty prepend="and" property="companyCode">
				T1.COMPANY_CODE = #companyCode#
			</isNotEmpty>
			<isNotEmpty prepend="" property="shen_pi_STATE">
			  <isNotEqual prepend="" property="QSELECT_STATUS" compareValue="9">
			    <isEqual prepend="and" property="shen_pi_STATE" compareValue="0">
						<![CDATA[ t1.STATUS=0 and (T1.STATE=0 or T1.STATE=1) ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="1">
						<![CDATA[ t1.STATUS=0 and T1.STATE=3 ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="2">
						<![CDATA[ t1.STATUS=1  ]]>
					</isEqual>
				</isNotEqual>
			</isNotEmpty>
	</select>
	
	<select id="payMoneyManager" parameterClass="map" resultClass="java.util.HashMap">
	<!-- 
		<![CDATA[
			select top 1 t.CREDIT_ID,t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,(ISNULL(T3.LEASE_TOPRIC,0) - ISNULL(T3.PLEDGE_ENTER_MCTOAG,0) - ISNULL(t3.PLEDGE_ENTER_AG,0)) LEASE_TOPRIC,T3.LEASE_TOPRIC LEASE_TOPRIC1,T3.PLEDGE_REALPRIC,T3.PLEDGE_AVE_PRICE
,T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,t6.NAME,getDate() as time,T8.ID,T8.APPLICATION_DATE,T8.EXPECTEDDATE,
T8.BANK_ACCOUNT,T8.BANK_NAME,(case
when DATEDIFF(day,'1900-01-01',T8.PAY_DATE)<=1
then ''
when  DATEDIFF(day,'1900-01-01',T8.PAY_DATE)-1>0
then T8.PAY_DATE
end
)
as PAY_DATE,T8.PAY_MONEY,T8.PAY_WAY,T8.PAYCOUNT,T8.PAYED,T9.FLAG,T8.DEPARTMENTSTATUS,
							t8.EXAMSTATUS,
							t8.FINANCIALSTATUS,
							t8.MANAGER,
							t8.BACKTYPE,
							t8.BACKCOMP,
							t8.BACKSTATE,
							t8.STATUS,
							T3.PLEDGE_ENTER_MCTOAG,
							T3.PLEDGE_ENTER_CMPRICE, 
							T3.PLEDGE_ENTER_AGRATE,
							T3.PLEDGE_ENTER_AG,
							T3.PLEDGE_ENTER_MCTOAGRATE,
							t8.STATE
from T_ t 
LEFT JOIN T_CUST_CUSTOMER T1 ON T.CUST_ID = T1.CUST_ID
LEFT JOIN T_PRJT_CREDIT T2 ON t.PRCD_ID=T2.ID
LEFT JOIN t_prjt_creditscheme T3 ON T3.CREDIT_ID=T2.ID
LEFT JOIN T_PRJT_CREDITEQUIPMENT T4 ON T2.ID = T4.CREDIT_ID
left join T_SUPL_EQUIPMENT t5 on t4.sueq_id=t5.sueq_id
left join T_SUPL_SUPPLIER t6 on t5.supplier_id=t6.id
LEFT JOIN T_SUPL_SUPPLIERBANKACCOUNT T7 ON  T7.SUPL_ID=t6.ID
LEFT JOIN T_SUPL_PLAYDETIL T8 ON  T8.CREDIT_ID=t.RECT_ID
LEFT JOIN T_DATA_DICTIONARY T9 ON  T8.PAY_WAY=T9.DATA_ID
where t.STATUS='0' and T3.STATUS='0' and t.RECT_ID=#RECT_ID# and T8.ID=#payMoneyId#
group by t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,T3.LEASE_TOPRIC,T3.PLEDGE_REALPRIC,T3.PLEDGE_AVE_PRICE
,T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,t6.NAME,t.RECT_ID,T8.ID,T8.APPLICATION_DATE,
T8.BANK_ACCOUNT,T8.BANK_NAME,T8.PAY_DATE,T8.PAY_MONEY,T8.PAY_WAY,T8.PAYCOUNT,T8.PAYED,T9.FLAG,T8.DEPARTMENTSTATUS,
							t8.EXAMSTATUS,
							t8.FINANCIALSTATUS,
							t8.MANAGER,
							t8.BACKTYPE,
							t8.BACKCOMP,
							t8.BACKSTATE,
							t8.STATUS,T8.EXPECTEDDATE,
							T3.PLEDGE_ENTER_MCTOAG,
							T3.PLEDGE_ENTER_CMPRICE, 
							T3.PLEDGE_ENTER_AGRATE,
							T3.PLEDGE_ENTER_AG,
							T3.PLEDGE_ENTER_MCTOAGRATE,
							t8.STATE
		]]>
		-->
		<![CDATA[
			select top 1 t.ID CREDIT_ID,t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,(ISNULL(T3.LEASE_TOPRIC,0) - ISNULL(T3.PLEDGE_ENTER_MCTOAG,0) - ISNULL(t3.PLEDGE_ENTER_AG,0)) LEASE_TOPRIC,T3.LEASE_TOPRIC LEASE_TOPRIC1,T3.PLEDGE_REALPRIC,T3.PLEDGE_AVE_PRICE
,T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,t6.NAME,getDate() as time,T8.ID,T8.APPLICATION_DATE,T8.EXPECTEDDATE,
T8.BANK_ACCOUNT,T8.BANK_NAME,(case
when DATEDIFF(day,'1900-01-01',T8.PAY_DATE)<=1
then ''
when  DATEDIFF(day,'1900-01-01',T8.PAY_DATE)-1>0
then T8.PAY_DATE
end
)
as PAY_DATE,T8.PAY_MONEY,T8.PAY_WAY,T8.PAYCOUNT,T8.PAYED,T9.FLAG,T8.DEPARTMENTSTATUS,
							t8.EXAMSTATUS,
							t8.FINANCIALSTATUS,
							t8.MANAGER,
							t8.BACKTYPE,
							t8.BACKCOMP,
							t8.BACKSTATE,
							t8.STATUS,
							T3.PLEDGE_ENTER_MCTOAG,
							T3.PLEDGE_ENTER_CMPRICE, 
							T3.PLEDGE_ENTER_AGRATE,
							T3.PLEDGE_ENTER_AG,
							T3.PLEDGE_ENTER_MCTOAGRATE,
							t8.STATE,
							T8.PAY_WAY,
							T8.ENDORSER_1,
							T8.ENDORSER_2
from T_PRJT_CREDIT t 
LEFT JOIN T_CUST_CUSTOMER T1 ON T.CUST_ID = T1.CUST_ID
LEFT JOIN T_RENT_CONTRACT T2 ON t.ID=T2.PRCD_ID
LEFT JOIN t_prjt_creditscheme T3 ON T3.CREDIT_ID=T.ID
LEFT JOIN T_PRJT_CREDITEQUIPMENT T4 ON T.ID = T4.CREDIT_ID
left join T_SUPL_EQUIPMENT t5 on t4.sueq_id=t5.sueq_id
left join T_SUPL_SUPPLIER t6 on t5.supplier_id=t6.id
LEFT JOIN T_SUPL_SUPPLIERBANKACCOUNT T7 ON  T7.SUPL_ID=t6.ID
LEFT JOIN T_SUPL_PLAYDETIL T8 ON  T8.CREDIT_ID =t.ID
LEFT JOIN T_DATA_DICTIONARY T9 ON  T8.PAY_WAY=T9.CODE AND T9.type=#dataType# AND T9.STATUS = 0
where t.STATUS='0' and T3.STATUS='0' and t.ID=#CREDIT_ID# and T8.ID=#payMoneyId#
group by t.LEASE_CODE,t1.CUST_NAME,T3.START_DATE,T3.LEASE_TOPRIC,T3.PLEDGE_REALPRIC,T3.PLEDGE_AVE_PRICE
,T3.PLEDGE_BACK_PRICE,T3.PLEDGE_LAST_PRICE,T3.PLEDGE_ENTER_CMRATE,t6.NAME,t.ID,T8.ID,T8.APPLICATION_DATE,
T8.BANK_ACCOUNT,T8.BANK_NAME,T8.PAY_DATE,T8.PAY_MONEY,T8.PAY_WAY,T8.PAYCOUNT,T8.PAYED,T9.FLAG,T8.DEPARTMENTSTATUS,
							t8.EXAMSTATUS,
							t8.FINANCIALSTATUS,
							t8.MANAGER,
							t8.BACKTYPE,
							t8.BACKCOMP,
							t8.BACKSTATE,
							t8.STATUS,T8.EXPECTEDDATE,
							T3.PLEDGE_ENTER_MCTOAG,
							T3.PLEDGE_ENTER_CMPRICE, 
							T3.PLEDGE_ENTER_AGRATE,
							T3.PLEDGE_ENTER_AG,
							T3.PLEDGE_ENTER_MCTOAGRATE,
							t8.STATE,
							T8.PAY_WAY,
							T8.ENDORSER_1,
							T8.ENDORSER_2
		]]>
	</select>
	<!-- 业务部审核 设备款 -->
	<update id="updateDepartMentById" parameterClass="map">
	<![CDATA[
	 update T_SUPL_PLAYDETIL set DEPARTMENTSTATUS=#Num#,REMARK=#REMARK#,DEPARTMENT_USER_ID=#s_employeeId#,DEPARTMENT_DATE=getDate() 
	 ]]>
	 	<isEqual property="Num" compareValue="2">
						,MANAGER = 2
						,STATUS=1
		</isEqual>
		<![CDATA[
	 where ID=#backId#
	]]>
	</update>  
	
	<update id="updateExamById" parameterClass="map">
	<![CDATA[
	  update T_SUPL_PLAYDETIL set EXAMSTATUS=#Num# 
	  ]]>
	 	<isEqual property="Num" compareValue="2">
						,MANAGER = 2
						,STATUS=1
		</isEqual>
		<![CDATA[
	  where ID=#backId#
	]]>
	</update>
	
	<!-- modify by xuyuefei 2014/8/27 -->
	<!-- 新增更新账号 -->
	<update id="updateFinancialById" parameterClass="map">
	<![CDATA[
	  update T_SUPL_PLAYDETIL set  FINANCIALSTATUS=#Num#,COMPANY_PAY_ACCOUNT=#account# 
	  ]]>
	 	<isEqual property="Num" compareValue="2">
						,MANAGER = 1
						,STATUS=1
		</isEqual>
		<isNotEmpty prepend="" property="BACKSTATE">
		    <isNotEqual property="BACKSTATE" compareValue="0">
		       <isEqual property="Num" compareValue="1">
						,MANAGER = 1,STATE=1,DEPARTMENTSTATUS=1
		      </isEqual>
		    </isNotEqual>
		    <isEqual property="BACKSTATE" compareValue="0">
		       <isEqual property="Num" compareValue="1">
						,MANAGER = 1,STATE=1
		      </isEqual>
		    </isEqual>
		</isNotEmpty>
		
		<![CDATA[
	  where ID=#backId#
	]]>
	</update>
	<!--  
	<update id="updateManagerById" parameterClass="map">
	<![CDATA[
	  update T_SUPL_PLAYDETIL set MANAGER=#Num#
	   ]]>
	 	<isEqual property="Num" compareValue="2">
						,STATUS=1
		</isEqual>
		<isEqual property="Num" compareValue="1">
						,STATE=1
		</isEqual>
		<![CDATA[
	]]>
	 where ID=#backId#
	</update>  -->
	<select id="passwordControlTablePDF" parameterClass="map" resultClass="java.util.HashMap">
			<!-- 
			select 
				t2.LEASE_CODE    LEASE_CODE ,
				t3.CUST_NAME	 CUST_NAME ,
				t2.CUST_PHONE	 CUST_PHONE ,
				t2.CUST_LINKMAN	 CUST_LINKMAN ,
				t2.CUST_FAX		 CUST_FAX ,
				t3.NATU_MOBILE   NATU_MOBILE,
				
				t5.NAME		NAME,
				T5.LINKMAN_TELPHONE 	LINKMAN_TELPHONE,
				T5.LINKMAN_NAME 		LINKMAN_NAME,
				T5.LINKMAN_JOB 			LINKMAN_JOB,
				T5.LINKMAN_MOBILE 		LINKMAN_MOBILE,
				T5.LINKMAN_EMAIL 		LINKMAN_EMAIL,
				
				t4.THING_NAME	THING_NAME ,
				t4.MODEL_SPEC	MODEL_SPEC ,
				t4.AMOUNT		AMOUNT 
			from 
			    T_PRJT_CREDIT t1
				LEFT JOIN t_rent_contract t2 ON t2.PRCD_ID = t1.ID
				LEFT JOIN T_CUST_CUSTOMER t3 ON t3.CUST_ID = t2.CUST_ID
				LEFT JOIN t_RENT_CONTRACTDETAIL T4 ON T4.RECT_ID = t2.RECT_ID
				LEFT JOIN T_EQMT_EQUIPMENT T7 ON T7.EQMT_ID=T4.EQMT_ID
				LEFT JOIN T_SUPL_EQUIPMENT T6 ON T6.SUEQ_ID=T7.SUEQ_ID
				LEFT JOIN T_SUPL_SUPPLIER t5 ON t5.ID=T6.SUPPLIER_ID
			where 
				t2.STATUS=0 
				AND t4.EQMT_ID = #eqmt_id#
				 -->
				 
				 select 
				t2.LEASE_CODE    LEASE_CODE ,
				t3.CUST_NAME	 CUST_NAME ,
				t2.CUST_PHONE	 CUST_PHONE ,
				t2.CUST_LINKMAN	 CUST_LINKMAN ,
				t2.CUST_FAX		 CUST_FAX ,
				t3.NATU_MOBILE   NATU_MOBILE,
				
				t5.NAME		NAME,
				T5.LINKMAN_TELPHONE 	LINKMAN_TELPHONE,
				T5.LINKMAN_NAME 		LINKMAN_NAME,
				T5.LINKMAN_JOB 			LINKMAN_JOB,
				T5.LINKMAN_MOBILE 		LINKMAN_MOBILE,
				T5.LINKMAN_EMAIL 		LINKMAN_EMAIL,
				
				t9.NAME	THING_NAME ,
				t8.NAME	MODEL_SPEC ,
				t4.AMOUNT		AMOUNT 
			from 
			    T_PRJT_CREDIT t1
				LEFT JOIN t_rent_contract t2 ON t2.PRCD_ID = t1.ID
				LEFT JOIN T_CUST_CUSTOMER t3 ON t3.CUST_ID = t2.CUST_ID
				LEFT JOIN t_RENT_CONTRACTDETAIL T4 ON T4.RECT_ID = t2.RECT_ID
				LEFT JOIN T_EQMT_EQUIPMENT T7 ON T7.EQMT_ID=T4.EQMT_ID
				LEFT JOIN T_SUPL_EQUIPMENT T6 ON T6.SUEQ_ID=T7.SUEQ_ID
				LEFT JOIN T_SUPL_SUPPLIER t5 ON t5.ID=T6.SUPPLIER_ID
				 LEFT JOIN T_PRDC_PRODUCT T8 ON T8.ID = T6.PRODUCT_ID and T8.STATUS=0
			  LEFT JOIN T_PRDC_KIND T9 ON T9.ID = T8.KIND_ID
			where 
				t2.STATUS=0 
				AND t4.EQMT_ID = #eqmt_id#
	</select>
	<select id="passwordControlCreditTablePDF" parameterClass="map" resultClass="java.util.HashMap">
		select 
				t1.LEASE_CODE    LEASE_CODE ,
				t3.CUST_NAME	 CUST_NAME ,
				t3.NATU_MOBILE   NATU_MOBILE,
				
				T8.TELEPHONE , <!-- 公司电话 -->
				T8.LINK_MAN ,   <!-- 联系人姓名 -->
				T8.LINK_JOB ,  <!--联系人职称 -->
				T8.LINK_MOBILE_NUMBER1 , <!--联系人手机 -->
				T8.LINK_EMAIL ,     <!--联系人email -->
				T8.FAX ,            <!--公司传真-->
				
				T9.RECT_ID ,
				T9.CUST_PHONE ,<!--公司电话 -->
				T9.CUST_LINKMAN , <!--联系人 -->
				T9.CUST_FAX , <!--传真 -->
	
				t5.NAME		NAME,
				T5.LINKMAN_TELPHONE 	LINKMAN_TELPHONE,
				T5.LINKMAN_NAME 		LINKMAN_NAME,
				T5.LINKMAN_JOB 			LINKMAN_JOB,
				T5.LINKMAN_MOBILE 		LINKMAN_MOBILE,
				T5.LINKMAN_EMAIL 		LINKMAN_EMAIL,
				
				t2.THING_NAME	THING_NAME ,
				t2.MODEL_SPEC	MODEL_SPEC ,
				t2.AMOUNT		AMOUNT 
			from 
			    T_PRJT_CREDIT t1
				LEFT JOIN T_PRJT_CREDITEQUIPMENT t2 ON t2.CREDIT_ID = t1.ID
				LEFT JOIN T_CUST_CUSTOMER t3 ON t3.CUST_ID = t1.CUST_ID
				LEFT JOIN T_SUPL_EQUIPMENT T6 ON T6.SUEQ_ID=t2.SUEQ_ID
				LEFT JOIN T_SUPL_SUPPLIER t5 ON t5.ID=T6.SUPPLIER_ID
				LEFT JOIN T_DEPT_COMPANY T7 ON T7.DECP_ID = t1.DECP_ID
				LEFT JOIN t_prjt_creditcustomercorp T8 ON T8.CREDIT_ID = t1.ID
				LEFT JOIN T_RENT_CONTRACT T9 ON T9.PRCD_ID = t1.ID
			where 
				t1.STATUS=0 
				AND t2.PRCE_ID = #eqmt_id#
	</select>
	<!-- 
	<select id="passwordControlCreditTablePDF" parameterClass="map" resultClass="java.util.HashMap">
			select 
				t1.LEASE_CODE    LEASE_CODE ,
				t3.CUST_NAME	 CUST_NAME ,
				t3.NATU_MOBILE   NATU_MOBILE,
				
				t5.NAME		NAME,
				T5.LINKMAN_TELPHONE 	LINKMAN_TELPHONE,
				T5.LINKMAN_NAME 		LINKMAN_NAME,
				T5.LINKMAN_JOB 			LINKMAN_JOB,
				T5.LINKMAN_MOBILE 		LINKMAN_MOBILE,
				T5.LINKMAN_EMAIL 		LINKMAN_EMAIL,
				
				t2.THING_NAME	THING_NAME ,
				t2.MODEL_SPEC	MODEL_SPEC ,
				t2.AMOUNT		AMOUNT 
			from 
			    T_PRJT_CREDIT t1
				LEFT JOIN T_PRJT_CREDITEQUIPMENT t2 ON t2.CREDIT_ID = t1.ID
				LEFT JOIN T_CUST_CUSTOMER t3 ON t3.CUST_ID = t1.CUST_ID
				LEFT JOIN T_SUPL_EQUIPMENT T6 ON T6.SUEQ_ID=t2.SUEQ_ID
				LEFT JOIN T_SUPL_SUPPLIER t5 ON t5.ID=T6.SUPPLIER_ID
			where 
				t1.STATUS=0 
				AND t2.PRCE_ID = #eqmt_id#
	</select>
	 -->
	<select id="expEqmtPriceAgreepdf" parameterClass="map" resultClass="java.util.HashMap">
			select  t2.PLEDGE_ENTER_AG gysh,
					t2.PLEDGE_ENTER_AGRATE gyshR,
					(isnull(t2.PLEDGE_ENTER_AG,0)+isnull(t2.PLEDGE_ENTER_AGRATE,0)) HE,
					t2.PLEDGE_ENTER_CMPRICE MC,
					isnull(t2.LEASE_TOPRIC,0) - isnull(PLEDGE_ENTER_CMPRICE,0)  MCTOAG, 
					t1.LEASE_CODE LEASE_CODE,
					t1.CUST_NAME CUST_NAME,
					t8.BRAND BRAND,
					t1.PRCD_ID PRCD_ID ,
					t5.PUCT_CODE PUCT_CODE,
			        convert(varchar(10),t5.SIGN_DATE,120) SIGN_DATE,
			        t2.PLEDGE_ENTER_AG ,t2.PLEDGE_ENTER_MCTOAG,
			        t1.LEASE_TOPRIC
			from  T_RENT_CONTRACT t1 
			left join  T_RENT_CONTRACTSCHEMA  t2 on  t1.RECT_ID=t2.RECT_ID 
			left join  T_PRJT_CREDIT  t3 on t1.PRCD_ID= t3.ID
			left join T_PUCS_CONTRACT t5 on t5.RECT_ID=t3.ID 
			left join T_RENT_CONTRACTDETAIL t8 on t8.RECT_ID=t1.RECT_ID
			where  t1.STATUS=0 and t2.STATUS=0  and t3.STATUS=0  and t8.STATUS=0 and t1.PRCD_ID=#PRCD_ID#  and t3.CONTRACT_TYPE=#CONTRACT_TYPE#
	</select>
    <select id="isCONTRACT" parameterClass="map" resultClass="java.lang.Integer">
			select COUNT(*)  from  T_RENT_CONTRACT where PRCD_ID=#PRCD_ID# AND STATUS = 0
	</select>
	<select id="expEqmtPriceAgreenopdf" parameterClass="map" resultClass="java.util.HashMap">
	select  t.PLEDGE_ENTER_AG  gysh,
	        t.PLEDGE_ENTER_AGRATE gyshR,
	        (isnull(t.PLEDGE_ENTER_AG,0)+isnull(t.PLEDGE_ENTER_AGRATE,0)) HE,
			isnull(t.LEASE_TOPRIC,0) - isnull(t.PLEDGE_ENTER_CMPRICE,0)  MCTOAG,
			t.PLEDGE_ENTER_CMPRICE MC,
			T7.BRAND BRAND,
			T3.CUST_NAME CUST_NAME,
			t5.PUCT_CODE PUCT_CODE,
			t1.LEASE_CODE LEASE_CODE, 
			convert(varchar(10),t5.SIGN_DATE,120) SIGN_DATE,
			t.PLEDGE_ENTER_AG ,t.PLEDGE_ENTER_MCTOAG,
			t.LEASE_TOPRIC
	from T_PRJT_CREDITSCHEME t 
    join T_PRJT_CREDIT  t1 on t.CREDIT_ID=t1.ID
    LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
    LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
    left join T_PUCS_CONTRACT t5 on t5.RECT_ID=t1.ID  
    where  t.STATUS=0 and T3.STATUS=0 and t1.STATUS=0 and t1.ID=#PRCD_ID#  and t1.CONTRACT_TYPE=#CONTRACT_TYPE#
	</select>
	
	
	<!-- 查询奖金未拨款的有多少个 -->
	<select id="bonusAllM_count" parameterClass="map" resultClass="java.lang.Integer">
	<![CDATA[
	select COUNT(*) from (
select  Max(UP_DATE) up_date,CONTRACT_CODE,BONUS_NAME,TYPE_NUMBER,money_value = stuff((select ',' + [UPMONEY]+'-'+TYPE_NAME from T_BONUS_DETAIL t 
  where STATUS=0 and state='0' and t.TYPE_NUMBER = T_BONUS_DETAIL.TYPE_NUMBER for xml path('')) , 1 , 1 , '')
 from T_BONUS_DETAIL where STATUS=0 and state='0'  and TYPE_NUMBER not in (select BONUSID from T_PAY_BONUS_JOIN where PAYMONEYID in (select ID from T_SUPL_PLAYDETIL where STATUS not in (1) and BACKSTATE=2))
  ]]>
  <isNotEmpty prepend="" property="content">
			<![CDATA[
				 and (CONTRACT_CODE LIKE '%$content$%' 
				 	OR BONUS_NAME LIKE '%$content$%' 
				 	)
			  ]]>
		</isNotEmpty>
		<isNotEmpty prepend="" property="update">
			<![CDATA[
				 and  DATEDIFF(day,#update#,up_date)=0
			  ]]>
		</isNotEmpty>
  <![CDATA[
   group by TYPE_NUMBER,CONTRACT_CODE,BONUS_NAME) t
     ]]>
	</select>
	
	<!-- 查询奖金未拨款 -->
	<select id="bonusAllM" parameterClass="map" resultClass="java.util.HashMap">
	<![CDATA[
select  MAX(ID) ids,Max(UP_DATE) up_date,CONTRACT_CODE,BONUS_NAME,TYPE_NUMBER,money_value = stuff((select ',' + [UPMONEY]+'-'+TYPE_NAME from T_BONUS_DETAIL t 
  where STATUS=0 and state='0' and t.TYPE_NUMBER = T_BONUS_DETAIL.TYPE_NUMBER for xml path('')) , 1 , 1 , '')
 from T_BONUS_DETAIL where STATUS=0 and state='0'  and TYPE_NUMBER not in (select BONUSID from T_PAY_BONUS_JOIN where PAYMONEYID in (select ID from T_SUPL_PLAYDETIL where STATUS not in (1) and BACKSTATE=2))
 ]]>
 <isNotEmpty prepend="" property="content">
			<![CDATA[
				 and (CONTRACT_CODE LIKE '%$content$%' 
				 	OR BONUS_NAME LIKE '%$content$%' 
				 	)
			  ]]>
		</isNotEmpty>
		<isNotEmpty prepend="" property="update">
			<![CDATA[
				 and  DATEDIFF(day,#update#,up_date)=0
			  ]]>
		</isNotEmpty>
 <![CDATA[
  group by TYPE_NUMBER,CONTRACT_CODE,BONUS_NAME
  order by ids desc
  ]]>
	</select>
	
	<!--  通过type_number查询钱数 -->
	<select id="bonusMoneyByNum"  parameterClass="map" resultClass="java.util.HashMap" >
		select upmoney from t_bonus_detail where type_number=#type_number# and status=0
	</select>
	
	<!-- 新增一条付款记录(奖金) -->
 	<insert id="createPayMoneyManagerByBonus" parameterClass="map">
		<![CDATA[
			insert into T_SUPL_PLAYDETIL
			  ( APPLICATION_DATE, PAY_MONEY, PAY_WAY, CREATE_DATE, CREATE_ID, MODIFY_DATE, MODIFY_ID, STATUS,PAYCOUNT,PAYED,STATE,BACKSTATE,EXPECTEDDATE,BANK_NAME,BANK_ACCOUNT,BACKCOMP)
			values
			  (convert(datetime,convert(varchar,(#application_date#),23)),#pay_money#,
			  #pay_way#,convert(datetime,convert(varchar,(getdate()),23)),#id#,convert(datetime,convert(varchar,(getdate()),23)),#id#,0,#pay_money#,#pay_money#,0,2,#expecteddate#,#bank_name#,#bank_account#,#payByName#)
		]]>
		<selectKey resultClass="java.lang.Long" keyProperty="ID">
			<![CDATA[	select @@IDENTITY as ID  ]]>
		</selectKey>
	</insert>
	
	
	<!-- 插入奖金和付款表中间表 -->
	<insert id="createPayMoneyBonusJoin" parameterClass="map">
		<![CDATA[
			insert into T_PAY_BONUS_JOIN (PAYMONEYID,BONUSID) values(#numId#,#insu_id#)
		]]>
	</insert>
	
	<select id="userDecpName"  parameterClass="map" resultClass="java.util.HashMap">
		 select DEPT_NAME from T_DEPT_DEPARTMENT t
  left join T_USER_USER t1 on t.ID=t1.DEPT_ID and t1.STATUS=0
  where t1.NAME=#backComp# and t1.STATUS=0
	</select>
    <!-- 查询拨款总额   -->
	<select id="playdetilTOTAL" parameterClass="map" resultClass="java.lang.Double">
		<![CDATA[
			SELECT ISNULL(SUM(PAY_MONEY),0)
			FROM T_SUPL_PLAYDETIL 
			WHERE
				STATUS = 0
				AND STATE != 2
				AND STATE != 4
				AND BACKSTATE = 0
				AND CREDIT_ID = #CREDIT_ID#
			GROUP BY CREDIT_ID
		]]>
	</select>
	<!-- 导出合同资料 -->
	<select id="contractExcel" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT DISTINCT
				t.LEASE_CODE AS HTH,
				T.CUST_NAME AS CZR, 
				t2.NAME AS SHENG, 
				t3.NAME AS SHI, 
				ISNULL(t4.NAME, '') AS QU, 
				t7.NAME AS ZHUGUAN, 
				t6.NAME AS YWY, 
				ROUND(t5.TR_IRR_RATE,3) AS SJTR, 
				t.LEASE_TOPRIC AS WSZJE,
				t5.PLEDGE_PRICE AS BZJ, 
				ROUND(t5.TR_RATE,3) AS KHTR, 
				t5.LEASE_PERIOD AS QS, 
				CONVERT(VARCHAR, t5.START_DATE, 23) AS QZRQ, 
				CONVERT(VARCHAR, t8.CREATE_TIME,23) AS PSTGR,
				REPLACE(CONVERT(VARCHAR, T9.PAY_DATE,23) ,'1900-01-01','') AS SJZFR,
				ttw.pv_price pv_price
			FROM
				T_RENT_CONTRACT AS t 
				LEFT OUTER JOIN	T_CUST_CUSTOMER AS t1 ON t.CUST_ID = t1.CUST_ID 
				LEFT OUTER JOIN T_AREA AS t2 ON t.PROVINCE_ID = t2.ID 
				LEFT OUTER JOIN T_AREA AS t3 ON t.CITY_ID = t3.ID 
				LEFT OUTER JOIN T_AREA AS t4 ON t.area_id = t4.ID 
				LEFT OUTER JOIN T_RENT_CONTRACTSCHEMA AS t5 ON t.RECT_ID = t5.RECT_ID 
				LEFT OUTER JOIN T_USER_USER AS t6 ON t6.ID = t.SENSOR_ID 
				LEFT OUTER JOIN T_USER_USER AS t7 ON t.CLERK_ID = t7.ID 
				LEFT OUTER JOIN T_PRJT_CREDIT AS y ON t.LEASE_CODE = y.LEASE_CODE AND y.STATUS = 0 
				LEFT OUTER JOIN (SELECT t1.PRC_ID, t1.CREDIT_ID, tt.CREATE_TIME
			                     FROM 
									(  SELECT MAX(PRC_ID) AS PRC_ID, CREDIT_ID
			                           FROM T_PRJT_RISK_CONTROL AS t
			                           GROUP BY CREDIT_ID
			                         ) AS t 
									LEFT OUTER JOIN T_PRJT_RISK_CONTROL AS t1 ON t.PRC_ID = t1.PRC_ID
									LEFT OUTER JOIN (SELECT t1.PRCM_ID, t1.PRC_ID, t1.CREATE_TIME
			                                         FROM (SELECT MAX(PRCM_ID) AS PRCM_ID, PRC_ID
			                                               FROM T_PRJT_RISK_CONTROLMEMO AS t
			                                               GROUP BY PRC_ID
			                                               ) AS t 
			                                         LEFT OUTER JOIN T_PRJT_RISK_CONTROLMEMO AS t1 ON t.PRCM_ID = t1.PRCM_ID
			                                        ) AS tt ON t.PRC_ID = tt.PRC_ID
			                       WHERE (t1.STATE = 1) AND (t1.STATUS = 0)
								 ) AS t8 ON y.ID = t8.CREDIT_ID
				LEFT JOIN (SELECT CREDIT_ID ,MIN(PAY_DATE) PAY_DATE FROM T_SUPL_PLAYDETIL WHERE STATUS = 0 GROUP BY CREDIT_ID)T9 ON T9.CREDIT_ID = T.PRCD_ID
				left join (
												select 
								sum((t1.REN_PRICE-t1.SALES_TAX-t1.REAL_OWN_PRICE*((t.LOAN_RATE+t.MANAGE_RATE)/100)/12*t.LEASE_TERM)/
								POWER(1+t.LOAN_RATE/100/12,t1.PERIOD_NUM)) pv_price,
								t.RECT_ID
								from T_RENT_COLLECTIONPLAN t 
								left join T_RENT_COLLECTIONDETAIL t1 on t.RECP_ID=t1.RECP_ID
								where t.STATUS=0
								group by t.RECT_ID
							) ttw on t.rect_id=ttw.rect_id
			WHERE  (t.STATUS = 0) AND (y.LEASE_CODE IN (SELECT LEASE_CODE FROM T_RENT_CONTRACT))
		]]>
		<isNotEmpty prepend="and" property="ids">
				T.PRCD_ID IN
			<iterate property="ids" open="(" close=")" conjunction=",">
				#ids[]#
			</iterate>
		</isNotEmpty>
			ORDER BY Y.ID DESC
	</select>
	<insert id="createManagerFee"   parameterClass="map">
	 <![CDATA[
		insert into t_rent_contract_feelist
		  (
		   rect_id,
		   FEE_SET_ID,
		   CREATE_SHOW_NAME,
		   FEE,
		   create_time,
		   create_id,
		   IS_LEASERZE_COST,
		   CREATE_FILED_NAME,SOURCE_CODE
		   )
		values
		  (
		   #RECT_ID#,
		   #FEE_SET_ID#,
		   #CREATE_SHOW_NAME#,
		   #FEE#,
		   getdate(),
		   #CREATE_ID#,
		   #IS_LEASERZE_COST#,
		   #CREATE_FILED_NAME#,#SOURCE_CODE#
		   )
	 ]]> 
	</insert>
	
	<!--Add By Michael 2012 1/14  -->
	<!--查询报告费用明细  影响概算成本为1 不影响为0 -->
		<select id="getCreditFeeListRZE" parameterClass="map" resultClass="java.util.HashMap">
		select * from t_rent_contract_feelist where is_leaserze_cost='1' and RECT_ID=#RECT_ID#
	</select>
	<select id="getCreditFeeList" parameterClass="map" resultClass="java.util.HashMap">
		select * from t_rent_contract_feelist where is_leaserze_cost='0' and  RECT_ID=#RECT_ID#
	</select>

	<!--查询费用设定明细  影响概算成本为1 不影响为0 -->
	<select id="getFeeSetListRZE" parameterClass="map" resultClass="java.util.HashMap">
		select * from t_rent_paylist_feeset where is_leaserze_cost='1' and  status=0
			and id not in (select fee_set_id from t_rent_contract_feelist where is_leaserze_cost='1' and RECT_ID=#RECT_ID#)
	</select>	
	<select id="getFeeSetList" parameterClass="map" resultClass="java.util.HashMap">
		select * from t_rent_paylist_feeset where is_leaserze_cost='0' and  status=0
			and id not in (select fee_set_id from t_rent_contract_feelist where is_leaserze_cost='0' and RECT_ID=#RECT_ID#)
	</select>
	
	 <select id="getTotalFeeByRectID" parameterClass="map" resultClass="java.util.HashMap">
	 	<![CDATA[
	 		select isnull(fee,0) fee from t_rent_contract_feelist where is_leaserze_cost='1' and RECT_ID=#RECT_ID#	
	 	]]>
	 </select>
	 
	 	 <select id="sumTotalFeeByRectID" parameterClass="map" resultClass="java.lang.Double">
	 	<![CDATA[
	 		select isnull(sum(fee),0) fee from t_rent_contract_feelist where is_leaserze_cost='1' and RECT_ID=#RECT_ID#	
	 	]]>
	 </select>
	 
	 <!-- 检查合同浏览中的合同是否已经审核通过,如果审核通过则在T_RENT_CONTRACT表中会有数据 -->
	 <select id="checkIsAudit" parameterClass="map" resultClass="java.lang.String">
	        SELECT RECT_ID FROM t_rent_contract WHERE PRCD_ID IN ($RECT_ID$) 
	 </select>
	 
	 <update id="updateExpectedDate">
	        UPDATE T_SUPL_PLAYDETIL SET EXPECTEDDATE=#expecteddate# 
 			 WHERE CREDIT_ID=#CREDIT_ID# AND ID=#payMoneyId#
	 </update>
	 
	 <select id="equipmentSum" resultClass="java.util.HashMap">
		<![CDATA[SELECT SUM(o.PAY_MONEY) TOTAL FROM (
				 select  	T1.BACKCOMP,
							T1.ID,
							T1.CREDIT_ID,
							T2.LEASE_CODE,
							T1.PAY_MONEY,
							T3.CUST_NAME,
							T4.NAME AREA,
							T5.NAME CLERK_NAME,
							T6.NAME SENSOR_NAME,
							max(T9.RECT_ID)as RECT_ID,
							max(T8.BRAND) BRAND,
							CASE
							WHEN CONVERT(DATE,T9.LESSOR_TIME) = '1900-01-01'
								THEN NULL
							ELSE T9.LESSOR_TIME
							END LESSOR_TIME ,
							T1.STATE,
							T1.DEPARTMENTSTATUS,
							t1.EXAMSTATUS,
							t1.FINANCIALSTATUS,
							t1.MANAGER,
							t1.BACKTYPE,
							t1.BACKSTATE,
							t1.STATUS,
							t1.EXPECTEDDATE,
							CASE
							WHEN CONVERT(DATE,T1.pay_Date) = '1900-01-01'
								THEN NULL
							ELSE T1.PAY_DATE
							END PAY_DATE
							FROM T_SUPL_PLAYDETIL T1
							LEFT JOIN T_PRJT_CREDIT T2 ON T1.CREDIT_ID = T2.ID
							LEFT JOIN T_CUST_CUSTOMER T3 ON T2.CUST_ID = T3.CUST_ID
							LEFT JOIN T_AREA T4 ON T2.PROVINCE_ID = T4.ID
							LEFT JOIN T_USER_USER T5 ON T2.CLERK_ID = T5.ID
							LEFT JOIN T_USER_USER T6 ON T2.SENSOR_ID = T6.ID
							LEFT JOIN T_PRJT_CREDITEQUIPMENT T8 ON T2.ID = T8.CREDIT_ID 
							LEFT JOIN T_RENT_CONTRACT T9 ON T9.PRCD_ID = T2.ID
							where  T1.BACKSTATE = #BACKSTATE#
			]]>
		  	<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<![CDATA[ 
		  	 	(T2.SENSOR_ID = #s_employeeId#
		  	 	or T2.CLERK_ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[	
					exists(select ID from T_USER_USER
					where DEPT_ID in 
					(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId#)
					and ID = T2.SENSOR_ID)
				]]>
			</isEqual>
		  	<isNotEmpty prepend="" property="shen_pi_STATE">
			  <isNotEqual prepend="" property="QSELECT_STATUS" compareValue="9">
			    <isEqual prepend="and" property="shen_pi_STATE" compareValue="0">
						<![CDATA[ t1.STATUS=0 and (T1.STATE=0 or T1.STATE=1) ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="1">
						<![CDATA[ t1.STATUS=0 and T1.STATE=3 ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="2">
						<![CDATA[ t1.STATUS=1  ]]>
					</isEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%' OR T8.BRAND LIKE '%$QSEARCH_VALUE$%'
				  or t2.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 CONVERT(date,T1.EXPECTEDDATE)&gt;=CONVERT(date,#QSTART_DATE#) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 CONVERT(date,T1.EXPECTEDDATE)&lt;=CONVERT(date,#QEND_DATE#) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="PSTART_DATE">
				 CONVERT(date,T1.PAY_DATE)&gt;=CONVERT(date,#PSTART_DATE#) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="PEND_DATE">
				 CONVERT(date,T1.PAY_DATE)&lt;=CONVERT(date,#PEND_DATE#) 
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ T9.RECT_STATUS is null ]]>
					</isEqual>
					<isNotEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ T9.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 T9.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
		  	<![CDATA[ 
		  	GROUP BY 		T1.BACKCOMP,
							T1.ID,
							T1.CREDIT_ID,
							T2.LEASE_CODE,
							T1.PAY_MONEY,
							T3.CUST_NAME,
							T4.NAME,
							T5.NAME,
							T6.NAME,
							T9.LESSOR_TIME,
							T1.STATE,
							T1.DEPARTMENTSTATUS,
							t1.EXAMSTATUS,
							t1.FINANCIALSTATUS,
							t1.MANAGER,
							t1.BACKTYPE,
							t1.BACKSTATE,
							t1.STATUS,t1.EXPECTEDDATE,
							T1.pay_Date ) o
		]]>
	 </select>
	 
	 <select id="getCreditId" resultClass="java.lang.String">
	        SELECT CONVERT(VARCHAR,CREDIT_ID) FROM T_SUPL_PLAYDETIL
	 		 WHERE ID=#backId#
	 </select>
	 
	 <!-- Add by Michael 2012 5-2 查询已申请的拨款金额By报告ID -->
	<select id="getSumPayMoneyByCreditId" resultClass="java.lang.Double"> 
		<![CDATA[ 
		 select SUM(PAY_MONEY) PAY_MONEY from T_SUPL_PLAYDETIL t	
		 where t.CREDIT_ID=#CREDIT_ID# and (t.status=0 or t.STATE=3) and t.BACKSTATE='0' 
		 and t.ID<>#payMoneyId#
		]]>
	 </select>
	 
	 <!-- Add by Michael 2012 5-4 将所有设备都列出来 -->
 	<select id="readCreditAllEquipmentByPrcdId" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT 
				TPK.TYPE_ID,TPP.KIND_ID,TSE.PRODUCT_ID,TSE.SUPPLIER_ID,TPC.SUEQ_ID,
				TPC.STAYBUY_PRICE,TPC.UNIT_PRICE,TPC.AMOUNT AS AMOUNT,TPC.UNIT,TPC.MEMO AS MEMO,
				TPC.THING_KIND,TPC.THING_NAME,TPC.MODEL_SPEC,TPC.BRAND,tpc.shui_price,TPC.LOCK_CODE,t7.MANUFACTURER,
				 T7.NAME TYPE_NAME,TPC.CAR_COLOR,TPC.CAR_RIGSTER_NUMBER,TPC.CAR_ID_NUMBER,TPC.CAR_ENGINE_NUMBER,TPC.CAR_IMPORT_DOMESTIC
			FROM T_PRJT_CREDITEQUIPMENT TPC
			LEFT JOIN T_SUPL_EQUIPMENT TSE ON TPC.SUEQ_ID=TSE.SUEQ_ID
			LEFT JOIN T_PRDC_PRODUCT TPP ON TSE.PRODUCT_ID=TPP.ID
			LEFT JOIN T_PRDC_KIND TPK ON TPK.ID=TPP.KIND_ID
			LEFT JOIN T_PRDC_TYPE T7 ON T7.ID = TPK.TYPE_ID AND T7.PRDC_TYPE_STATUS = 0
			WHERE 
				TPC.CREDIT_ID=#PRCD_ID# AND TPC.EQMT_STATUS=0
		]]>
	</select>
	
	
		 <!-- Add by Michael 2012 6-1 查询已申请的拨保证金金额By报告ID -->
	<select id="getSumPayPledgeMoneyByCreditId" resultClass="java.lang.Double"> 
		<![CDATA[ 
		 select SUM(PAY_MONEY) PAY_MONEY from T_SUPL_PLAYDETIL t	
		 where t.CREDIT_ID=#CREDIT_ID# and (t.status=0 or t.STATE=3) and t.BACKSTATE='1' 
		]]>
	 </select>
	 
	 	<!-- Add by Michael 2012 07-06 查询设备放置地For修改 -->
	<select id="queryEqmtAddrForMDF" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select EQUPMENT_ADDRESS from T_PRJT_CREDITSCHEME
			where credit_id in(select id from T_PRJT_CREDIT where lease_code=#LEASE_CODE#)
		]]>
	</select>
	
	<!-- update  设备放置地-->
	<update id="updateRentContractEqmtAddr" parameterClass="map">
		<![CDATA[	
			update T_RENT_CONTRACTSCHEMA
			set EQUPMENT_ADDRESS=#EQUPMENT_ADDRESS#
			where RECT_ID in(select RECT_ID from T_rent_contract where lease_code=#LEASE_CODE#)
		]]>
   </update>
   
   	<update id="updatePrjtCreditEqmtAddr" parameterClass="map">
		<![CDATA[	
			update T_PRJT_CREDITSCHEME set EQUPMENT_ADDRESS=#EQUPMENT_ADDRESS#
			where credit_id in(select id from T_PRJT_CREDIT where lease_code=#LEASE_CODE#)
		]]>
   </update>
   
   	<update id="updateRentCollectionEqmtAddr" parameterClass="map">
		<![CDATA[
			update T_RENT_COLLECTIONPLAN set EQUPMENT_ADDRESS=#EQUPMENT_ADDRESS#
			where rect_id in(select rect_id from t_rent_contract where lease_code=#LEASE_CODE#)
		]]>
   </update>
   
   
   	<!--  
	 * Add by Michael 2012 07-31
	 * 点击拨款审批时要检查案件是否是交机前拨款
	 * 如果是交机前拨款要检查额度是否满足
	 type=0 交机前拨款
	 -->
 	<select id="getAdvanceMachineMoneyByCreditId" parameterClass="map" resultClass="java.util.HashMap"> 
		<![CDATA[ 
			select * from T_PRJT_CREDITAPPROPIATE
			where TYPE=0 and CREDIT_ID = #CREDIT_ID#
		]]>
	 </select>
	 
  	<select id="getTestRentContractByLeaseCode" parameterClass="map" resultClass="java.util.HashMap"> 
		<![CDATA[ 
			select * from T_RENT_FILE_LOSSINVOICE
			where STATUS=0 and  lease_code=#LEASE_CODE#
		]]>
	 </select>
	 
	 	 <!-- 查询此案件已经申请了多少金额 -->
 	<select id="getTotalPayMoneyByCreditID" parameterClass="map" resultClass="java.util.HashMap"> 
		<![CDATA[ 	 
			select isnull(SUM(PAY_MONEY),0) PAY_MONEY from T_SUPL_PLAYDETIL
			where STATUS='0' and BACKSTATE='0' and MANAGER<>'2' and CREDIT_ID = #CREDIT_ID# and ADVANCE_FLAG='1'
		]]>
	 </select>
	 
	 <!-- 查询供应商交机前拨款金额，发票和照片没有到的案件金额进行加总 -->
 	<select id="getTotalPayMoneyBySupl" parameterClass="map" resultClass="java.util.HashMap"> 
		<![CDATA[ 	 
			select isnull(SUM(PAY_MONEY),0) TOTAL_APPRORIATEMON from T_SUPL_PLAYDETIL tsp
			left join t_prjt_credit tpc on tsp.CREDIT_ID=tpc.ID and tpc.STATUS=0
			where tsp.STATUS=0 and MANAGER<>'2' and tsp.ADVANCE_FLAG=1 and tsp.BACKSTATE='0'
			and tsp.BACKCOMP=#SUPLNAME# and (tsp.STATE=0 or tpc.LEASE_CODE  in(select LEASE_CODE from T_RENT_FILE_LOSSINVOICE where STATUS=0))
		]]>
	 </select>
	 
  	<select id="getSuplGrantMoneyBySupl" parameterClass="map" resultClass="java.util.HashMap"> 
		<![CDATA[
		    select isnull(tpg.ADVANCEMACHINE_GRANT_PRICE,0) ADVANCEMACHINE_GRANT_PRICE from T_SUPL_SUPPLIER tss
			left join T_PRODUCT_GRANTPLAN tpg
			on tss.ID=tpg.PRODUCT_ID and tpg.STATUS=0
			where tss.NAME=#SUPLNAME# and tss.status=0
		]]>
	 </select>	
	 
  	<select id="getSupplierLevel" parameterClass="map" resultClass="java.util.HashMap"> 
		<![CDATA[
	 		select SUPP_LEVEL from T_SUPL_SUPPLIER
			where NAME=#SUPLNAME# and status=0
		]]>
	 </select>	 

<!-- Add by Michael 2012 09-03 -->
  	<select id="getNoInvoceRentCountByRecpID" parameterClass="map" resultClass="java.util.HashMap"> 
		<![CDATA[
			select count(*) num,DECP_ID from(
				select t9.DECP_NAME_CN,t9.DECP_ID from T_RENT_FILEDETAIL  trfd
				left join T_PRJT_CREDIT tpc
				on trfd.PRCD_ID=tpc.ID and tpc.STATUS = 0
				left join T_USER_USER t6 on tpc.SENSOR_ID = t6.ID
				left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
				left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
				where trfd.IS_ALREADY='0' and trfd.REFI_ID in(select REFI_ID from T_RENT_FILE
				where [FILE_NAME] like '%购置凭证%')
				and ISSURE_REASON<>'发票联借出'
				and tpc.FINANCECONTRACT_DATE is not null and datediff(day,tpc.FINANCECONTRACT_DATE,getdate())>15
			)TTT 
			where DECP_ID=#DECP_ID#
			group by DECP_ID
		]]>
	 </select>

	<select id="payMoneyAuditList" resultClass="com.brick.backMoney.to.PayMoneyTO">
	          SELECT TPC.CREDIT_RUNCODE creditRunCode,
	                 TSPL.BACKCOMP suplName,
	                 TCR.CUST_NAME custName,
	                 TPCT.THING_NAME equipment,
	                 TSPL.PAY_MONEY payMoney,
	                 CONVERT(VARCHAR,TSPL.EXPECTEDDATE,23) expectedDate,
	                 CASE WHEN CONVERT(VARCHAR,TSPL.PAY_DATE,23)='1900-01-01'
	                      THEN NULL
	                      ELSE CONVERT(VARCHAR,TSPL.PAY_DATE,23)
	                       END payDate
	            FROM T_SUPL_PLAYDETIL TSPL
	       LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
	       LEFT JOIN T_CUST_CUSTOMER TCR ON TPC.CUST_ID=TCR.CUST_ID AND TCR.STATUS=0
	       LEFT JOIN T_PRJT_CREDITEQUIPMENT TPCT ON TPC.ID=TPCT.CREDIT_ID			 
	           WHERE TSPL.BACKSTATE=0
	             AND TSPL.STATUS=0
	             <isNotEmpty property="START_DATE">
	             	AND CONVERT(DATE,TSPL.PAY_DATE)>=CONVERT(DATE,#START_DATE#)
	             </isNotEmpty>
	             <isNotEmpty property="END_DATE">
	             	AND CONVERT(DATE,TSPL.PAY_DATE)&lt;=CONVERT(DATE,#END_DATE#)
	             </isNotEmpty>
	        ORDER BY TSPL.PAY_DATE DESC,TSPL.EXPECTEDDATE DESC
	</select>
<!-- Add by Michael 查询是否是主管有通过 -->
	<select id="queryIsFirstPayMoney" parameterClass="map" resultClass="java.lang.Integer">
		select count(*) NUM from T_SUPL_PLAYDETIL
		where STATUS=0 and DEPARTMENTSTATUS='1' and FINANCIALSTATUS='1' and EXAMSTATUS='1'  and backstate=0 and CREDIT_ID=#CREDIT_ID#
	</select>
	
	<!-- 插入数据到预期支付日表,维护预期支付日 add by ShenQi -->
	<insert id="insertExpectedDate">
		INSERT INTO T_PRJT_EXPECTED_DATE
		(PAY_DETAIL_ID,CREDIT_ID,EXPECTED_DATE,STATUS,CREATE_ID,CREATE_TIME,EXPECTED_DATE_REMARK)
		VALUES
		(#PAY_DETAIL_ID#,#CREDIT_ID#,#EXPECTED_DATE#,0,#s_employeeId#,GETDATE(),#EXPECTED_DATE_REMARK#)
	</insert>
	
	<select id="getNewestExpectedDate" resultClass="java.lang.String">
		SELECT TOP 1 CONVERT(VARCHAR,EXPECTED_DATE,23) FROM T_PRJT_EXPECTED_DATE WHERE CREDIT_ID=#CREDIT_ID# ORDER BY ID DESC
	</select>
	
	<!-- Add by Michael 查询是否是首拨款 -->
	<select id="queryPayMoneyIsPassed" parameterClass="map" resultClass="java.lang.Integer">
		select count(*) NUM from T_SUPL_PLAYDETIL
		where STATUS=0 and state='3' and backstate=0 and CREDIT_ID=#CREDIT_ID#
	</select>
	
		<!--  查询单笔预付款凭证明细By ＩＤ -->
	<select id="getPayMoneyDetailByID" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select * from T_SUPL_PLAYDETIL t where t.ID=#ID# 
		]]>
	</select>
			<!--  查询分派文审User For重车 -->
	<select id="getRentFileDispatchUserByAutoType" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
 			select top 1 USER_ID from T_RENT_DISPATCH_USER
			where TYPE='0' and AUTO_TYPE='1'  order by DISPATCH_TIME
		]]>
	</select>
			<!--  查询分派文审User For乘用车 -->
	<select id="getRentFileDispatchUserByCarType" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
 			select top 1 USER_ID from T_RENT_DISPATCH_USER
			where TYPE='0' and CAR_TYPE='1'  order by DISPATCH_TIME
		]]>
	</select>
				<!--  查询分派文审User For 设备 -->
	<select id="getRentFileDispatchUserByRentType" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
 			select top 1 USER_ID from T_RENT_DISPATCH_USER
			where TYPE='0' and RENT_TYPE='1' order by DISPATCH_TIME
		]]>
	</select>
	
		<!-- 设备人员当天已审案件比例总权重 -->
	<select id="getDispatchRentProportionByDay" parameterClass="map" resultClass="java.util.HashMap">	
	  select T1.RATE,isnull(t2.FINISH_RATE,0) FINISH_RATE,T1.[USER_ID] from 
			(select convert(decimal(18,2),PROPORTION/(TOTAL_PROPORTION+0.0)) RATE,PROPORTION,TOTAL_PROPORTION,USER_ID from (
			select 
			(select sum( PROPORTION) TOTAL_PROPORTION from T_RENT_DISPATCH_USER
			where [TYPE]='0' and RENT_TYPE='1') TOTAL_PROPORTION, PROPORTION , [USER_ID] from T_RENT_DISPATCH_USER
			where [TYPE]='0' and RENT_TYPE='1'
			) TT
	    )T1
	    left join
			(select convert(decimal(18,2),RENT_COUNT/(TOTAL_RENT_COUNT+0.0)) FINISH_RATE,RENT_COUNT,TOTAL_RENT_COUNT,USER_ID from (
			select (select sum( RENT_COUNT) RENT_COUNT from T_RENT_DISPATCH_USER_COUNT
			where year(CREATE_DATE)=year(getDate()) and month(CREATE_DATE)=month(getDate()) and day(CREATE_DATE)=day(getDate())
			)TOTAL_RENT_COUNT, RENT_COUNT, [USER_ID] from T_RENT_DISPATCH_USER_COUNT
			where year(CREATE_DATE)=year(getDate()) and month(CREATE_DATE)=month(getDate()) and day(CREATE_DATE)=day(getDate()) 
			)TT
	    ) T2
	on T1.USER_ID=t2.USER_ID
	order by FINISH_RATE
	</select>
	
		<!-- 重车人员当天已审案件比例总权重 -->
	<select id="getDispatchAutoProportionByDay" parameterClass="map" resultClass="java.util.HashMap">	
		select T1.RATE,isnull(t2.FINISH_RATE,0) FINISH_RATE,T1.[USER_ID] from 
		(select convert(decimal(18,2),PROPORTION/(TOTAL_PROPORTION+0.0)) RATE,PROPORTION,TOTAL_PROPORTION,USER_ID from (
		select 
		(select sum( PROPORTION) TOTAL_PROPORTION from T_RENT_DISPATCH_USER
		where [TYPE]='0' and AUTO_TYPE='1') TOTAL_PROPORTION, PROPORTION , [USER_ID] from T_RENT_DISPATCH_USER
		where [TYPE]='0' and AUTO_TYPE='1'
		) TT) T1
		left join
		(select convert(decimal(18,2),AUTO_COUNT/(TOTAL_AUTO_COUNT+0.0)) FINISH_RATE,AUTO_COUNT,TOTAL_AUTO_COUNT,USER_ID from (
		select (select sum( AUTO_COUNT) AUTO_COUNT from T_RENT_DISPATCH_USER_COUNT
		where year(CREATE_DATE)=year(getDate()) and month(CREATE_DATE)=month(getDate()) and day(CREATE_DATE)=day(getDate())
		)TOTAL_AUTO_COUNT, AUTO_COUNT, [USER_ID] from T_RENT_DISPATCH_USER_COUNT
		where year(CREATE_DATE)=year(getDate()) and month(CREATE_DATE)=month(getDate()) and day(CREATE_DATE)=day(getDate()) 
		)TT) T2
		on T1.USER_ID=t2.USER_ID
		order by FINISH_RATE
	</select>
			<!--  如果是拨尾款则要找到上次通过时的分派人员ID -->
			<!--  如果案件第一次有分派给文审人员的话，此后一直都给这个文审人员 -->
	<select id="getRentFileDispatchUserByPayMoneyPass" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[
		    select top 1  DISPATCH_USER_ID USER_ID from T_RENT_FILE_SENDER_STATE
		    where STATUS=0 and CREDIT_ID=#CREDIT_ID#
		    order by DISPATCH_USER_ID desc
		]]>
	</select>	
		<!--  查询所有分派文审User -->
	<select id="getAllDispatchUser" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select tuu.NAME,tuu.ID from T_RENT_DISPATCH_USER  trdu
			left join T_USER_USER tuu on trdu.USER_ID=tuu.ID 
			where tuu.STATUS=0
		]]>
	</select>
	<!--  查询案件送件 ，送件未审状态统计数 -->
	<select id="queryRentFileSenderState" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
         select  count(*) NUM from T_RENT_FILEDETAIL
         where COPYSIGN_COUNT is not null and PRCD_ID=#CREDIT_ID# and FILE_TYPE='3'
		]]>
	</select>	
   <!-- 更新文件送审状况(主管通过时)  -->
   	<update id="updateRentFileStateByPass" parameterClass="map">
		<![CDATA[
			update T_RENT_FILE_SENDER_STATE 
			set 
			STATE='2',
			SALES_MANAGE_TIME=getDate(),
			SALES_MANAGE_ID=#s_employeeId#
			where ID =#FSS_ID# 
		]]>
   </update>
   
<!-- 更新分派文件User的处理事件 -->
   	<update id="updateDispatchUserDatetime" parameterClass="map">
		<![CDATA[
			update T_RENT_DISPATCH_USER 
			set DISPATCH_TIME=getDate()
			where USER_ID =#DISPATCH_USER_ID#
		]]>
   </update>
 <!-- 更新设备文审当天的统计数量 -->
   	<update id="updateDispatchRentCountByDay" parameterClass="map">
		<![CDATA[
			update T_RENT_DISPATCH_USER_COUNT 
			set RENT_COUNT=RENT_COUNT+1
			where year(CREATE_DATE)=year(getDate()) and month(CREATE_DATE)=month(getDate()) and day(CREATE_DATE)=day(getDate())
			and USER_ID =#DISPATCH_USER_ID#
		]]>
   </update> 
 <!-- 更新车文审当天的统计数量 -->
   	<update id="updateDispatchAutoCountByDay" parameterClass="map">
		<![CDATA[
			update T_RENT_DISPATCH_USER_COUNT 
			set AUTO_COUNT=AUTO_COUNT+1
			where year(CREATE_DATE)=year(getDate()) and month(CREATE_DATE)=month(getDate()) and day(CREATE_DATE)=day(getDate())
			and USER_ID =#DISPATCH_USER_ID#
		]]>
   </update>  
   
  	<insert id="createDispatchUserCount"   parameterClass="map">
	 <![CDATA[
		insert into T_RENT_DISPATCH_USER_COUNT
		  (
		   USER_ID, COUNT, CREATE_DATE, RENT_COUNT, AUTO_COUNT
		   )
		values
		  (
		   #DISPATCH_USER_ID#,
		   0,
		   getDate(),
		   0,
		   0
		   )
	 ]]> 
	</insert>    
 <!-- 更新文件送审状况(主管驳回时) -->
   	<update id="updateRentFileStateByReject" parameterClass="map">
		<![CDATA[
			update T_RENT_FILE_SENDER_STATE 
			set STATE='3',
			SALES_MANAGE_TIME=getDate(),
			SALES_MANAGE_ID=#s_employeeId#
			where ID =#FSS_ID# 
		]]>
   </update>
   
   	<select id="queryDispatchUserCount" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[
			select count(*) NUM from T_RENT_DISPATCH_USER_COUNT where USER_ID=#DISPATCH_USER_ID#
			and  year(CREATE_DATE)=year(getDate()) and month(CREATE_DATE)=month(getDate()) and day(CREATE_DATE)=day(getDate()) 
		]]>
	</select>
   
  <!-- 更新文件送审状况(业管文审收件) -->
   	<update id="updateRentFileStateByHWReception" parameterClass="map">
		<![CDATA[
			update T_RENT_FILE_SENDER_STATE 
			set STATE='4',
			HW_TIME=getDate(),
			HW_USER_ID=#s_employeeId#,
			DISPATCH_USER_ID=#DISPATCH_USER_ID#
			where CREDIT_ID =#CREDIT_ID# and STATE='2' and id=#ID#
		]]>
   </update>
   <!-- 更新文件送审状况(业管文审退件) -->
   	<update id="updateRentFileStateByHWReject" parameterClass="map">
		<![CDATA[
			update T_RENT_FILE_SENDER_STATE 
			set STATE='5',
			HW_MANAGER_TIME=getDate(),
			HW_MANAGER_ID=#s_employeeId#
			where ID=#ID#
		]]>
   </update>  
      
   <select id="queryPayMoneyPassCount" parameterClass="map" resultClass="java.lang.Integer">
		<![CDATA[    
		   select count(*) NUM from T_SUPL_PLAYDETIL where MANAGER<>'2' and DEPARTMENTSTATUS='1' and BACKSTATE='0'
		   where CREDIT_ID=#CREDIT_ID#
		   group by CREDIT_ID
   		]]>
   	</select>  
   
   <select id="queryRentFileSenderFollow" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ SELECT TRFS.STATE,TRFS.ID,
						 T2.RECT_ID,T1.CONTRACT_TYPE,
						 T1.LEASE_CODE,
						 T3.CUST_NAME,
						 upper.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
					  	t9.DECP_NAME_CN,t1.CREDIT_RUNCODE,dispa_user.name  DISPATCH_NAME,TRFS.MODIFY_TIME,
					  	TRFS.SALES_MANAGE_TIME,TRFS.HW_TIME,t1.ID CREDIT_ID,TRFS.DISPATCH_USER_ID,assistant.NAME ASSISTANT_NAME,TRFS.HW_AUDIT_TIME
			  FROM T_RENT_FILE_SENDER_STATE TRFS
			  left join T_PRJT_CREDIT T1 on TRFS.credit_id=t1.id and t1.status=0
			  left join t_rent_contract t2 on t1.ID=t2.prcd_id
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
      	  	  left join T_USER_USER dispa_user on dispa_user.id=TRFS.DISPATCH_USER_ID
      	  	  left join T_USER_USER assistant on assistant.id=TRFS.MODIFY_ID
			  WHERE TRFS.STATUS=0 
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or upper.ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[
					exists(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId# and uc.dept_id = dept.id)
				]]>
			</isEqual>
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(	T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
					 	OR upper.NAME LIKE '%$QSEARCH_VALUE$%' 
					 	OR T6.NAME LIKE '%$QSEARCH_VALUE$%'
					 	or t9.DECP_NAME_CN like '%$QSEARCH_VALUE$%'
					 	or t1.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%'
					 	or dispa_user.name like '%$QSEARCH_VALUE$%'
					 )
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ (TRFS.STATE ='9' and  t2.RECT_ID is not null) ]]>
					</isEqual>
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="9">
						<![CDATA[ t2.RECT_ID is null ]]>
					</isEqual>					
					<isNotEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ TRFS.STATE = #QSELECT_STATUS#]]>
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
	</select>

   <select id="queryExecutiveEmailByUserID" parameterClass="map" resultClass="java.lang.String">
		<![CDATA[    
		    select  EMAIL from T_USER_USER where id =(
		      select upper_user  from T_USER_USER
		      where id=#s_employeeId#
		    )
   		]]>
   	</select>	

	<select id="querySchemaCheck" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ SELECT T1.ID PRCD_ID,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 upper.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 T1.CONTRACT_TYPE,
						 t1.wind_result_date,
						  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE
			  FROM (select credit_id from T_PRJT_CREDITSCHEME_CHECK where status='0' group by credit_id ) tpcc
			  left join T_PRJT_CREDIT T1 on tpcc.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
  				AND (T2.STATUS!=-2 OR T2.STATUS IS NULL) 
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<![CDATA[ 
		  	 	(T1.SENSOR_ID = #s_employeeId#
		  	 	or upper.ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[
					exists(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId# and uc.dept_id = dept.id)
				]]>
			</isEqual>
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(	T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
					 	OR upper.NAME LIKE '%$QSEARCH_VALUE$%' 
					 	OR T6.NAME LIKE '%$QSEARCH_VALUE$%'
					 	or t9.DECP_NAME_CN like '%$QSEARCH_VALUE$%'
					 	or t1.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%'
					 )
				  ]]>
			</isNotEmpty>
	</select>
	
	<insert id="createRentCheckPayLines"   parameterClass="map">
	 <![CDATA[
		insert into T_PRJT_CREDITSCHEME_CHECKMANAGE
		  (
		   CREDIT_ID,
		   PERIOD_NUM,
		   MONTH_PRICE_TAX,
		   CHECK_OUT_DATE,
		   CHECK_NUM,
		   CHECK_MONEY,
		   MEMO,
		   CREATE_ID,
		   CREATE_DATE,
		   MODIFY_ID,
		   MODIFY_DATE,
		   STATUS,DRAWER,TYPE,FORCAST_DELIVERY_DATE
		   )
		values
		  (
		   #CREDIT_ID#,
		   #PERIOD_NUM#,
		   #MONTH_PRICE_TAX#,
		   #CHECKOUT_DATE#,
		   #CHECK_NUM#,
		   #CHECK_MONEY#,
		   #MEMO#,
		   #s_employeeId#,
		   getDate(),
   		   #s_employeeId#,
		   getDate(),
		   0,#DRAWER#,#TYPE#,#CHECKOUT_DATE#
		   )
	 ]]> 
 	<selectKey resultClass="java.lang.Long" keyProperty="ID">
		SELECT @@IDENTITY AS ID
	</selectKey> 
	</insert>
	
   	<update id="updateRentCheckPayLines" parameterClass="map">
		<![CDATA[
			update T_PRJT_CREDITSCHEME_CHECKMANAGE 
			   set PERIOD_NUM=#PERIOD_NUM#,
			   MONTH_PRICE_TAX=#MONTH_PRICE_TAX#,
			   CHECK_OUT_DATE=#CHECKOUT_DATE#,
			   CHECK_NUM=#CHECK_NUM#,
			   CHECK_MONEY=#CHECK_MONEY#,
			   MEMO=#MEMO#,
			   MODIFY_ID=#s_employeeId#,
			   MODIFY_DATE=getDate(),
			   DRAWER=#DRAWER#,FORCAST_DELIVERY_DATE=#CHECKOUT_DATE#
			where ID=#ID#
		]]>
   </update> 
	
	<insert id="createRentCheckPayManageLog"   parameterClass="map">
	 <![CDATA[
		insert into T_PRJT_CREDITSCHEME_CHECKMANAGE_LOG
		  (
		   CREDIT_ID,
		   PERIOD_NUM,
		   MONTH_PRICE_TAX,
		   CHECK_OUT_DATE,
		   CHECK_NUM,
		   CHECK_MONEY,
		   MEMO,
		   CREATE_ID,
		   CREATE_DATE,
		   REMARK,
		   CHECK_ID,DRAWER,ACTION_TYPE
		   )
		values
		  (
		   #CREDIT_ID#,
		   #PERIOD_NUM#,
		   #MONTH_PRICE_TAX#,
		   #CHECKOUT_DATE#,
		   #CHECK_NUM#,
		   #CHECK_MONEY#,
		   #MEMO#,
		   #s_employeeId#,
		   getDate(),
		   #REMARK#,
		   #ID#,#DRAWER#,#ACTION_TYPE#
		   )
	 ]]>  
	</insert>
	
   	<update id="deleteRentCheckPayLines" parameterClass="map">
		<![CDATA[
			update T_PRJT_CREDITSCHEME_CHECKMANAGE 
			   set status='-2',RECORDED_CREATE_DATE=getDate()
			where ID=#ID#
		]]>
   </update>   
 	<select id="querySchemaCheckManageDetail" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[   
			select * from T_PRJT_CREDITSCHEME_CHECKMANAGE 
			where ID=#ID# 
		 ]]> 
	</select>
  
   	<update id="updateRentCheckPayLinesByHW" parameterClass="map">
		<![CDATA[
			update T_PRJT_CREDITSCHEME_CHECKMANAGE 
			   set 
			   CHECK_OUT_DATE=#CHECKOUT_DATE#,
			   CHECK_NUM=#CHECK_NUM#,
			   CHECK_MONEY=#CHECK_MONEY#,
			   MEMO=#MEMO#,
			   HW_CREATE_ID=#s_employeeId#,
			   HW_CREATE_DATE=getDate(),
			   DRAWER=#DRAWER#,FORCAST_DELIVERY_DATE=#CHECKOUT_DATE#
			where ID=#ID#
		]]>
   </update> 
   	<update id="updateRentCheckPayLinesByFinance" parameterClass="map">
		<![CDATA[
			update T_PRJT_CREDITSCHEME_CHECKMANAGE 
			   set  
   			   CHECK_OUT_DATE=#CHECKOUT_DATE#,
			   CHECK_NUM=#CHECK_NUM#,
			   CHECK_MONEY=#CHECK_MONEY#,
			   MEMO=#MEMO#,
			   DRAWER=#DRAWER#,
			   FINANCE_CREATE_ID=#s_employeeId#,
			   FINANCE_CREATE_DATE=getDate(),FORCAST_DELIVERY_DATE=#CHECKOUT_DATE#
			where ID=#ID#
		]]>
   </update> 
   
   	<!-- 将支票业管审核的状态的HW_CHECK_STATE更新成 1 -->
	<update id="updateRentCheckAllStateByHW" parameterClass="map">
		update T_PRJT_CREDITSCHEME_CHECKMANAGE
		   set HW_CHECK_STATE = '1'
		where ID in( $all_check_ids$  )
	</update>

	<!-- 将支票财务审核的状态的HW_CHECK_STATE更新成 1 -->
 	<update id="updateRentCheckAllStateByFinance" parameterClass="map"> 
	   	<![CDATA[ 
		update T_PRJT_CREDITSCHEME_CHECKMANAGE
		   set FINANCE_CHECK_STATE = '1'
		where ID in( $all_check_ids$  )
	 	]]>
   </update>
   
   
   <select id="queryAllRentCheckDetail" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ SELECT tpcm.ID,
						T1.ID PRCD_ID,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 upper.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T1.CONTRACT_TYPE,
						  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE,tpcm.RECORDED_STATUS,tpcm.DELIVERY_STATUS,
						  tpcm.PERIOD_NUM, tpcm.CHECK_OUT_DATE, tpcm.CHECK_NUM, tpcm.CHECK_MONEY, tpcm.MEMO, tpcm.FINANCE_MEMO
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join T_PRJT_CREDIT T1 on tpcm.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
			  WHERE T1.status='0' and tpcm.status='0' and tpcm.FINANCE_CHECK_STATE='1'
			]]>
             <isNotEmpty property="QSTART_DATE">
             	<![CDATA[
             		AND CONVERT(DATE,tpcm.CHECK_OUT_DATE)>=CONVERT(DATE,#QSTART_DATE#)
           		]]>
             </isNotEmpty>
             <isNotEmpty property="QEND_DATE">
             	<![CDATA[
             		AND CONVERT(DATE,tpcm.CHECK_OUT_DATE)<=CONVERT(DATE,#QEND_DATE#)
           		]]>
             </isNotEmpty>
    		<isNotEmpty prepend="" property="DELIVERY_STATUS">
	    		<isNotEqual prepend="" property="DELIVERY_STATUS" compareValue="-1">
					<isEqual prepend="and" property="DELIVERY_STATUS" compareValue="1">
						<![CDATA[ tpcm.DELIVERY_STATUS = #DELIVERY_STATUS# ]]>
					</isEqual>
					<isEqual prepend="and" property="DELIVERY_STATUS" compareValue="-2">
						<![CDATA[ tpcm.DELIVERY_STATUS is null ]]>
					</isEqual>
					<isEqual prepend="and" property="DELIVERY_STATUS" compareValue="-3">
						<![CDATA[ tpcm.DELIVERY_STATUS = '1' and tpcm.RECORDED_STATUS is null ]]>
					</isEqual>	
					<isEqual prepend="and" property="DELIVERY_STATUS" compareValue="2">
						<![CDATA[ tpcm.RECORDED_STATUS = '1' ]]>
					</isEqual>	
					<isEqual prepend="and" property="DELIVERY_STATUS" compareValue="3">
						<![CDATA[ tpcm.RECORDED_STATUS = '2']]>
					</isEqual>														
				</isNotEqual>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				(	T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
					OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
					OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				 	OR upper.NAME LIKE '%$QSEARCH_VALUE$%' 
				 	OR T6.NAME LIKE '%$QSEARCH_VALUE$%'
				 	or t9.DECP_NAME_CN like '%$QSEARCH_VALUE$%'
				 	or t1.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%'
				 	or tpcm.CHECK_NUM like '%$QSEARCH_VALUE$%'
				 )
			</isNotEmpty>
	</select> 
   <select id="queryRentCheckManageLogByID" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			select tpccl.*,tuu.NAME from T_PRJT_CREDITSCHEME_CHECKMANAGE_LOG  tpccl
			left join T_USER_USER tuu on tpccl.CREATE_ID=tuu.ID
			where tpccl.CHECK_ID=#ID#
			order by tpccl.CREATE_DATE desc
		]]>
	</select> 
	
 	<update id="updateRentCheckDelivery" parameterClass="map"> 
	   		update T_PRJT_CREDITSCHEME_CHECKMANAGE
	   		set state=#STATE#,DELIVERY_STATUS='1',DELIVERY_DATE=getDate(),FINANCE_MEMO=#FINANCE_MEMO#,BANK_CODE=#DELIVERY_BANK#
   		<isEqual prepend="," property="STATE" compareValue="1">
   			<![CDATA[
   				RECORDED_CREATE_DATE=getDate()
   			]]>
   		</isEqual>
   			where ID=#ID#
   </update>
	<update id="updateRentCheckRecorded" parameterClass="map"> 
   		update T_PRJT_CREDITSCHEME_CHECKMANAGE
   		set RECORDED_STATUS=#RECORDED_STATUS#,RECORDED_DATE=getDate(),FINANCE_MEMO=#FINANCE_MEMO#,RECORDED_CREATE_DATE=getDate(),STATE=#STATE#
   		<isNotEmpty prepend="," property="RETURN_REASON">
   			<![CDATA[
   				RETURN_REASON=#RETURN_REASON#
   			]]>
   		</isNotEmpty>
 		where ID=#ID#
   </update> 
   
    <!-- 业管主管驳回 -->
   	<update id="updateRentFileStateByExam" parameterClass="map">
		<![CDATA[
			update T_RENT_FILE_SENDER_STATE 
			set STATE='6'
			where ID =#FSS_ID# 
		]]>
   </update>
   <!-- 财务主管驳回 -->
   	<update id="updateRentFileStateByFinance" parameterClass="map">
		<![CDATA[
			update T_RENT_FILE_SENDER_STATE 
			set STATE='7'
			where ID =#FSS_ID# 
		]]>
   </update>
	<!-- 退回未初审状态 -->
	
	<select id="getPayOrderById" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[
			SELECT 1-count(*) AS PAY_ORDER FROM T_SUPL_PLAYDETIL WHERE CREDIT_ID = (
				SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL WHERE ID = #backId#
			) AND PAY_ORDER = 1
		]]>
	</select> 
	
   <update id="rejectContract" parameterClass="map">
   		<![CDATA[
   			INSERT INTO T_RENT_CONTRACTSCHEMAIRR_LOG
			SELECT DISTINCT a.* FROM T_RENT_CONTRACTSCHEMAIRR a
			LEFT JOIN T_RENT_CONTRACTSCHEMA b ON a.RECS_ID = b.RECS_ID
			WHERE b.RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_CONTRACTSCHEMAIRR
			WHERE RECI_ID IN (
			SELECT DISTINCT a.RECI_ID FROM T_RENT_CONTRACTSCHEMAIRR a
			LEFT JOIN T_RENT_CONTRACTSCHEMA b ON a.RECS_ID = b.RECS_ID
			WHERE b.RECT_ID = #RECT_ID#);
			
			INSERT INTO T_RENT_CONTRACTSCHEMA_LOG
			SELECT * FROM T_RENT_CONTRACTSCHEMA
			WHERE RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_CONTRACTSCHEMA
			WHERE RECT_ID = #RECT_ID#;
			
			INSERT INTO T_RENT_CONTRACTOTHERFEE_LOG
			SELECT * FROM T_RENT_CONTRACTOTHERFEE
			WHERE RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_CONTRACTOTHERFEE
			WHERE RECT_ID = #RECT_ID#;
			
			INSERT INTO T_RENT_CONTRACTREMARK_LOG
			SELECT * FROM T_RENT_CONTRACTREMARK
			WHERE RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_CONTRACTREMARK
			WHERE RECT_ID = #RECT_ID#;
			
			INSERT INTO T_RENT_CONTRACT_FEELIST_LOG
			SELECT * FROM T_RENT_CONTRACT_FEELIST
			WHERE RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_CONTRACT_FEELIST
			WHERE RECT_ID = #RECT_ID#;
			
			INSERT INTO T_RENT_CONTRACTCHECK_LOG
			SELECT * FROM T_RENT_CONTRACTCHECK
			WHERE RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_CONTRACTCHECK
			WHERE RECT_ID = #RECT_ID#;
			
			INSERT INTO T_RENT_CONTRACTINSURE_LOG
			SELECT * FROM T_RENT_CONTRACTINSURE
			WHERE RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_CONTRACTINSURE
			WHERE RECT_ID = #RECT_ID#;
			
			INSERT INTO T_EQMT_EQUIPMENT_LOG
			SELECT DISTINCT a.* FROM T_EQMT_EQUIPMENT a 
			LEFT JOIN T_RENT_CONTRACTDETAIL b ON a.EQMT_ID = b.EQMT_ID
			WHERE b.RECT_ID = #RECT_ID#;
			
			DELETE FROM T_EQMT_EQUIPMENT_LOG
			WHERE EQMT_ID IN (
			SELECT DISTINCT a.EQMT_ID FROM T_EQMT_EQUIPMENT a 
			LEFT JOIN T_RENT_CONTRACTDETAIL b ON a.EQMT_ID = b.EQMT_ID
			WHERE b.RECT_ID = #RECT_ID#);
			
			INSERT INTO T_RENT_CONTRACTDETAIL_LOG
			SELECT * FROM T_RENT_CONTRACTDETAIL
			WHERE RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_CONTRACTDETAIL
			WHERE RECT_ID = #RECT_ID#;
			
			INSERT INTO T_RENT_COLLECTIONDETAIL_LOG
			SELECT a.* FROM T_RENT_COLLECTIONDETAIL a
			LEFT JOIN T_RENT_COLLECTIONPLAN b ON a.RECP_ID = b.RECP_ID
			WHERE b.RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_COLLECTIONDETAIL
			WHERE RECD_ID IN (
			SELECT a.RECD_ID FROM T_RENT_COLLECTIONDETAIL a
			LEFT JOIN T_RENT_COLLECTIONPLAN b ON a.RECP_ID = b.RECP_ID
			WHERE b.RECT_ID = #RECT_ID#
			);
			
			INSERT INTO T_RENT_COLLECTIONINSURE_LOG
			SELECT a.* FROM T_RENT_COLLECTIONINSURE a
			LEFT JOIN T_RENT_COLLECTIONPLAN b ON a.RECP_ID = b.RECP_ID
			WHERE b.RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_COLLECTIONINSURE
			WHERE RECI_ID IN (
			SELECT a.RECI_ID FROM T_RENT_COLLECTIONINSURE a
			LEFT JOIN T_RENT_COLLECTIONPLAN b ON a.RECP_ID = b.RECP_ID
			WHERE b.RECT_ID = #RECT_ID#
			);
			
			INSERT INTO T_RENT_COLLECTIONOTHERFEE_LOG
			SELECT a.* FROM T_RENT_COLLECTIONOTHERFEE a
			LEFT JOIN T_RENT_COLLECTIONPLAN b ON a.RECP_ID = b.RECP_ID
			WHERE b.RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_COLLECTIONOTHERFEE
			WHERE RECO_ID IN (
			SELECT a.RECO_ID FROM T_RENT_COLLECTIONOTHERFEE a
			LEFT JOIN T_RENT_COLLECTIONPLAN b ON a.RECP_ID = b.RECP_ID
			WHERE b.RECT_ID = #RECT_ID#
			);
			
			INSERT INTO T_RENT_COLLECTIONPLANIRR_LOG
			SELECT a.* FROM T_RENT_COLLECTIONPLANIRR a
			LEFT JOIN T_RENT_COLLECTIONPLAN b ON a.RECP_ID = b.RECP_ID
			WHERE b.RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_COLLECTIONPLANIRR
			WHERE REPI_ID IN (
			SELECT a.REPI_ID FROM T_RENT_COLLECTIONPLANIRR a
			LEFT JOIN T_RENT_COLLECTIONPLAN b ON a.RECP_ID = b.RECP_ID
			WHERE b.RECT_ID = #RECT_ID#
			);
			
			INSERT INTO T_RENT_COLLECTIONREMARK_LOG
			SELECT a.* FROM T_RENT_COLLECTIONREMARK a
			LEFT JOIN T_RENT_COLLECTIONPLAN b ON a.RECP_ID = b.RECP_ID
			WHERE b.RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_COLLECTIONREMARK
			WHERE RECR_ID IN (
			SELECT a.RECR_ID FROM T_RENT_COLLECTIONREMARK a
			LEFT JOIN T_RENT_COLLECTIONPLAN b ON a.RECP_ID = b.RECP_ID
			WHERE b.RECT_ID = #RECT_ID#
			);
      
			INSERT INTO T_RENT_COLLECTIONPLAN_LOG
			SELECT * FROM T_RENT_COLLECTIONPLAN
			WHERE RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_COLLECTIONPLAN
			WHERE RECT_ID = #RECT_ID#;	
      
      		INSERT INTO T_RENT_CONTRACT_LOG
			SELECT * FROM T_RENT_CONTRACT
			WHERE RECT_ID = #RECT_ID#;
			
			DELETE FROM T_RENT_CONTRACT
			WHERE RECT_ID = #RECT_ID#;			
   		]]>
   </update>
   
            <!-- 总经理驳回 -->
   	<update id="updateRentFileStateByManage" parameterClass="map">
		<![CDATA[
			update T_RENT_FILE_SENDER_STATE 
			set STATE='8'
			where ID =#FSS_ID# 
		]]>
   </update>

	<select id="queryRentFileSenderStateByID" parameterClass="map" resultClass="java.util.HashMap">
   		select * from T_RENT_FILE_SENDER_STATE where id=#FSS_ID#
	</select> 
	
   	<update id="updateRentFileStateHWMemo" parameterClass="map">
		<![CDATA[
			update T_RENT_FILE_SENDER_STATE 
			set HW_MEMO=#HW_MEMO#,STATE='9',HW_AUDIT_TIME=getDate()
			where ID =#FSS_ID# 
		]]>
   </update>  
   
   <!-- Add by Michael 2012 12-24 增加支票投递提醒 -->
   <!-- modify by xuyuefei 2014 7-15 增加公司别 -->
   	<select id="getRentCheckDelivery" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[		
			SELECT tpcm.ID,
			T1.ID PRCD_ID,
			 T2.RECT_ID,
			 T1.LEASE_CODE,
			 T2.RECT_STATUS,
			 T2.STATUS,
			 T3.CUST_NAME,
			 upper.NAME CLERK_NAME,
			 T6.NAME SENSOR_NAME,
			 T1.CONTRACT_TYPE,
			  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE,tpcm.RECORDED_STATUS,tpcm.DELIVERY_STATUS,
			  tpcm.PERIOD_NUM, tpcm.CHECK_OUT_DATE, tpcm.CHECK_NUM, tpcm.CHECK_MONEY, tpcm.MEMO, tpcm.FINANCE_MEMO,t_return.NUM,t_return.RETURN_REASON_NEW
			 ,TDY.FLAG as CHECK_TYPE
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join T_PRJT_CREDIT T1 on tpcm.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
      	  	   left join (select T1.NUM,T1.CUST_NAME,tdd.FLAG RETURN_REASON_NEW from 
(select count(*) NUM,CUST_NAME,max(ID) RETURN_ID from T_PRJT_CREDITSCHEME_CHECKMANAGE 
where state='4' and status=0 group by CUST_NAME) T1
left join T_PRJT_CREDITSCHEME_CHECKMANAGE t2 on T1.RETURN_ID=t2.ID
left join (select * from T_DATA_DICTIONARY where type='支票退票原因')tdd on t2.RETURN_REASON=tdd.CODE) t_return
on tpcm.CUST_NAME=t_return.CUST_NAME
			    left join t_data_dictionary TDY on TDY.CODE = tpcm.CHECK_TYPE and TDY.type='支票类别' and TDY.status=0 
			  WHERE tpcm.credit_id is not null and  T1.status='0' and tpcm.status='0' and tpcm.FINANCE_CHECK_STATE='1'
			  and tpcm.state='0' and tpcm.memo='正常'
			  and t1.COMPANY_CODE=#companyCode#
			 AND (CONVERT(DATE,tpcm.FORCAST_DELIVERY_DATE) in($DATES$) or CONVERT(DATE,tpcm.FORCAST_DELIVERY_DATE)<=getDate())
			 order by tpcm.CHECK_OUT_DATE
		]]>
	</select>

   	<select id="getRentCheckDelivery_new" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[		
			SELECT tpcm.ID,
			T1.ID PRCD_ID,
			 T2.RECT_ID,
			 T1.LEASE_CODE,
			 T2.RECT_STATUS,
			 T2.STATUS,
			 T3.CUST_NAME,
			 upper.NAME CLERK_NAME,
			 T6.NAME SENSOR_NAME,
			 T1.CONTRACT_TYPE,
			  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE,tpcm.RECORDED_STATUS,tpcm.DELIVERY_STATUS,
			  tpcm.PERIOD_NUM, tpcm.CHECK_OUT_DATE, tpcm.CHECK_NUM, tpcm.CHECK_MONEY, tpcm.MEMO, tpcm.FINANCE_MEMO,t_return.NUM,t_return.RETURN_REASON_NEW
			 	 ,TDY.FLAG as CHECK_TYPE
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join (select CHECK_ID,MAX(CREDIT_ID) CREDIT_ID from T_PRJT_CREDITSCHEME_CHECK where STATUS=0
			group  by CHECK_ID) TPCSC on tpcm.ID=TPCSC.CHECK_ID
			  left join T_PRJT_CREDIT T1 on TPCSC.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
      	  	   left join (select T1.NUM,T1.CUST_NAME,tdd.FLAG RETURN_REASON_NEW from 
(select count(*) NUM,CUST_NAME,max(ID) RETURN_ID from T_PRJT_CREDITSCHEME_CHECKMANAGE 
where state='4' and status=0 group by CUST_NAME) T1
left join T_PRJT_CREDITSCHEME_CHECKMANAGE t2 on T1.RETURN_ID=t2.ID
left join (select * from T_DATA_DICTIONARY where type='支票退票原因')tdd on t2.RETURN_REASON=tdd.CODE) t_return
on tpcm.CUST_NAME=t_return.CUST_NAME
    left join t_data_dictionary TDY on TDY.CODE = tpcm.CHECK_TYPE and TDY.type='支票类别' and TDY.status=0 
			  WHERE tpcm.credit_id is null and T1.status='0' and tpcm.status='0' and tpcm.FINANCE_CHECK_STATE='1'
			  and tpcm.state='0' and tpcm.memo='正常'
			  and t1.COMPANY_CODE=#companyCode#
			 AND (CONVERT(DATE,tpcm.FORCAST_DELIVERY_DATE) in($DATES$) or CONVERT(DATE,tpcm.FORCAST_DELIVERY_DATE)<=getDate())
			 order by tpcm.CHECK_OUT_DATE
		]]>
	</select>	
	<select id="getDispatchUserCount" parameterClass="map" resultClass="java.util.HashMap">
   		select  * from T_RENT_DISPATCH_USER_COUNT  where convert(date,CREATE_DATE,23)=convert(date,getDate(),23)
	</select>
	
	<!-- 退票提醒给相关的业务、财务人员  -->
	<select id="getReturnCheckDetail" parameterClass="map" resultClass="java.util.HashMap">
			SELECT
			 T1.LEASE_CODE,tpcm.STATE,
			 T3.CUST_NAME,
			 upper.NAME CLERK_NAME,
			 T6.NAME SENSOR_NAME,
			  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE,tpcm.RECORDED_STATUS,tpcm.DELIVERY_STATUS,
			  tpcm.PERIOD_NUM, tpcm.CHECK_OUT_DATE, tpcm.CHECK_NUM, tpcm.CHECK_MONEY, tpcm.MEMO, tpcm.FINANCE_MEMO,tdd.FLAG,tpcm.RECORDED_DATE
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join T_PRJT_CREDIT T1 on tpcm.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
        left join T_DATA_DICTIONARY tdd on tdd.[TYPE]='支票退票原因' and tdd.CODE = tpcm.RETURN_REASON
			  WHERE tpcm.credit_id is not null and T1.status='0' and tpcm.status='0' and (tpcm.state='4' or tpcm.state='1') 
        <![CDATA[        
	       	and convert(datetime,convert(varchar,year(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,month(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,day(convert(date,dateadd(day,-1,getDate()),23)))+' 17:00:00')<=tpcm.RECORDED_CREATE_DATE 
			and	tpcm.RECORDED_CREATE_DATE <convert(datetime,convert(varchar,year(GETDATE()))+'-'+convert(varchar,month(GETDATE()))+'-'+convert(varchar,day(GETDATE()))+' 17:00:00')
	       	]]>
		order by t9.DECP_NAME_CN desc
	</select>

	<!-- 退票提醒给相关的业务、财务人员  -->
	<select id="getReturnCheckDetail_new" parameterClass="map" resultClass="java.util.HashMap">
			SELECT
			 T1.LEASE_CODE,tpcm.STATE,
			 T3.CUST_NAME,
			 upper.NAME CLERK_NAME,
			 T6.NAME SENSOR_NAME,
			  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE,tpcm.RECORDED_STATUS,tpcm.DELIVERY_STATUS,
			  tpcm.PERIOD_NUM, tpcm.CHECK_OUT_DATE, tpcm.CHECK_NUM, tpcm.CHECK_MONEY, tpcm.MEMO, tpcm.FINANCE_MEMO,tdd.FLAG,tpcm.RECORDED_DATE
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join (select CHECK_ID,MAX(CREDIT_ID) CREDIT_ID from T_PRJT_CREDITSCHEME_CHECK where STATUS=0
			group  by CHECK_ID) TPCSC on tpcm.ID=TPCSC.CHECK_ID
			  left join T_PRJT_CREDIT T1 on TPCSC.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
        left join T_DATA_DICTIONARY tdd on tdd.[TYPE]='支票退票原因' and tdd.CODE = tpcm.RETURN_REASON
			  WHERE tpcm.credit_id is null and T1.status='0' and tpcm.status='0' and (tpcm.state='4' or tpcm.state='1') 
        <![CDATA[        
		     and convert(datetime,convert(varchar,year(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,month(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,day(convert(date,dateadd(day,-1,getDate()),23)))+' 17:00:00')<=tpcm.RECORDED_CREATE_DATE 
			 and	tpcm.RECORDED_CREATE_DATE <convert(datetime,convert(varchar,year(GETDATE()))+'-'+convert(varchar,month(GETDATE()))+'-'+convert(varchar,day(GETDATE()))+' 17:00:00')
	     ]]>
		order by t9.DECP_NAME_CN desc
	</select>
	
		<!-- 查询退票的相关人员（业务员、主管、业务行政）  -->
	<select id="getReturnCheckLinkEmail" parameterClass="map" resultClass="java.util.HashMap">
    	select * from (
       		SELECT T6.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join T_PRJT_CREDIT T1 on tpcm.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
        left join T_DATA_DICTIONARY tdd on tdd.[TYPE]='支票退票原因' and tdd.CODE = tpcm.RETURN_REASON
        left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is not null and T1.status='0' and tpcm.status='0' and (tpcm.state='4' or tpcm.state='1') and
        <![CDATA[        
	      	convert(datetime,convert(varchar,year(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,month(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,day(convert(date,dateadd(day,-1,getDate()),23)))+' 17:00:00')<=tpcm.RECORDED_CREATE_DATE 
			and	tpcm.RECORDED_CREATE_DATE <convert(datetime,convert(varchar,year(GETDATE()))+'-'+convert(varchar,month(GETDATE()))+'-'+convert(varchar,day(GETDATE()))+' 17:00:00')
		]]>
        union        
        SELECT upper.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join T_PRJT_CREDIT T1 on tpcm.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
        left join T_DATA_DICTIONARY tdd on tdd.[TYPE]='支票退票原因' and tdd.CODE = tpcm.RETURN_REASON
        left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is not null and T1.status='0' and tpcm.status='0' and (tpcm.state='4' or tpcm.state='1') and
        <![CDATA[        
	      	convert(datetime,convert(varchar,year(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,month(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,day(convert(date,dateadd(day,-1,getDate()),23)))+' 17:00:00')<=tpcm.RECORDED_CREATE_DATE 
			and	tpcm.RECORDED_CREATE_DATE <convert(datetime,convert(varchar,year(GETDATE()))+'-'+convert(varchar,month(GETDATE()))+'-'+convert(varchar,day(GETDATE()))+' 17:00:00')
		]]>
        union 
        SELECT tassiant.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join T_PRJT_CREDIT T1 on tpcm.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
        left join T_DATA_DICTIONARY tdd on tdd.[TYPE]='支票退票原因' and tdd.CODE = tpcm.RETURN_REASON
        left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is not null and T1.status='0' and tpcm.status='0' and (tpcm.state='4' or tpcm.state='1') and
        <![CDATA[        
	      	convert(datetime,convert(varchar,year(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,month(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,day(convert(date,dateadd(day,-1,getDate()),23)))+' 17:00:00')<=tpcm.RECORDED_CREATE_DATE 
			and	tpcm.RECORDED_CREATE_DATE <convert(datetime,convert(varchar,year(GETDATE()))+'-'+convert(varchar,month(GETDATE()))+'-'+convert(varchar,day(GETDATE()))+' 17:00:00')
		]]>
		) TT where EMAIL is not null
	</select>

		<!-- 查询退票的相关人员（业务员、主管、业务行政）  -->
	<select id="getReturnCheckLinkEmail_new" parameterClass="map" resultClass="java.util.HashMap">
    	select * from (
       		SELECT T6.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join (select CHECK_ID,MAX(CREDIT_ID) CREDIT_ID from T_PRJT_CREDITSCHEME_CHECK where STATUS=0
			group  by CHECK_ID) TPCSC on tpcm.ID=TPCSC.CHECK_ID
			left join T_PRJT_CREDIT T1 on TPCSC.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
        left join T_DATA_DICTIONARY tdd on tdd.[TYPE]='支票退票原因' and tdd.CODE = tpcm.RETURN_REASON
        left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is null and T1.status='0' and tpcm.status='0' and (tpcm.state='4' or tpcm.state='1') 
        <![CDATA[
	      	and convert(datetime,convert(varchar,year(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,month(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,day(convert(date,dateadd(day,-1,getDate()),23)))+' 17:00:00')<=tpcm.RECORDED_CREATE_DATE 
			and	tpcm.RECORDED_CREATE_DATE <convert(datetime,convert(varchar,year(GETDATE()))+'-'+convert(varchar,month(GETDATE()))+'-'+convert(varchar,day(GETDATE()))+' 17:00:00')
		]]>
        union        
        SELECT upper.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join (select CHECK_ID,MAX(CREDIT_ID) CREDIT_ID from T_PRJT_CREDITSCHEME_CHECK where STATUS=0
			group  by CHECK_ID) TPCSC on tpcm.ID=TPCSC.CHECK_ID
			left join T_PRJT_CREDIT T1 on TPCSC.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
        left join T_DATA_DICTIONARY tdd on tdd.[TYPE]='支票退票原因' and tdd.CODE = tpcm.RETURN_REASON
        left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is null and T1.status='0' and tpcm.status='0' and (tpcm.state='4' or tpcm.state='1') 
        <![CDATA[        
	      	and convert(datetime,convert(varchar,year(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,month(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,day(convert(date,dateadd(day,-1,getDate()),23)))+' 17:00:00')<=tpcm.RECORDED_CREATE_DATE 
			and	tpcm.RECORDED_CREATE_DATE <convert(datetime,convert(varchar,year(GETDATE()))+'-'+convert(varchar,month(GETDATE()))+'-'+convert(varchar,day(GETDATE()))+' 17:00:00')
		]]>
        union 
        SELECT tassiant.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join (select CHECK_ID,MAX(CREDIT_ID) CREDIT_ID from T_PRJT_CREDITSCHEME_CHECK where STATUS=0
			group  by CHECK_ID) TPCSC on tpcm.ID=TPCSC.CHECK_ID
			left join T_PRJT_CREDIT T1 on TPCSC.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
        left join T_DATA_DICTIONARY tdd on tdd.[TYPE]='支票退票原因' and tdd.CODE = tpcm.RETURN_REASON
        left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is null and T1.status='0' and tpcm.status='0' and (tpcm.state='4' or tpcm.state='1') 
        <![CDATA[        
	      	and convert(datetime,convert(varchar,year(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,month(convert(date,dateadd(day,-1,getDate()),23)))+'-'+convert(varchar,day(convert(date,dateadd(day,-1,getDate()),23)))+' 17:00:00')<=tpcm.RECORDED_CREATE_DATE 
			and	tpcm.RECORDED_CREATE_DATE <convert(datetime,convert(varchar,year(GETDATE()))+'-'+convert(varchar,month(GETDATE()))+'-'+convert(varchar,day(GETDATE()))+' 17:00:00')
		]]>
		) TT where EMAIL is not null
	</select>

		<!-- 查询换票通知的相关人员（业务员、主管、业务行政）  -->
	<select id="getCheckChangeCheckLinkEmail" parameterClass="map" resultClass="java.util.HashMap">
    	select * from (
       		SELECT T6.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join T_PRJT_CREDIT T1 on tpcm.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
			  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
        	  left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is not null and T1.status='0' and tpcm.status='0' and tpcm.state='0' and tpcm.memo='换票' 
			  <![CDATA[ 
			  and datediff(day,getdate(),tpcm.FORCAST_DELIVERY_DATE)<=30
			  ]]>
        union        
        SELECT upper.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join T_PRJT_CREDIT T1 on tpcm.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
			  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
              left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is not null and T1.status='0' and tpcm.status='0' and tpcm.state='0' and tpcm.memo='换票' 
			  <![CDATA[ 
			  and datediff(day,getdate(),tpcm.FORCAST_DELIVERY_DATE)<=30
			  ]]>
        union 
        SELECT tassiant.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join T_PRJT_CREDIT T1 on tpcm.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
			  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
              left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is not null and T1.status='0' and tpcm.status='0' and tpcm.state='0' and tpcm.memo='换票'
			  <![CDATA[ 
			  and datediff(day,getdate(),tpcm.FORCAST_DELIVERY_DATE)<=30
			  ]]>			   
		) TT where EMAIL is not null
	</select>

		<!-- 查询换票通知的相关人员（业务员、主管、业务行政）  -->
	<select id="getCheckChangeCheckLinkEmail_new" parameterClass="map" resultClass="java.util.HashMap">
    	select * from (
       		SELECT T6.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join (select CHECK_ID,MAX(CREDIT_ID) CREDIT_ID from T_PRJT_CREDITSCHEME_CHECK where STATUS=0
			group  by CHECK_ID) TPCSC on tpcm.ID=TPCSC.CHECK_ID
			left join T_PRJT_CREDIT T1 on TPCSC.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
			  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
              left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is null and T1.status='0' and tpcm.status='0' and tpcm.state='0' and tpcm.memo='换票'
			  <![CDATA[ 
			  and datediff(day,getdate(),tpcm.FORCAST_DELIVERY_DATE)<=30
			  ]]>			   
        union        
        SELECT upper.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join (select CHECK_ID,MAX(CREDIT_ID) CREDIT_ID from T_PRJT_CREDITSCHEME_CHECK where STATUS=0
			group  by CHECK_ID) TPCSC on tpcm.ID=TPCSC.CHECK_ID
			left join T_PRJT_CREDIT T1 on TPCSC.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
			  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
              left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is null and T1.status='0' and tpcm.status='0' and tpcm.state='0' and tpcm.memo='换票' 
			  <![CDATA[ 
			  and datediff(day,getdate(),tpcm.FORCAST_DELIVERY_DATE)<=30
			  ]]>			  
        union 
        SELECT tassiant.EMAIL EMAIL
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join (select CHECK_ID,MAX(CREDIT_ID) CREDIT_ID from T_PRJT_CREDITSCHEME_CHECK where STATUS=0
			group  by CHECK_ID) TPCSC on tpcm.ID=TPCSC.CHECK_ID
			left join T_PRJT_CREDIT T1 on TPCSC.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
			  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
              left join T_USER_USER tassiant on tassiant.DEPT_ID=upper.DEPT_ID and tassiant.[JOB]='8' and tassiant.status=0
			  WHERE tpcm.credit_id is null and T1.status='0' and tpcm.status='0' and tpcm.state='0' and tpcm.memo='换票' 
			  <![CDATA[ 
			  and datediff(day,getdate(),tpcm.FORCAST_DELIVERY_DATE)<=30
			  ]]>			  
		) TT where EMAIL is not null
	</select>
	
	<!-- 换票提醒给相关的业务、财务人员  -->
	<select id="getChangeTicketDetail" parameterClass="map" resultClass="java.util.HashMap">
			SELECT
			 T1.LEASE_CODE,
			 T3.CUST_NAME,
			 upper.NAME CLERK_NAME,
			 T6.NAME SENSOR_NAME,
			  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE,tpcm.RECORDED_STATUS,tpcm.DELIVERY_STATUS,
			  tpcm.PERIOD_NUM, tpcm.CHECK_OUT_DATE, tpcm.CHECK_NUM, tpcm.CHECK_MONEY, tpcm.MEMO, tpcm.FINANCE_MEMO,tpcm.RECORDED_DATE
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join T_PRJT_CREDIT T1 on tpcm.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
			  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
			  WHERE tpcm.credit_id is not null and T1.status='0' and tpcm.status='0' and tpcm.state='0' and tpcm.memo='换票' 
			  <![CDATA[ 
			  and datediff(day,getdate(),tpcm.FORCAST_DELIVERY_DATE)<=30
			  ]]>			  
		order by t9.DECP_NAME_CN desc
	</select>	

	<!-- 退票提醒给相关的业务、财务人员  -->
	<select id="getChangeTicketDetail_new" parameterClass="map" resultClass="java.util.HashMap">
			SELECT
			 T1.LEASE_CODE,
			 T3.CUST_NAME,
			 upper.NAME CLERK_NAME,
			 T6.NAME SENSOR_NAME,
			  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE,tpcm.RECORDED_STATUS,tpcm.DELIVERY_STATUS,
			  tpcm.PERIOD_NUM, tpcm.CHECK_OUT_DATE, tpcm.CHECK_NUM, tpcm.CHECK_MONEY, tpcm.MEMO, tpcm.FINANCE_MEMO,tpcm.RECORDED_DATE
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join (select CHECK_ID,MAX(CREDIT_ID) CREDIT_ID from T_PRJT_CREDITSCHEME_CHECK where STATUS=0
			group  by CHECK_ID) TPCSC on tpcm.ID=TPCSC.CHECK_ID
			  left join T_PRJT_CREDIT T1 on TPCSC.credit_id=t1.ID
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
			  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
			  WHERE tpcm.credit_id is null and T1.status='0' and tpcm.status='0' and tpcm.state='0' and tpcm.memo='换票'
			  <![CDATA[ 
			  and datediff(day,getdate(),tpcm.FORCAST_DELIVERY_DATE)<=30
			  ]]>			  
		order by t9.DECP_NAME_CN desc
	</select>
	
	<select id="getAllLeaseCodeByCustName" parameterClass="map" resultClass="java.util.HashMap">
    	select tpc.LEASE_CODE,tpc.ID CREDIT_ID,tcc.CUST_NAME from t_prjt_credit tpc
	    left join  T_CUST_CUSTOMER tcc on tpc.CUST_ID = tcc.CUST_ID and  tcc.STATUS = 0
	    where tpc.LEASE_CODE is not null and tpc.STATUS=0
		and tcc.CUST_NAME like '%$CUST_NAME$%'
	</select>
	
	<select id="getLeaseTermByCreditID" parameterClass="map" resultClass="java.lang.Long">
		select  LEASE_TERM from T_PRJT_CREDITSCHEME where CREDIT_ID=#CREDIT_ID#
	</select>
	
   	<update id="updateRentCheckPayLines_new" parameterClass="map">
		<![CDATA[
			update T_PRJT_CREDITSCHEME_CHECKMANAGE 
			   set   CHECK_OUT_DATE=#CHECKOUT_DATE#,
			   CHECK_NUM=#CHECK_NUM#,
			   CHECK_MONEY=#CHECK_MONEY#,
			   MEMO=#MEMO#,
			   MODIFY_ID=#s_employeeId#,
			   MODIFY_DATE=getDate(),
			   DRAWER=#DRAWER#,
			   CUST_NAME=#CUST_NAME_R#,FORCAST_DELIVERY_DATE=#CHECKOUT_DATE#,CHECK_TYPE=#CHECK_TYPE#
			where ID=#ID#
		]]>
   </update> 
   
   	<insert id="createRentCheckPayLines_new"   parameterClass="map">
	 <![CDATA[
		insert into T_PRJT_CREDITSCHEME_CHECKMANAGE
		  (
		   CHECK_OUT_DATE,
		   CHECK_NUM,
		   CHECK_MONEY,
		   MEMO,
		   CREATE_ID,
		   CREATE_DATE,
		   MODIFY_ID,
		   MODIFY_DATE,STATE,
		   STATUS,DRAWER,CUST_NAME,FORCAST_DELIVERY_DATE,CHECK_TYPE
		   )
		values
		  (
		   #CHECKOUT_DATE#,
		   #CHECK_NUM#,
		   #CHECK_MONEY#,
		   #MEMO#,
		   #s_employeeId#,
		   getDate(),
   		   #s_employeeId#,
		   getDate(),0,
		   0,#DRAWER#,#CUST_NAME_R#,#CHECKOUT_DATE#,#CHECK_TYPE#
		   )
	 ]]> 
 	<selectKey resultClass="java.lang.Long" keyProperty="ID">
		SELECT @@IDENTITY AS ID
	</selectKey> 
	</insert>
	
	<insert id="createRentCheckPayManageLog_new"   parameterClass="map">
		 <![CDATA[
			insert into T_PRJT_CREDITSCHEME_CHECKMANAGE_LOG
			  (
			   CHECK_OUT_DATE,
			   CHECK_NUM,
			   CHECK_MONEY,
			   MEMO,
			   CREATE_ID,
			   CREATE_DATE,
			   REMARK,
			   CHECK_ID,DRAWER,CUST_NAME,ACTION_TYPE
			   )
			values
			  (
			   #CHECKOUT_DATE#,
			   #CHECK_NUM#,
			   #CHECK_MONEY#,
			   #MEMO#,
			   #s_employeeId#,
			   getDate(),
			   #REMARK#,
			   #ID#,#DRAWER#,#CUST_NAME_R#,#ACTION_TYPE#
			   )
		 ]]> 
	  	<selectKey resultClass="java.lang.Long" keyProperty="ID">
			SELECT @@IDENTITY AS ID
		</selectKey>  
	</insert>
	
   	<update id="deleteRentCheckSchema" parameterClass="map">
		<![CDATA[
			update T_PRJT_CREDITSCHEME_CHECK 
			   set STATUS=-2
			where CHECK_ID=#CHECK_ID#
		]]>
   </update> 	
   
   	<insert id="addRentCheckSchema"   parameterClass="map">
		INSERT INTO T_PRJT_CREDITSCHEME_CHECK
           (CREDIT_ID
           ,CREATE_DATE
           ,CREATE_ID
           ,MODIFY_ID
           ,MODIFY_DATE
           ,STATUS
           ,CHECK_START
           ,CHECK_END
           ,CHECK_ID,CUST_NAME,LOG_ID
           )values(
       	#CREDIT_ID#
           ,GETDATE()
           ,#s_employeeId#
           ,#s_employeeId#
           ,GETDATE()
           ,0
           ,#CHECK_START#
           ,#CHECK_END#
           ,#CHECK_ID#,#CUST_NAME#,#LOG_ID#
           )
	</insert>	
	
	 <select id="queryAllRentCheckDetail_new" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ SELECT tpcm.*,tdd.FLAG BANK_NAME
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join (select  FLAG, CODE from T_DATA_DICTIONARY where type = '支票投递银行') tdd
			  on tpcm.BANK_CODE=tdd.CODE
			  WHERE tpcm.status='0' and tpcm.FINANCE_CHECK_STATE='1'
			]]>
			<isNotEmpty prepend="and" property="companyCode">
			    exists (select check_id
			    from T_PRJT_CREDITSCHEME_CHECK t 
			    left join t_prjt_credit tpc on tpc.id = t.credit_id and tpc.status = 0
			    where t.status=0 and tpc.company_code = #companyCode# and t.check_id = tpcm.id
				)
			</isNotEmpty>
             <isNotEmpty property="QSTART_DATE">
             	<![CDATA[
             		AND CONVERT(DATE,tpcm.CHECK_OUT_DATE)>=CONVERT(DATE,#QSTART_DATE#)
           		]]>
             </isNotEmpty>
             <isNotEmpty property="QEND_DATE">
             	<![CDATA[
             		AND CONVERT(DATE,tpcm.CHECK_OUT_DATE)<=CONVERT(DATE,#QEND_DATE#)
           		]]>
             </isNotEmpty>
    		<isNotEmpty prepend="" property="DELIVERY_STATUS">
	    		<isNotEqual prepend="" property="DELIVERY_STATUS" compareValue="-1">
					AND tpcm.STATE=#DELIVERY_STATUS#												
				</isNotEqual>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				(	tpcm.CUST_NAME LIKE '%$QSEARCH_VALUE$%' 
				 	or tpcm.CHECK_NUM like '%$QSEARCH_VALUE$%'
				 )
			</isNotEmpty>
			<isNotEmpty prepend="and" property="MEMO">
				tpcm.MEMO = #MEMO# 
			</isNotEmpty>	
			<isNotEmpty prepend="and" property="CHECK_TYPE">
				tpcm.CHECK_TYPE = #CHECK_TYPE# 
			</isNotEmpty>			
	</select>
	
	<select id="queryAllRentCheckDetailByIds" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ SELECT tpcm.*,tdd.FLAG BANK_NAME
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  left join (select  FLAG, CODE from T_DATA_DICTIONARY where type = '支票投递银行') tdd
			  on tpcm.BANK_CODE=tdd.CODE
			  WHERE tpcm.status='0' and tpcm.FINANCE_CHECK_STATE='1'
			]]>
             <isNotEmpty property="ids">
             	AND tpcm.id in 
             <iterate property="ids" open="(" close=")" conjunction=",">
				<![CDATA[
                    #ids[]#   
            	]]>
			</iterate>
            </isNotEmpty>
	</select>
	
	<select id="checkRentCheckNum" parameterClass="map" resultClass="java.lang.Integer">
	    select count(*) COUNT from T_PRJT_CREDITSCHEME_CHECKMANAGE 
	    where status='0' and state!='1' and CHECK_NUM=#CHECK_NUM#
	</select>

 	<update id="deleteRentCheck" parameterClass="map"> 
   		update T_PRJT_CREDITSCHEME_CHECKMANAGE
   		set state=#STATE#,FINANCE_MEMO=#FINANCE_MEMO#,RECORDED_DATE=getDate()
 		where ID=#ID#
   </update>
   	
   	<update id="updateRentCheckState" parameterClass="map">
		update T_PRJT_CREDITSCHEME_CHECKMANAGE 
		   set state=#STATE#,FINANCE_MEMO=#FINANCE_MEMO#
 			<isNotEmpty prepend="," property="TRANSFER_TO">
				TRANSFER_TO=#TRANSFER_TO#
			</isNotEmpty>
 			<isNotEmpty prepend="," property="BACK_TO">
				BACK_TO=#BACK_TO#
			</isNotEmpty>
		where ID=#ID#
   </update> 
	
   <select id="queryRentCheckLeaseCode" parameterClass="map" resultClass="java.util.HashMap">
        select tpcc.*,tpc.lease_code from 
        T_PRJT_CREDITSCHEME_CHECKMANAGE tpccm
        left join T_PRJT_CREDITSCHEME_CHECK tpcc on tpccm.ID = tpcc.CHECK_ID   and tpcc.STATUS = 0
        left join T_PRJT_CREDIT tpc on tpc.id=tpcc.CREDIT_ID 
        where tpccm.ID=#ID#
   </select>
 
   	<select id="queryRentCheckDetailForKeyIn" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ 
			SELECT tpcm.*
			  FROM   T_PRJT_CREDITSCHEME_CHECKMANAGE tpcm
			  WHERE tpcm.status='0' 
			]]>
			<isNotEmpty prepend="and" property="companyCode">
			    exists (select check_id
			    from T_PRJT_CREDITSCHEME_CHECK t 
			    left join t_prjt_credit tpc on tpc.id = t.credit_id and tpc.status = 0
			    where t.status=0 and tpc.company_code = #companyCode# and t.check_id = tpcm.id
				)
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				(	tpcm.CUST_NAME LIKE '%$QSEARCH_VALUE$%' 
				 	or tpcm.CHECK_NUM like '%$QSEARCH_VALUE$%'
				 )
			</isNotEmpty>
	</select>
	
	<select id="queryRentCheckDetailForID" parameterClass="map" resultClass="java.util.HashMap">	
		select * from 
		T_PRJT_CREDITSCHEME_CHECKMANAGE
		where id=#ID#
	</select>
	
	<select id="getRentCheckPayDetailLog" parameterClass="map" resultClass="java.util.HashMap">	
      select tpcc.*,tuu.[NAME],tpc.LEASE_CODE,tpccm.MEMO from T_PRJT_CREDITSCHEME_CHECK  tpcc
      left join T_USER_USER tuu on tpcc.CREATE_ID=tuu.id
      left join T_PRJT_CREDIT tpc on tpc.id=tpcc.CREDIT_ID
      left join T_CUST_CUSTOMER tcc on tpc.CUST_ID = tcc.CUST_ID
      left join T_PRJT_CREDITSCHEME_CHECKMANAGE tpccm on tpcc.CHECK_ID=tpccm.ID
      where tpccm.ID=#ID# and tpcc.status=0 and tpccm.status=0
		order by tpcc.ID desc
	</select>

   <update id="modifyDeliveryDate" parameterClass="map">
		update T_PRJT_CREDITSCHEME_CHECKMANAGE 
		set FORCAST_DELIVERY_DATE=#FORCAST_DELIVERY_DATE#
		where ID=#ID#
   </update> 
   	<!-- 修改投递银行 -->
	<update id="updateBankById" parameterClass="map">
		update T_PRJT_CREDITSCHEME_CHECKMANAGE 
		set BANK_CODE=#DELIVERY_BANK#
		where ID=#ID#
   </update>
	<select id="queryRentSettleFileSend" parameterClass="map" resultClass="java.util.HashMap">
				  SELECT T1.ID PRCD_ID,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 upper.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T1.CONTRACT_TYPE,
						 t1.wind_result_date,
						  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE,trss.STATE
			  FROM  T_RENT_CONTRACT T2 
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T2.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T2.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
      	  	  left join t_prjt_credit t1 on t1.id = t2.prcd_id and t1.status=0
      	  	  left join T_RENT_SETTLEFILE_SEND trss on trss.rect_id=t2.rect_id
      	  	  left join T_RENT_COLLECTIONPLAN trcp on trcp.rect_id=t2.rect_id and trcp.RECP_STATUS!=0 and trcp.status=0
			  WHERE (T2.STATUS!=-2 OR T2.STATUS IS NULL) 
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(	 T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
					 	or t1.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%'
					 )
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS is null ]]>
					</isEqual>
					<isNotEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
			  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
			  		 t2.status=#RENTSTAUTS#
			  	</isNotEqual> 
		  	</isNotEmpty>
			<isNotEmpty property="STATE">
			  		 trss.STATE=#STATE#
		  	</isNotEmpty>
		<![CDATA[  GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          upper.NAME,
			          T6.NAME,
			          T1.CONTRACT_TYPE,
			          t1.wind_result_date,
			          t9.DECP_NAME_CN,
			          t1.CREDIT_RUNCODE,trss.STATE
		]]>
	</select>
	
	<select id="selectRentSettleApplyDetail" parameterClass="map" resultClass="hashmap">
		<![CDATA[ 
           select   *
           from T_RENT_SETTLEFILE_SEND 
           where rect_id = #RECT_ID#
		 ]]> 
	</select>

	<select id="queryRentSettleFileSendForExam" parameterClass="map" resultClass="java.util.HashMap">
		SELECT trss.ID,
		 trss.STATE,
		 T2.RECT_ID,
		 T1.LEASE_CODE,
		 T2.RECT_STATUS,
		 T2.STATUS,T2.PRCD_ID,
		 T3.CUST_NAME,
		 upper.NAME CLERK_NAME,
		 T6.NAME SENSOR_NAME,
		 T1.CONTRACT_TYPE,
		 t1.wind_result_date,
		  t9.DECP_NAME_CN,t1.CREDIT_RUNCODE
	  FROM  T_RENT_SETTLEFILE_SEND trss 
      left join T_RENT_CONTRACT T2 on trss.rect_id=t2.rect_id
	  LEFT JOIN T_CUST_CUSTOMER T3 ON T2.CUST_ID = T3.CUST_ID
	  LEFT JOIN T_USER_USER T6 ON T2.SENSOR_ID = T6.ID
	  left join T_USER_USER upper on upper.id = T6.upper_user
	  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
  	  left join t_prjt_credit t1 on t1.id = t2.prcd_id and t1.status=0
	  WHERE trss.STATUS=0 
	<isNotEmpty prepend="and" property="QSEARCH_VALUE">
		<![CDATA[
			(	 T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
				OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
			 	or t1.CREDIT_RUNCODE like '%$QSEARCH_VALUE$%'
			 )
		  ]]>
	</isNotEmpty>
	<isNotEmpty prepend="and" property="STATE">
		trss.state = #STATE#
	</isNotEmpty>	
	</select>
	
   <update id="updateRentSettleExam" parameterClass="map">
		update T_RENT_SETTLEFILE_SEND
		   set  STATE= #TYPE#,
		   REMARK=#REMARK#,
		       EXAM_ID = #s_employeeId#,
		       EXAM_TIME = GETDATE()
		 where id = #ID#  
   </update>
 
    <update id="updateLessorTime" parameterClass="map">
		update T_PRJT_CREDIT
		   set LESSOR_TIME = #LESSOR_TIME#
		 where id = #CREDIT_ID#  
   </update>  
 
 	<select id="queryRentPostFileManage" parameterClass="map" resultClass="java.util.HashMap">
				  SELECT T1.ID POST_ID,T1.POST_CODE,T2.PRCD_ID,T1.POST_DATE,
						 T2.RECT_ID,
						 T2.LEASE_CODE,
						 T3.CUST_NAME,
						 upper.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.RECT_TYPE CONTRACT_TYPE,
						  t9.DECP_NAME_CN,t1.POST_NAME
			  FROM T_RENT_FILE_POST_MANAGE T1
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.PRCD_ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T2.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_USER_USER T6 ON T2.SENSOR_ID = T6.ID
			  left join T_USER_USER upper on upper.id = T6.upper_user
			  left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
      	  	  left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
			  WHERE T1.STATUS=0 AND T2.STATUS=0
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<![CDATA[ 
		  	 	(T2.SENSOR_ID = #s_employeeId#
		  	 	or upper.ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[
					exists(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId# and uc.dept_id = dept.id)
				]]>
			</isEqual>
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(	T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' 
						OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
					 	OR upper.NAME LIKE '%$QSEARCH_VALUE$%' 
					 	OR T6.NAME LIKE '%$QSEARCH_VALUE$%'
					 	or t9.DECP_NAME_CN like '%$QSEARCH_VALUE$%'
					 	or t1.POST_CODE like '%$QSEARCH_VALUE$%'
					 )
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="POST_NAME">
				<![CDATA[
					(	 t1.POST_NAME = #POST_NAME#
					 )
				  ]]>
			</isNotEmpty>			
			<isNotEmpty prepend="and" property="QSTART_DATE">
				<![CDATA[
				 CONVERT(DATE,
					t1.POST_DATE
				 ) >= #QSTART_DATE# 
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
			<![CDATA[
				  CONVERT(DATE,
					t1.POST_DATE
				 ) <= #QEND_DATE#
				 ]]>
			</isNotEmpty>
			<isNotEmpty prepend="" property="POST_CODE">
					<isEqual prepend="and" property="POST_CODE" compareValue="0">
						<![CDATA[ t1.POST_CODE is not null ]]>
					</isEqual>
					<isEqual prepend="and" property="POST_CODE" compareValue="1">
						<![CDATA[ t1.POST_CODE is null ]]>
					</isEqual>
			</isNotEmpty>
	</select> 
		<!--  query查询出有支付的合同 -->
	<select id="queryRentContractByModifyLockCode" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ SELECT T1.ID PRCD_ID,
						 T1.STATUS PRCD_STATUS,
						 T2.RECT_ID,
						 T1.LEASE_CODE,
						 T2.RECT_STATUS,
						 T2.STATUS,
						 T3.CUST_NAME,
						 T4.NAME AREA,
						 T5.NAME CLERK_NAME,
						 T6.NAME SENSOR_NAME,
						 T2.LESSOR_TIME,
						 MAX(T7.BRAND) BRAND
			  FROM T_PRJT_CREDIT T1
			  LEFT JOIN T_RENT_CONTRACT T2 ON T1.ID = T2.PRCD_ID
			  LEFT JOIN T_CUST_CUSTOMER T3 ON T1.CUST_ID = T3.CUST_ID
			  LEFT JOIN T_AREA T4 ON T1.PROVINCE_ID = T4.ID
			  LEFT JOIN T_USER_USER T5 ON T1.CLERK_ID = T5.ID
			  LEFT JOIN T_USER_USER T6 ON T1.SENSOR_ID = T6.ID
			  LEFT JOIN T_PRJT_CREDITEQUIPMENT T7 ON T1.ID = T7.CREDIT_ID
			  WHERE T1.STATUS=0 AND (T1.WIND_STATE=1 OR T1.WIND_STATE=2)
			]]>

			<!-- 2012/01/11 Yang Yun 增加区域筛选功能.End -->
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T1.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T2.LEASE_CODE LIKE '%$QSEARCH_VALUE$%' OR T3.CUST_NAME LIKE '%$QSEARCH_VALUE$%'
				  OR T5.NAME LIKE '%$QSEARCH_VALUE$%' OR T6.NAME LIKE '%$QSEARCH_VALUE$%')
				  ]]>
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QSTART_DATE">
				 T2.LESSOR_TIME&gt;=cast(#QSTART_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="QEND_DATE">
				 T2.LESSOR_TIME&lt;=cast(#QEND_DATE# as datetime) 
			</isNotEmpty>
			<isNotEmpty prepend="" property="QSELECT_STATUS">
				<isNotEqual prepend="" property="QSELECT_STATUS" compareValue="-2">
					<isEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS is null ]]>
					</isEqual>
					<isNotEqual prepend="and" property="QSELECT_STATUS" compareValue="-1">
						<![CDATA[ t2.RECT_STATUS = #QSELECT_STATUS# ]]>
					</isNotEqual>
				</isNotEqual>
			</isNotEmpty>
			<isNotEmpty property="RENTSTAUTS">
		  	<isNotEqual prepend="and" property="RENTSTAUTS" compareValue="-3">
		  		 t2.status=#RENTSTAUTS#
		  	</isNotEqual> 
		  	</isNotEmpty>
			
		<![CDATA[  GROUP BY T1.ID,
			          T1.STATUS,
			          T2.RECT_ID,
			          T1.LEASE_CODE,
			          T2.RECT_STATUS,
			          T2.STATUS,
			          T3.CUST_NAME,
			          T4.NAME,
			          T5.NAME,
			          T6.NAME,
			          T2.LESSOR_TIME
		]]>
	</select> 
	
	<select id="queryPrjtFeeSourceByPrcdID" parameterClass="map" resultClass="java.util.HashMap">	
		select tpcf.fee,tpcf.create_filed_name,tdd.FLAG from T_PRJT_CREDIT_FEELIST  tpcf
		left join T_DATA_DICTIONARY tdd on tpcf.SOURCE_CODE=tdd.CODE and tdd.TYPE='费用来源'
		where tpcf.credit_id=#PRCD_ID#
	</select>
	
	<!-- Add by Michael 2013 04-11 增加 退款审批 -->
	<select id="queryPayMoneyByReturnMoney" parameterClass="map" resultClass="java.util.HashMap">
		<![CDATA[ select  	t1.*,t6.NAME,upper.NAME UPPER_NAME,t9.DECP_NAME_CN
							FROM T_SUPL_PLAYDETIL T1
							LEFT JOIN T_USER_USER T6 ON T1.CREATE_ID = T6.ID
						    left join T_USER_USER upper on upper.id = T6.upper_user
			  				left join T_DEPT_DEPARTMENT dept on dept.ID = T6.DEPT_ID and dept.STATUS = 0
			  				left join T_DEPT_COMPANY t9 on dept.DECP_ID = t9.DECP_ID and t9.STATUS = 0
							where  T1.BACKSTATE = #BACKSTATE#
			]]>
			<isEqual prepend="and" property="p_usernode" compareValue="1">
		  	 	<![CDATA[ 
		  	 	(T1.CREATE_ID = #s_employeeId#
		  	 	or upper.ID = #s_employeeId#)
		  	 	]]>
		  	</isEqual>
			<isEqual prepend="and" property="p_usernode" compareValue="2">
				<![CDATA[
					exists(select uc.DEPT_ID from dbo.T_USER_USER2COMPANY uc
					where uc.USER_ID = #s_employeeId# and uc.dept_id = dept.id)
				]]>
			</isEqual>
			<isNotEmpty prepend="and" property="QSEARCH_VALUE">
				<![CDATA[
					(T1.BACKCOMP LIKE '%$QSEARCH_VALUE$%' 
					OR T6.NAME LIKE '%$QSEARCH_VALUE$%'
					or t9.DECP_NAME_CN LIKE '%$QSEARCH_VALUE$%'
				 	)
				  ]]>
			</isNotEmpty>		  	
			<isNotEmpty prepend="" property="shen_pi_STATE">
			  <isNotEqual prepend="" property="QSELECT_STATUS" compareValue="9">
			    <isEqual prepend="and" property="shen_pi_STATE" compareValue="0">
						<![CDATA[ t1.STATUS=0 and (T1.STATE=0 or T1.STATE=1) ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="1">
						<![CDATA[ t1.STATUS=0 and T1.STATE=3 ]]>
					</isEqual>
					<isEqual prepend="and" property="shen_pi_STATE" compareValue="2">
						<![CDATA[ t1.STATUS=1  ]]>
					</isEqual>
				</isNotEqual>
			</isNotEmpty>
	</select>	
	
	
   	<insert id="addRenturnMoneyLog"   parameterClass="map">
		INSERT INTO T_INCOME_RETURN_LOG
           (CREATE_ID
           ,CREATE_TIME
           ,MEMO
           ,RETURN_PAY_ID
           )values(
           #s_employeeId#
           ,GETDATE()
           ,#memo#
           ,#RETURN_PAY_ID#
           )
	</insert>
	
	<!-- 合同控管表SQL -->
	<select id="getContractControlSheet" resultClass="java.util.HashMap">
	     SELECT  TPC.CREDIT_RUNCODE,TRC.LEASE_CODE,O.BACKCOMP,TCC.CUST_NAME,TPCE.PLEDGE_PRICE,TPCE.PLEDGE_ENTER_AG,TPCE.PLEDGE_ENTER_CMPRICE,
	             ISNULL(TPCE.PLEDGE_AVE_PRICE,0)/TPCE.LEASE_TERM AVG_PRICE,TPCE.LEASE_TOPRIC,O.PAY_MONEY,O.PAY_ORDER,TPC.ID,
	             CONVERT(DATE,TRCN.FIRST_PAYDATE) START_DATE,O.COMPANY_PAY_DATE PAY_DATE,TPCE.LEASE_TERM,TDD.FLAG PAY_WAY,TUU.NAME,TDC.DECP_NAME_CN,
	             O.NOTAXINTEREST117,O.EXPECTEDRENT,O.NOTAXINTEREST,O.INTERESTTAX,O.NOTAXOWN,O.TAXES,TRCN.TAX_PLAN_CODE,
          		 TPC.CONTRACT_TYPE,O.PAY_DATE BANK_PAY_DATE
            FROM T_PRJT_CREDIT TPC   
	   LEFT JOIN T_USER_USER TUU ON TPC.SENSOR_ID=TUU.ID
	   LEFT JOIN T_DEPT_DEPARTMENT TDDT ON TDDT.STATUS=0 AND TUU.DEPT_ID=TDDT.ID
	   LEFT JOIN T_DEPT_COMPANY TDC ON TDC.STATUS=0 AND TDDT.DECP_ID=TDC.DECP_ID
	   LEFT JOIN T_CUST_CUSTOMER TCC ON TCC.STATUS=0 AND TPC.CUST_ID=TCC.CUST_ID
	   LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.STATUS=0 AND TPC.ID=TPCE.CREDIT_ID
	   LEFT JOIN T_RENT_CONTRACT TRC ON TRC.STATUS=0 AND TPC.ID=TRC.PRCD_ID
	   LEFT JOIN T_RENT_COLLECTIONPLAN TRCN ON TRCN.STATUS=0 AND TRC.RECT_ID=TRCN.RECT_ID
	   LEFT JOIN T_DATA_DICTIONARY TDD ON TDD.STATUS=0 AND TDD.[TYPE]='支付方式' AND TPCE.PAY_WAY=TDD.CODE
     LEFT JOIN 
              (SELECT T.EXPECTEDRENT,T.NOTAXINTEREST,T.NOTAXINTEREST117,T.INTERESTTAX,T.NOTAXOWN,T.TAXES,T.RECP_ID,TRC.LEASE_CODE 
               ,SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,MIN(PAY_DATE) PAY_DATE,PAY_ORDER,BACKCOMP,MIN(TSP.COMPANY_PAY_DATE) COMPANY_PAY_DATE
              FROM T_SUPL_PLAYDETIL TSP
         LEFT JOIN T_RENT_CONTRACT TRC ON TRC.STATUS=0 AND TRC.PRCD_ID=TSP.CREDIT_ID
         LEFT JOIN T_RENT_COLLECTIONPLAN TRCN ON TRCN.STATUS=0 AND TRC.RECT_ID = TRCN.RECT_ID
         LEFT JOIN ( SELECT SUM(CONVERT(DECIMAL(10,2),T1.MONTH_PRICE)) AS EXPECTEDRENT,
                      SUM(CONVERT(DECIMAL(10,2),T1.REN_PRICE)) AS  NOTAXINTEREST,
                      SUM(CONVERT(DECIMAL(10,2),T1.REN_PRICE/1.17)) AS  NOTAXINTEREST117,
                      SUM(CONVERT(DECIMAL(10,2),T1.REN_PRICE*0.17/1.17))  AS INTERESTTAX,
                      SUM(CONVERT(DECIMAL(10,2),T1.OWN_PRICE/1.17)) AS NOTAXOWN, 
                      SUM(CONVERT(DECIMAL(10,2),(T1.OWN_PRICE-T1.OWN_PRICE/1.17))) AS TAXES, 
                      T1.RECP_ID
                      FROM T_RENT_COLLECTIONDETAIL T1 
                      LEFT JOIN T_RENT_COLLECTIONPLAN T3 ON T3.STATUS=0 AND T3.RECP_ID = T1.RECP_ID
                      WHERE T1.STATUS=0
                      GROUP BY T1.RECP_ID,T3.TAX_PLAN_CODE
                     ) T
         ON T.RECP_ID=TRCN.RECP_ID
         WHERE TSP.STATUS=0  AND TSP.BACKSTATE=0   AND TSP.MANAGER=1  AND TSP.STATUS=0 AND TSP.CREDIT_ID IS NOT NULL  
             AND TSP.PAY_DATE IS NOT NULL  
             AND CONVERT(DATE,TSP.PAY_DATE) BETWEEN CONVERT(DATE,#fromDate#) AND CONVERT(DATE,#toDate#)
             GROUP BY TSP.CREDIT_ID,TSP.PAY_ORDER,TSP.BACKCOMP,T.EXPECTEDRENT,T.NOTAXINTEREST117,T.NOTAXINTEREST,T.INTERESTTAX,T.NOTAXOWN,T.TAXES,T.RECP_ID,TRC.LEASE_CODE 
         )O
      ON O.RECP_ID=TRCN.RECP_ID
	       WHERE TPC.STATUS=0
	         AND TRC.LEASE_CODE IS NOT NULL
	         AND O.PAY_MONEY IS NOT NULL
	     <isNotEmpty property="fromDate">
	     	 AND CONVERT(DATE,O.PAY_DATE)>=CONVERT(DATE,#fromDate#)
	     </isNotEmpty>
	     <isNotEmpty property="toDate">
	     	 AND CONVERT(DATE,O.PAY_DATE)&lt;=CONVERT(DATE,#toDate#)
	     </isNotEmpty>
	     <isNotEmpty property="contractType">
	     	 AND TPC.CONTRACT_TYPE=#contractType#
	     </isNotEmpty>
	     <isNotEmpty prepend="and" property="companyCode">
			TPC.company_code = #companyCode#
		</isNotEmpty>
	     <isNotEmpty property="content">
	     	 AND (TPC.CREDIT_RUNCODE LIKE '%$content$%'
	     	 	  OR TRC.LEASE_CODE LIKE '%$content$%'
	     	 	  OR TCC.CUST_NAME LIKE '%$content$%'
	     	 	  OR TUU.NAME LIKE '%$content$%'
	     	 	  OR TDC.DECP_NAME_CN LIKE '%$content$%')
	     </isNotEmpty>
	     <isNotEmpty property="payOrder">
	     	 <isEqual property="payOrder" compareValue="1">
	     	 AND O.PAY_ORDER=1
	     	 </isEqual>
	     	 <isNotEqual property="payOrder" compareValue="1">
	     	 AND O.PAY_ORDER!=1
	     	 </isNotEqual>
	     </isNotEmpty>
	</select>
	<select id="getContractControlSheetPayMoneyTotal" resultClass="java.lang.Double">
	      SELECT SUM(O.PAY_MONEY) TOTAL_MONEY
	        FROM T_PRJT_CREDIT TPC   
	   LEFT JOIN T_USER_USER TUU ON TPC.SENSOR_ID=TUU.ID
	   LEFT JOIN T_DEPT_DEPARTMENT TDDT ON TDDT.STATUS=0 AND TUU.DEPT_ID=TDDT.ID
	   LEFT JOIN T_DEPT_COMPANY TDC ON TDC.STATUS=0 AND TDDT.DECP_ID=TDC.DECP_ID
	   LEFT JOIN T_CUST_CUSTOMER TCC ON TCC.STATUS=0 AND TPC.CUST_ID=TCC.CUST_ID
	   LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.STATUS=0 AND TPC.ID=TPCE.CREDIT_ID
	   LEFT JOIN T_RENT_CONTRACT TRC ON TRC.STATUS=0 AND TPC.ID=TRC.PRCD_ID
	   LEFT JOIN T_RENT_COLLECTIONPLAN TRCN ON TRCN.STATUS=0 AND TRC.RECT_ID=TRCN.RECT_ID
	   LEFT JOIN T_DATA_DICTIONARY TDD ON TDD.STATUS=0 AND TDD.[TYPE]='支付方式' AND TPCE.PAY_WAY=TDD.CODE
	   LEFT JOIN (SELECT SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,MIN(PAY_DATE) PAY_DATE,PAY_ORDER,BACKCOMP
	                FROM T_SUPL_PLAYDETIL 
	               WHERE STATUS=0
	                 AND CREDIT_ID IS NOT NULL
	                 AND PAY_DATE IS NOT NULL
	                 AND CONVERT(DATE,PAY_DATE)!=CONVERT(DATE,'1900-1-1')          
	            GROUP BY CREDIT_ID,PAY_ORDER,BACKCOMP) O ON TPC.ID=O.CREDIT_ID
	       WHERE TPC.STATUS=0
	         AND TRC.LEASE_CODE IS NOT NULL
	         AND O.PAY_MONEY IS NOT NULL
	     <isNotEmpty property="fromDate">
	     	 AND CONVERT(DATE,O.PAY_DATE)>=CONVERT(DATE,#fromDate#)
	     </isNotEmpty>
	     <isNotEmpty property="toDate">
	     	 AND CONVERT(DATE,O.PAY_DATE)&lt;=CONVERT(DATE,#toDate#)
	     </isNotEmpty>
	     <isNotEmpty property="contractType">
	     	 AND TPC.CONTRACT_TYPE=#contractType#
	     </isNotEmpty>
	     <isNotEmpty property="content">
	     	 AND (TPC.CREDIT_RUNCODE LIKE '%$content$%'
	     	 	  OR TRC.LEASE_CODE LIKE '%$content$%'
	     	 	  OR TCC.CUST_NAME LIKE '%$content$%'
	     	 	  OR TUU.NAME LIKE '%$content$%'
	     	 	  OR TDC.DECP_NAME_CN LIKE '%$content$%')
	     </isNotEmpty>
	     <isNotEmpty property="payOrder">
	     	 <isEqual property="payOrder" compareValue="1">
	     	 AND O.PAY_ORDER=1
	     	 </isEqual>
	     	 <isNotEqual property="payOrder" compareValue="1">
	     	 AND O.PAY_ORDER!=1
	     	 </isNotEqual>
	     </isNotEmpty>
	</select>
	<select id="getContractControlSheetDetail" resultClass="java.util.HashMap">
		  SELECT TPC.CREDIT_RUNCODE,TRC.LEASE_CODE,O.BACKCOMP,TCC.CUST_NAME,TPCE.PLEDGE_PRICE,TPCE.PLEDGE_ENTER_AG,TPCE.PLEDGE_ENTER_CMPRICE,
	             ISNULL(TPCE.PLEDGE_AVE_PRICE,0)/TPCE.LEASE_TERM AVG_PRICE,TPCE.LEASE_TOPRIC,O.PAY_MONEY,O.PAY_ORDER,TPC.ID,
	             CONVERT(DATE,TRCN.FIRST_PAYDATE) START_DATE,O.PAY_DATE,TPCE.LEASE_TERM,TDD.FLAG PAY_WAY,TUU.NAME,TDC.DECP_NAME_CN
	        FROM T_PRJT_CREDIT TPC   
	   LEFT JOIN T_USER_USER TUU ON TPC.SENSOR_ID=TUU.ID
	   LEFT JOIN T_DEPT_DEPARTMENT TDDT ON TDDT.STATUS=0 AND TUU.DEPT_ID=TDDT.ID
	   LEFT JOIN T_DEPT_COMPANY TDC ON TDC.STATUS=0 AND TDDT.DECP_ID=TDC.DECP_ID
	   LEFT JOIN T_CUST_CUSTOMER TCC ON TCC.STATUS=0 AND TPC.CUST_ID=TCC.CUST_ID
	   LEFT JOIN T_PRJT_CREDITSCHEME TPCE ON TPCE.STATUS=0 AND TPC.ID=TPCE.CREDIT_ID
	   LEFT JOIN T_RENT_CONTRACT TRC ON TRC.STATUS=0 AND TPC.ID=TRC.PRCD_ID
	   LEFT JOIN T_RENT_COLLECTIONPLAN TRCN ON TRCN.STATUS=0 AND TRC.RECT_ID=TRCN.RECT_ID
	   LEFT JOIN T_DATA_DICTIONARY TDD ON TDD.STATUS=0 AND TDD.[TYPE]='支付方式' AND TPCE.PAY_WAY=TDD.CODE
	   LEFT JOIN (SELECT SUM(PAY_MONEY) PAY_MONEY,CREDIT_ID,MIN(PAY_DATE) PAY_DATE,PAY_ORDER,BACKCOMP
	                FROM T_SUPL_PLAYDETIL 
	               WHERE STATUS=0
	                 AND CREDIT_ID IS NOT NULL
	                 AND PAY_DATE IS NOT NULL
	                 AND CONVERT(DATE,PAY_DATE)!=CONVERT(DATE,'1900-1-1')          
	            GROUP BY CREDIT_ID,PAY_ORDER,BACKCOMP) O ON TPC.ID=O.CREDIT_ID
	       WHERE TPC.STATUS=0
	         AND TRC.LEASE_CODE IS NOT NULL
	         AND O.PAY_MONEY IS NOT NULL
	         AND TPC.ID=#creditId#
	    ORDER BY O.PAY_ORDER ASC
	</select>
	
	
	<select id="getEqmtByCreditId" parameterClass="map" resultClass="java.util.HashMap">
		select THING_NAME
		, MODEL_SPEC
		, UNIT
		, count(0) as THING_COUNT 
		, pe.THING_KIND
		, UNIT_PRICE
		, '' as THING_NUMBER
		, (
		  select top 1 pt.Manufacturer 
		  from T_SUPL_EQUIPMENT se 
		  left join T_PRDC_PRODUCT pd on se.PRODUCT_ID = pd.ID
		  left join T_PRDC_KIND pk on pd.KIND_ID = pk.ID
		  left join T_PRDC_TYPE pt on pk.[TYPE_ID] = pt.ID
		  where se.SUEQ_ID = pe.SUEQ_ID
		) as MANUFACTURER
		, max(pe.STAYBUY_PRICE) as STAYBUY_PRICE
		from T_PRJT_CREDITEQUIPMENT pe
		where CREDIT_ID = #creditId#
		and not exists (
		  select RECT_ID from T_RENT_CONTRACT
		  where PRCD_ID = #creditId#
		)
		group by THING_NAME, MODEL_SPEC, UNIT, UNIT_PRICE
		,pe.THING_KIND, pe.SUEQ_ID
		
		union
		
		select cd.THING_NAME
		, cd.MODEL_SPEC
		, cd.UNIT
		, count(0) as THING_COUNT 
		, cd.THING_KIND
		, cd.UNIT_PRICE
		, cd.THING_NUMBER
		, (
		  select top 1 pt.Manufacturer 
		  from T_SUPL_EQUIPMENT se 
		  left join T_PRDC_PRODUCT pd on se.PRODUCT_ID = pd.ID
		  left join T_PRDC_KIND pk on pd.KIND_ID = pk.ID
		  left join T_PRDC_TYPE pt on pk.[TYPE_ID] = pt.ID
		  where se.SUEQ_ID = tee.SUEQ_ID
		) as MANUFACTURER
		, max(cd.STAYBUY_PRICE) as STAYBUY_PRICE
		from T_RENT_CONTRACTDETAIL cd
		left join T_EQMT_EQUIPMENT tee on cd.EQMT_ID = tee.EQMT_ID
		where RECT_ID in (
		  select RECT_ID from T_RENT_CONTRACT
		  where PRCD_ID = #creditId#
		)
		group by cd.THING_NAME, cd.MODEL_SPEC, cd.UNIT, cd.UNIT_PRICE
		,cd.THING_KIND, cd.THING_NUMBER, tee.SUEQ_ID
	</select>
	
	<select id="getCheckInfo" parameterClass="map" resultClass="java.util.HashMap">
        select t.id,t.CHECK_NUM,convert(nvarchar(10),t.CHECK_OUT_DATE,23) CHECK_OUT_DATE,t.CHECK_MONEY,r.LEASE_CODE,r.CUST_CODE
        from T_PRJT_CREDITSCHEME_CHECKMANAGE t
        left join
        (
        SELECT MAX(CREDIT_ID) AS CREDIT_ID,CHECK_ID 
        FROM T_PRJT_CREDITSCHEME_CHECK 
        where CHECK_ID  = #ID#
        GROUP BY CHECK_ID        
        ) tpcc on  tpcc.CHECK_ID = t.ID
        left join T_RENT_CONTRACT r on r.PRCD_ID = tpcc.CREDIT_ID
        where t.ID=#ID#
	</select>
	
	<select id="getCustCodeByRectId" parameterClass="map" resultClass="java.lang.String">
		select cust_code from t_rent_contract where rect_id = #rectId#
	</select>
	<!-- 查询两天以上未接受退回确认的支票  -->
	<select id="getBackCheckTowDaysForJob" parameterClass="map" resultClass="java.util.HashMap">
		SELECT COUNT(TPCC.CHECK_NUM) CHECKCOUNT,TPCC.CREATE_ID,TUU.EMAIL
		FROM T_PRJT_CREDITSCHEME_CHECKMANAGE  TPCC
		LEFT JOIN T_USER_USER  TUU  ON TUU.ID=TPCC.CREATE_ID
		LEFT JOIN  T_PRJT_CREDITSCHEME_CHECKMANAGE_LOG TPCCLOG ON TPCCLOG.CHECK_ID=TPCC.ID
		WHERE  TPCC.CREATE_ID IS NOT NULL AND TUU.STATUS=0 AND TPCC.STATUS=0 AND TPCC.STATE=7
		<![CDATA[AND TPCCLOG.ACTION_TYPE='支票退回' ]]>
		<![CDATA[ AND DATEDIFF(D,'2013-08-31',TPCCLOG.CREATE_DATE) >0 ]]>
		<![CDATA[ AND DATEDIFF(D,TPCCLOG.CREATE_DATE,GETDATE()) >2]]>
		GROUP BY TPCC.CREATE_ID ,TUU.[NAME],TUU.EMAIL
	</select>	
	<!-- 查询支票号码列表  -->
	<select id="getBackCheckNumList" parameterClass="map" resultClass="java.util.HashMap">
		 SELECT TPCC.CHECK_NUM,TPCC.CREATE_ID
		FROM T_PRJT_CREDITSCHEME_CHECKMANAGE  TPCC
		LEFT JOIN T_USER_USER  TUU  ON TUU.ID=TPCC.CREATE_ID
		LEFT JOIN  T_PRJT_CREDITSCHEME_CHECKMANAGE_LOG TPCCLOG ON TPCCLOG.CHECK_ID=TPCC.ID
		WHERE  TPCC.CREATE_ID IS NOT NULL AND TUU.STATUS=0 AND TPCC.STATUS=0 AND TPCC.STATE=7
		<![CDATA[AND TPCCLOG.ACTION_TYPE='支票退回' ]]>
		<![CDATA[ AND DATEDIFF(D,'2013-08-31',TPCCLOG.CREATE_DATE) >0 ]]>
		<![CDATA[ AND DATEDIFF(D,TPCCLOG.CREATE_DATE,GETDATE()) >2]]>
		AND TPCC.CREATE_ID=#CREATE_ID#
	</select>	

	<select id="getPledgeRealPrice" parameterClass="map" resultClass="java.lang.Double">
		select isnull(sum(REAL_PRICE), 0) as REAL_PRICE
		from T_FINA_COLLECTIONBILL
		where FICB_ITEM in ('税金','保证金')
		and FICB_STATE = 5
		and FICB_TYPE = 0
		and RECP_ID in (
		  select RECP_ID from T_RENT_COLLECTIONPLAN
		  where RECT_ID in (
		    select RECT_ID from T_RENT_CONTRACT
		    where PRCD_ID = #credit_id#
		    and STATUS = 0
		  ) and STATUS = 0
		)
	</select>
	
	<select id="getPledgePayPrice" parameterClass="map" resultClass="java.lang.Double">
		select isnull(sum(pay.PAY_MONEY), 0) as PAY_MONEY
		from T_SUPL_PLAYDETIL pay
		where BACKSTATE = 1
		and STATUS = 0
		and STATE in (0,1,3)
		and pay.CREDIT_ID = #credit_id#
	</select>
	
	<update id="updateContractSchemaStartDate" parameterClass="map">
		update T_RENT_CONTRACTSCHEMA set START_DATE = cast(#FIRST_PAYDATE# as date)
		where rect_id = #rect_id#
	</update>
	<update id="updateContractSchemaFirstPayDate" parameterClass="map">
		update T_RENT_CONTRACTSCHEMA set FIRST_PAYDATE = cast(#START_DATE# as date)
		where rect_id = #rect_id#
	</update>
	<update id="updateRentContractRectStatus" parameterClass="map">
		update T_RENT_CONTRACT set rect_status = #status#
		where rect_id = #rect_id#
	</update>
	
	<select id="getPrjtCreditSeheme" parameterClass="map" resultClass="java.util.HashMap">    
	    select APPROPRIATION_WAY,ENDORSER_1,ENDORSER_2 from t_prjt_creditscheme where credit_id = #credit_id# and status = 0
	</select>
	
	<select id="getExpressInfo" parameterClass="map" resultClass="java.util.HashMap">
	    select express,express_pay_way from T_SUPL_PLAYDETIL where id = #payMoneyId# and status =0	    
	</select>
	
	<select id="exportRentDetailXls" parameterClass="map" resultClass="java.util.HashMap">
	  	SELECT 
	        R.LEASE_CODE,
	        S.CUST_NAME,
	        CONVERT(DATE,C.PAY_DATE) AS PAY_DATE,
	        C.PERIOD_NUM,
	        C.REN_PRICE,
	        COM.DECP_NAME_CN
	        <!-- ,DD.PAY_DATE -->
	    FROM T_RENT_COLLECTIONDETAIL C
	    LEFT JOIN T_RENT_COLLECTIONPLAN P ON P.STATUS = 0 AND C.RECP_ID = P.RECP_ID
	    LEFT JOIN T_RENT_CONTRACT T ON T.RECT_ID = P.RECT_ID AND T.STATUS = 0
	    LEFT JOIN T_PRJT_CREDIT R ON R.ID = T.PRCD_ID AND T.STATUS = 0
	    LEFT JOIN t_prjt_creditscheme pc on pc.credit_id = R.ID and pc.status = 0
	    LEFT JOIN T_CUST_CUSTOMER S ON R.CUST_ID = S.CUST_ID AND S.STATUS = 0
	    LEFT JOIN T_USER_USER U ON U.ID = R.SENSOR_ID
	    LEFT JOIN T_DEPT_DEPARTMENT DP ON DP.ID = U.DEPT_ID
	    LEFT JOIN T_DEPT_COMPANY COM ON DP.DECP_ID = COM.DECP_ID
	    <!-- LEFT JOIN T_SUPL_PLAYDETIL DD ON DD.STATUS = 0 AND DD.CREDIT_ID = R.ID -->
	    WHERE C.STATUS = 0 
	    <isNotEmpty prepend="and" property="companyCode">
		R.company_code = #companyCode#
		</isNotEmpty>
	    AND R.ID IN (SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL
	                WHERE STATUS = 0 AND PAY_ORDER = 1 AND BACKSTATE = 0 AND STATE = 3
	                <isNotEmpty property="date1">
	                	AND CONVERT(DATE,PAY_DATE) >= CONVERT(DATE,#date1#)
	                </isNotEmpty>
	                AND CONVERT(DATE,PAY_DATE) &lt;= CONVERT(DATE,#date2#)
	                AND CONVERT(DATE,PAY_DATE) != CONVERT(DATE,'1900-1-1')
	                GROUP BY CREDIT_ID)
	    AND R.PRODUCTION_TYPE = 3
	    AND pc.tax_plan_code = 5
	    ORDER BY R.LEASE_CODE,C.PERIOD_NUM
	</select>
	
	<select id="getLogByCreditId" parameterClass="map" resultClass="java.util.HashMap">
	select cust_id,status,
		       type,
		       cust_code,
		       cust_name,
		       credit_id,
		       lease_code,
		       log_id,
		       log_type,
		       log_title,
		       log_code,
		       memo,
		       user_id,
		       user_name,
		       convert(varchar,create_date,120) create_date,
		 	   IP_ADDRESS
		  from (select tcc.cust_id,
		               tcc.type,
		               tcc.cust_code,
		               tcc.cust_name,
		               tpc.id credit_id,
		               tpc.lease_code,
		               tsb.log_id,
		               tsb.log_type,
		               tsb.log_title,
		               tsb.log_code,
                  	   ISNULL(tsb.memo,'')
             		   memo,
		               tsb.user_id,
		               tuu.name user_name,
		               tsb.create_date,
		               tsb.state,
		               tsb.status,
		               tsb.IP_ADDRESS
		          from t_sys_businesslog tsb
		         inner join t_prjt_credit tpc on tsb.credit_id = tpc.id and tsb.CONTRACT_ID = 0
		          left join t_cust_customer tcc on tcc.cust_id = tpc.cust_id
		          left join t_user_user tuu on tuu.id = tsb.user_id
		        union
		        select tcc.cust_id,
		               tcc.type,
		               tcc.cust_code,
		               tcc.cust_name,
		               trc.rect_id contract_id,
		               trc.lease_code,
		               tsb.log_id,
		               tsb.log_type,
		               tsb.log_title,
		               tsb.log_code,
                       ISNULL(tsb.memo,'') memo,
		               tsb.user_id,
		               tuu.name user_name,
		                tsb.create_date,
		               tsb.state,
		               tsb.status,
		               tsb.IP_ADDRESS
		          from t_sys_businesslog tsb
		         inner join t_rent_contract trc on tsb.contract_id = trc.rect_id
		          left join t_cust_customer tcc on tcc.cust_id = trc.cust_id
		          left join t_user_user tuu on tuu.id = tsb.user_id) tt
		 where status = 0
		 and log_title in ('申请拨款','审核')
		 and (cust_name like '%$LEASE_CODE$%' or
		   	lease_code like '%$LEASE_CODE$%' or log_type like '%$LEASE_CODE$%'
		   	or user_name like '%$LEASE_CODE$%')
     order by log_id
	</select>
	<select id="getStartDateByCreditId" parameterClass="map" resultClass="java.util.Date">
	    select t.first_paydate from T_RENT_COLLECTIONPLAN t
		left join t_rent_contract c on t.RECT_ID = c.RECT_ID and c.STATUS = 0
		where c.PRCD_ID = #credit_id#	    
	</select>
	<select id="getContractStartDateByCreditId" parameterClass="map" resultClass="java.util.Date">
		select t.START_DATE,t.FIRST_PAYDATE 
		from T_RENT_CONTRACTSCHEMA t
		left join t_rent_contract c on c.RECT_ID = t.RECT_ID and c.STATUS = 0
		where t.STATUS = 0 and c.PRCD_ID =#credit_id#		    
	</select>
	
	<select id="getCompanyCodeByCheckId" parameterClass="map" resultClass="java.lang.String">
	    select top 1 tpc.company_code 
		from T_PRJT_CREDITSCHEME_CHECK t 
		left join t_prjt_credit tpc on tpc.id = t.credit_id and tpc.status = 0
		where t.status=0 and t.CHECK_ID = #ID#
		order by t.CREATE_DATE desc 
	</select>
	
	<select id="getCheckNumberByCheckId" parameterClass="map" resultClass="java.lang.String">
	    select check_num from T_PRJT_CREDITSCHEME_CHECKMANAGE  where ID = #ID#
	</select>
	
	<!-- 抓取上周乘用车回租拨款案件开发票资料 -->
	<select id="getCaseByLastWeek" resultClass="com.brick.rent.to.LeaseBackCaseTo">
		SELECT 
		tpc.id,
		TCC.CUST_NAME custName,
		TRC.LEASE_CODE leaseCode,
		TUU1.[NAME] sessor,
		TUU2.[NAME] clark,
		TDC.DECP_NAME_CN dept,
		TPCS.LEASE_TOPRIC totalPrice,
		TPC.FINANCECONTRACT_DATE payDate,
		O.wt personal,
		O.sf idcard,
		O.xs salesInvoice,
		O.xsz driverLicense,
		O.zl tacLeasingContract,
		O.mm contract
		FROM T_RENT_COLLECTIONPLAN TRCN
		LEFT JOIN T_RENT_CONTRACT TRC ON TRC.RECT_ID=TRCN.RECT_ID AND TRC.STATUS=0 
		LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID=TRC.PRCD_ID AND TPC.STATUS=0
		LEFT JOIN T_CUST_CUSTOMER TCC ON TCC.CUST_ID = TPC.CUST_ID AND TCC.STATUS = 0
		LEFT JOIN T_USER_USER TUU1 ON TPC.SENSOR_ID = TUU1.ID 
		LEFT JOIN T_USER_USER TUU2 ON TPC.CLERK_ID = TUU2.ID 
		<!--LEFT JOIN T_DEPT_DEPARTMENT TDD ON TDD.DECP_ID=TPC.DECP_ID AND TDD.STATUS=0-->
		LEFT JOIN T_DEPT_COMPANY TDC ON TDC.DECP_ID=TPC.DECP_ID AND TDC.STATUS=0
		LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCS.CREDIT_ID=TPC.ID AND TPCS.STATUS=0
		LEFT join(
		    <!-- 复核类型:1-正常收件 2瑕疵收件 3-缺正本待补 0-缺件待补 -->
		    <!-- 文件复核类型为正常收件,瑕疵为Y,其他状态为N  -->
		    SELECT PRJT.LEASE_CODE , 
		           PRJT.ID,
		           case  when WT.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end wt, 
		           case  when K.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end sf, 
		           case  when M.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end xs, 
		           case  when N.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end xsz,
		           case  when P.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end zl, 
		           case  when Q.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end mm
		           FROM T_PRJT_CREDIT PRJT
		    LEFT JOIN (
		    SELECT PRCD_ID , SUM(CASE WHEN (IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 2) THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		    FROM T_RENT_FILEDETAIL 
		    WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME] ='授权委托书')
		    GROUP BY PRCD_ID
		              ) 
		              WT ON PRJT.ID = WT.PRCD_ID
		
		    LEFT JOIN (  
		    SELECT PRCD_ID , SUM(CASE WHEN (IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 2) THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		    FROM T_RENT_FILEDETAIL 
		    WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME]= '车主身份证复印件')
		    GROUP BY PRCD_ID
		              )K
		             ON K.PRCD_ID=PRJT.ID
		
		   LEFT JOIN (   
		        SELECT PRCD_ID , SUM(CASE WHEN (IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 2) THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		        FROM T_RENT_FILEDETAIL 
		        WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME] = '机动车销售统一发票正本')
		        GROUP BY PRCD_ID
		            )M
		            ON M.PRCD_ID=PRJT.ID
		
		    LEFT JOIN (
		        SELECT PRCD_ID , SUM(CASE WHEN (IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 2) THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		        FROM T_RENT_FILEDETAIL 
		        WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME] = '行驶证影本')
		        GROUP BY PRCD_ID
		           )N
		            ON N.PRCD_ID=PRJT.ID
		
		    LEFT JOIN (
		        
		        SELECT PRCD_ID , SUM(CASE WHEN (IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 2) THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		        FROM T_RENT_FILEDETAIL 
		        WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME] = '融资租赁合同')
		        GROUP BY PRCD_ID
		    )P
		    ON P.PRCD_ID=PRJT.ID
		
		    LEFT JOIN (    
		        SELECT PRCD_ID , SUM(CASE WHEN (IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 2) THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		        FROM T_RENT_FILEDETAIL 
		        WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME] = '买卖合同')
		        GROUP BY PRCD_ID
		    )Q
		    ON Q.PRCD_ID=PRJT.ID
		) O
		on O.ID=TPC.ID
		WHERE TRCN.STATUS=0
		AND TRCN.TAX_PLAN_CODE=7
		AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE) BETWEEN CONVERT(DATE,getDate()-7) AND CONVERT(DATE,getDate()-1)
		GROUP BY  tpc.id,TCC.CUST_NAME,TRC.LEASE_CODE,TUU1.[NAME], 
		TUU2.[NAME], TDC.DECP_NAME_CN,TPCS.LEASE_TOPRIC,TPC.FINANCECONTRACT_DATE,O.wt,O.sf,O.xs,O.xsz,O.zl,O.mm
		ORDER  BY TPC.FINANCECONTRACT_DATE
	</select>
	    
	    <!-- 抓取上个月乘用车回租拨款案件开发票资料 -->
		<select id="getCaseByLastMonth" resultClass="com.brick.rent.to.LeaseBackCaseTo">
		SELECT 
		tpc.id,
		TCC.CUST_NAME custName,
		TRC.LEASE_CODE leaseCode,
		TUU1.[NAME] sessor,
		TUU2.[NAME] clark,
		TDC.DECP_NAME_CN dept,
		TPCS.LEASE_TOPRIC totalPrice,
		TPC.FINANCECONTRACT_DATE payDate,
		O.wt personal,
		O.sf idcard,
		O.xs salesInvoice,
		O.xsz driverLicense,
		O.zl tacLeasingContract,
		O.mm contract
		FROM T_RENT_COLLECTIONPLAN TRCN
		LEFT JOIN T_RENT_CONTRACT TRC ON TRC.RECT_ID=TRCN.RECT_ID AND TRC.STATUS=0
		LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID=TRC.PRCD_ID AND TPC.STATUS=0
		LEFT JOIN T_CUST_CUSTOMER TCC ON TCC.CUST_ID = TPC.CUST_ID AND TCC.STATUS = 0
		LEFT JOIN T_USER_USER TUU1 ON TPC.SENSOR_ID = TUU1.ID AND TUU1.STATUS=0
		LEFT JOIN T_USER_USER TUU2 ON TPC.CLERK_ID = TUU2.ID AND TUU2.STATUS=0
		<!-- LEFT JOIN T_DEPT_DEPARTMENT TDD ON TDD.DECP_ID=TPC.DECP_ID AND TDD.STATUS=0 -->
		LEFT JOIN T_DEPT_COMPANY TDC ON TDC.DECP_ID=TPC.DECP_ID AND TDC.STATUS=0
		LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCS.CREDIT_ID=TPC.ID AND TPCS.STATUS=0
		LEFT join(
		    <!-- 复核类型:1-正常收件 2瑕疵收件 3-缺正本待补 0-缺件待补 -->
		    <!-- 文件复核类型为正常收件,缺正本待补 为Y,其他状态为N  -->
		    SELECT PRJT.LEASE_CODE , 
		           PRJT.ID,
		           case  when WT.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end wt, 
		           case  when K.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end sf, 
		           case  when M.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end xs, 
		           case  when N.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end xsz,
		           case  when P.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end zl, 
		           case  when Q.IS_ALREADY_DETAIL>0 then 'Y' else 'N' end mm
		           FROM T_PRJT_CREDIT PRJT
		    LEFT JOIN (
		    SELECT PRCD_ID , SUM(CASE WHEN IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 3  THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		    FROM T_RENT_FILEDETAIL 
		    WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME] = '委托书')
		    GROUP BY PRCD_ID
		              ) 
		              WT ON PRJT.ID = WT.PRCD_ID
		
		    LEFT JOIN (  
		    SELECT PRCD_ID , SUM(CASE WHEN IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 3 THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		    FROM T_RENT_FILEDETAIL 
		    WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME] = '车主身份证复印件')
		    GROUP BY PRCD_ID
		              )K
		             ON K.PRCD_ID=PRJT.ID
		
		   LEFT JOIN (   
		        SELECT PRCD_ID , SUM(CASE WHEN IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 3 THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		        FROM T_RENT_FILEDETAIL 
		        WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME] = '机动车统一销售正本')
		        GROUP BY PRCD_ID
		            )M
		            ON M.PRCD_ID=PRJT.ID
		
		    LEFT JOIN (
		        SELECT PRCD_ID , SUM(CASE WHEN IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 3 THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		        FROM T_RENT_FILEDETAIL 
		        WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME] = '行驶证影本')
		        GROUP BY PRCD_ID
		           )N
		            ON N.PRCD_ID=PRJT.ID
		
		    LEFT JOIN (
		        
		        SELECT PRCD_ID , SUM(CASE WHEN IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 3 THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		        FROM T_RENT_FILEDETAIL 
		        WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME] = '融资租赁合同')
		        GROUP BY PRCD_ID
		    )P
		    ON P.PRCD_ID=PRJT.ID
		
		    LEFT JOIN (    
		        SELECT PRCD_ID , SUM(CASE WHEN IS_ALREADY_DETAIL = 1 or IS_ALREADY_DETAIL = 3 THEN 1  ELSE 0 END) IS_ALREADY_DETAIL
		        FROM T_RENT_FILEDETAIL 
		        WHERE REFI_ID IN(select T1.REFI_ID  from T_RENT_FILE T1 where T1.[FILE_NAME] = '买卖合同')
		        GROUP BY PRCD_ID
		    )Q
		    ON Q.PRCD_ID=PRJT.ID
		) O
		on O.ID=TPC.ID
		WHERE TRCN.STATUS=0
		AND TRCN.TAX_PLAN_CODE=7
		AND CONVERT(DATE,TPC.FINANCECONTRACT_DATE) BETWEEN CONVERT(DATE,#beginDate#) AND CONVERT(DATE,#endDate#)
		GROUP BY  tpc.id,TCC.CUST_NAME,TRC.LEASE_CODE,TUU1.[NAME], 
		TUU2.[NAME], TDC.DECP_NAME_CN,TPCS.LEASE_TOPRIC,TPC.FINANCECONTRACT_DATE,O.wt,O.sf,O.xs,O.xsz,O.zl,O.mm
		ORDER  BY TPC.FINANCECONTRACT_DATE
	</select>
</sqlMap>