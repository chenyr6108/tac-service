<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN"
 "http://www.ibatis.com/dtd/sql-map-2.dtd">
 
 <sqlMap namespace="caseReportService">
 
 	<select id="getCountOfInfo" resultClass="java.lang.Integer">
 			   SELECT COUNT(O.CREDIT_ID) INFO_COUNT FROM   <!-- 计算资料的总数量 -->
                    (SELECT TPC.ID CREDIT_ID,
                  	        DECP.DECP_NAME_CN DECP_NAME_CN,
                            DECP.DECP_ID
                  	   FROM T_PRJT_CREDIT TPC
           	      LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID
           	      LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
           	      LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
               	 	  WHERE TPC.STATUS=0
                      	<!-- AND DATEDIFF(DAY,TPC.CREATE_DATE,GETDATE()) &lt;= 90 -->
                      	AND TPC.STATE IN ('0','3') <!-- 0代表状态是调查中,3代表状态是提交主管 -->
                        	UNION
	                  	 SELECT TPC.ID CREDIT_ID,
	                  	        DECP.DECP_NAME_CN,
	                            DECP.DECP_ID
	               		   FROM T_PRJT_CREDIT TPC    
	                  LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID  
	                  LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
	                  LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
	                  	  WHERE TPC.STATUS=0
	                        <!-- AND DATEDIFF(DAY,TPC.CREATE_DATE,GETDATE()) &lt;= 90 -->
	                        AND TPC.STATE IN ('0','3')
                      ) O
 	</select>
 	
 	<select id="getCountOfInfoGroupByCmpy" resultClass="java.util.HashMap">
 			   SELECT COUNT(O.CREDIT_ID) INFO_COUNT,O.DECP_NAME_CN,O.DECP_ID FROM  <!-- 计算资料的总数量GROUP BY 办事处 -->
                    (SELECT TPC.ID CREDIT_ID,
                  	        DECP.DECP_NAME_CN DECP_NAME_CN,
                            DECP.DECP_ID
                  	   FROM T_PRJT_CREDIT TPC
           	      LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID
           	      LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
           	      LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
               	 	  WHERE TPC.STATUS=0
                      	<!-- AND DATEDIFF(DAY,TPC.CREATE_DATE,GETDATE()) &lt;= 90 -->
                      	AND TPC.STATE IN ('0','3')
                      	<!-- AND TPC.VISIT_DATE IS NULL -->
                      	AND TPC.ID NOT IN 
                          (SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                        	UNION
	                  	 SELECT TPC.ID CREDIT_ID,
	                  	        DECP.DECP_NAME_CN,
	                            DECP.DECP_ID
	               		   FROM T_PRJT_CREDIT TPC    
	                  LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID  
	                  LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
	                  LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
	                  	  WHERE TPC.STATUS=0
	                        <!-- AND DATEDIFF(DAY,TPC.CREATE_DATE,GETDATE()) &lt;= 90 -->
	                        AND TPC.STATE IN ('0','3')
	                        <!-- AND TPC.VISIT_DATE IS NULL -->
	                        AND TPC.ID NOT IN 
                          	(SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                      ) O
              GROUP BY O.DECP_NAME_CN,O.DECP_ID
 	</select>
 	
 	<select id="getCountOfInfoGroupByCmpyProductionType" resultClass="java.util.HashMap">
 			   SELECT COUNT(O.CREDIT_ID) INFO_COUNT,O.DECP_NAME_CN,O.DECP_ID FROM  <!-- 计算资料的总数量GROUP BY 办事处 -->
                    (SELECT TPC.ID CREDIT_ID,
                  	        DECP.DECP_NAME_CN DECP_NAME_CN,
                            DECP.DECP_ID
                  	   FROM T_PRJT_CREDIT TPC
           	      LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID
           	      LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
           	      LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
               	 	  WHERE TPC.STATUS=0
                      	AND TPC.STATE IN ('0','3')
                      	AND TPC.PRODUCTION_TYPE=#productionType#
                      	AND TPC.ID NOT IN 
                          (SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                        	UNION
	                  	 SELECT TPC.ID CREDIT_ID,
	                  	        DECP.DECP_NAME_CN,
	                            DECP.DECP_ID
	               		   FROM T_PRJT_CREDIT TPC    
	                  LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID  
	                  LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
	                  LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
	                  	  WHERE TPC.STATUS=0
	                        AND TPC.STATE IN ('0','3')
	                        AND TPC.PRODUCTION_TYPE=#productionType#
	                        AND TPC.ID NOT IN 
                          	(SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                      ) O
              GROUP BY O.DECP_NAME_CN,O.DECP_ID
 	</select>
 	
 	<select id="getAmountOfInfoGroupByCmpy" resultClass="java.util.HashMap"> <!-- 计算资料的总金额GROUP BY 办事处 -->
        SELECT SUM(O.INFO_AMOUNT) INFO_AMOUNT,O.DECP_NAME_CN,O.DECP_ID
  		  FROM (
          		SELECT SUM(O.COMPUTE_PAY_MONEY/1000) AS INFO_AMOUNT,O.DECP_NAME_CN,O.DECP_ID FROM
                          (
                          SELECT TPC.ID CREDIT_ID,ISNULL(TPC.COMPUTE_PAY_MONEY,0) COMPUTE_PAY_MONEY,
          				                  	        DECP.DECP_NAME_CN DECP_NAME_CN,
          				                            DECP.DECP_ID
          				                  		 FROM T_PRJT_CREDIT TPC
                            LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID
                            LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
                            LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
                            	  WHERE TPC.STATUS=0
                                  AND TPC.STATE IN ('0','3')
                                  AND TPC.ID NOT IN 
                                    (SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                                  
                                  UNION
                            	 SELECT TPC.ID CREDIT_ID,ISNULL(TPC.COMPUTE_PAY_MONEY,0) COMPUTE_PAY_MONEY,
                            	        DECP.DECP_NAME_CN,
                                      DECP.DECP_ID
                            		 FROM T_PRJT_CREDIT TPC    
                            LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID  
                            LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
                            LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
                            		WHERE TPC.STATUS=0                        
                                  AND TPC.STATE IN ('0','3')                        
                                  AND TPC.ID NOT IN 
                                    (SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                            ) O
                            WHERE O.CREDIT_ID NOT IN 
                            (SELECT CREDIT_ID FROM T_PRJT_CREDITSCHEME WHERE STATUS=0)
                            GROUP BY O.DECP_ID,O.DECP_NAME_CN
                            
                            UNION ALL
                            
                            SELECT ISNULL(SUM(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0))/1000,0) AS INFO_AMOUNT,O.DECP_NAME_CN,O.DECP_ID 
          				            FROM T_PRJT_CREDITSCHEME TPCS,
          				             (       SELECT TPC.ID CREDIT_ID,
          				                  	        DECP.DECP_NAME_CN DECP_NAME_CN,
          				                            DECP.DECP_ID
          				                  		 FROM T_PRJT_CREDIT TPC
                            LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID
                            LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
                            LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
                            	  WHERE TPC.STATUS=0
                                  AND TPC.STATE IN ('0','3')
                                  AND TPC.ID NOT IN 
                                    (SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                                  UNION
                            	 SELECT TPC.ID CREDIT_ID,
                            	        DECP.DECP_NAME_CN,
                                      DECP.DECP_ID
                            		 FROM T_PRJT_CREDIT TPC    
                            LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID  
                            LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
                            LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
                            		WHERE TPC.STATUS=0
                                  AND TPC.STATE IN ('0','3')                        
                                  AND TPC.ID NOT IN 
                                    (SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                        ) O
                  WHERE TPCS.CREDIT_ID=O.CREDIT_ID   
                    AND TPCS.STATUS=0
                  GROUP BY O.DECP_NAME_CN,O.DECP_ID
        ) O
        GROUP BY O.DECP_ID,O.DECP_NAME_CN
 	</select>
 	
 	<select id="getAmountOfInfoGroupByCmpyProductionType" resultClass="java.util.HashMap"> <!-- 计算资料的总金额GROUP BY 办事处 -->
        SELECT SUM(O.INFO_AMOUNT) INFO_AMOUNT,O.DECP_NAME_CN,O.DECP_ID
  		  FROM (
          		SELECT SUM(O.COMPUTE_PAY_MONEY/1000) AS INFO_AMOUNT,O.DECP_NAME_CN,O.DECP_ID FROM
                          (
                          SELECT TPC.ID CREDIT_ID,ISNULL(TPC.COMPUTE_PAY_MONEY,0) COMPUTE_PAY_MONEY,
          				                  	        DECP.DECP_NAME_CN DECP_NAME_CN,
          				                            DECP.DECP_ID
          				                  		 FROM T_PRJT_CREDIT TPC
                            LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID
                            LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
                            LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
                            	  WHERE TPC.STATUS=0
                                  AND TPC.STATE IN ('0','3')
                                  AND TPC.PRODUCTION_TYPE=#productionType#
                                  AND TPC.ID NOT IN 
                                    (SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                                  
                                  UNION
                            	 SELECT TPC.ID CREDIT_ID,ISNULL(TPC.COMPUTE_PAY_MONEY,0) COMPUTE_PAY_MONEY,
                            	        DECP.DECP_NAME_CN,
                                      DECP.DECP_ID
                            		 FROM T_PRJT_CREDIT TPC    
                            LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID  
                            LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
                            LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
                            		WHERE TPC.STATUS=0                        
                                  AND TPC.STATE IN ('0','3')  
                                  AND TPC.PRODUCTION_TYPE=#productionType#                      
                                  AND TPC.ID NOT IN 
                                    (SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                            ) O
                            WHERE O.CREDIT_ID NOT IN 
                            (SELECT CREDIT_ID FROM T_PRJT_CREDITSCHEME WHERE STATUS=0)
                            GROUP BY O.DECP_ID,O.DECP_NAME_CN
                            
                            UNION ALL
                            
                            SELECT ISNULL(SUM(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0))/1000,0) AS INFO_AMOUNT,O.DECP_NAME_CN,O.DECP_ID 
          				            FROM T_PRJT_CREDITSCHEME TPCS
                              LEFT JOIN
          				             (       SELECT TPC.ID CREDIT_ID,
          				                  	        DECP.DECP_NAME_CN DECP_NAME_CN,
          				                            DECP.DECP_ID
          				                  		 FROM T_PRJT_CREDIT TPC
                            LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID
                            LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
                            LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
                            	  WHERE TPC.STATUS=0
                                  AND TPC.STATE IN ('0','3')
                                  AND TPC.ID NOT IN 
                                    (SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                                  UNION
                            	 SELECT TPC.ID CREDIT_ID,
                            	        DECP.DECP_NAME_CN,
                                      DECP.DECP_ID
                            		 FROM T_PRJT_CREDIT TPC    
                            LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID  
                            LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
                            LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
                            		WHERE TPC.STATUS=0
                                  AND TPC.STATE IN ('0','3')                        
                                  AND TPC.ID NOT IN 
                                    (SELECT TPV.CREDIT_ID FROM T_PRJT_VISIT TPV WHERE TPV.STATUS=0 AND TPV.VISIT_STATUS>=3)
                        ) O ON  TPCS.CREDIT_ID=O.CREDIT_ID
                        LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID=TPCS.CREDIT_ID AND TPC.STATUS=0
                  WHERE TPCS.STATUS=0
                    AND TPC.PRODUCTION_TYPE=#productionType#    
                     GROUP BY O.DECP_NAME_CN,O.DECP_ID
        ) O
        GROUP BY O.DECP_ID,O.DECP_NAME_CN
 	</select>
 	
 	<!-- 已访厂 -->
 	<select id="getCountOfHasAccessGroupByCmpy" resultClass="java.util.HashMap">
                    SELECT COUNT(TPV.CREDIT_ID) HAS_ACCESS_COUNT,
			    	       DECP.DECP_NAME_CN,
			               DECP.DECP_ID 
			          FROM T_PRJT_VISIT TPV
			     LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID=TPV.CREDIT_ID AND TPC.STATUS=0
			     LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID
			     LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
			     LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
			         WHERE TPV.STATUS=0 
			           AND TPV.VISIT_STATUS>=3
			           <!-- AND CONVERT(DATE,TPV.REAL_VISIT_DATE,23)&lt;=CONVERT(DATE,GETDATE(),23) -->
			           AND TPC.STATE IN ('0','3')
			      GROUP BY DECP.DECP_ID,DECP.DECP_NAME_CN
 	</select>
 	
 	<select id="getCountOfHasAccessGroupByCmpyProductionType" resultClass="java.util.HashMap">
                    SELECT COUNT(TPV.CREDIT_ID) HAS_ACCESS_COUNT,
			    	       DECP.DECP_NAME_CN,
			               DECP.DECP_ID 
			          FROM T_PRJT_VISIT TPV
			     LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID=TPV.CREDIT_ID AND TPC.STATUS=0
			     LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID
			     LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
			     LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
			         WHERE TPV.STATUS=0 
			           AND TPV.VISIT_STATUS>=3
			           AND TPC.PRODUCTION_TYPE=#productionType#
			           AND TPC.STATE IN ('0','3')
			      GROUP BY DECP.DECP_ID,DECP.DECP_NAME_CN
 	</select>
 	
 	<select id="getAmountOfHasAccessGroupByCmpy" resultClass="java.util.HashMap"> <!-- 计算已访厂的总金额GROUP BY 办事处 -->
				SELECT ISNULL(SUM(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0))/1000,0) AS HAS_ACCESS_AMOUNT,O.DECP_NAME_CN,O.DECP_ID 
				        FROM T_PRJT_CREDITSCHEME TPCS,
				             (
                        SELECT TPV.CREDIT_ID,
				    	       DECP.DECP_NAME_CN,
				               DECP.DECP_ID 
				          FROM T_PRJT_VISIT TPV
				     LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID=TPV.CREDIT_ID AND TPC.STATUS=0
				     LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID
				     LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
				     LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
				         WHERE TPV.STATUS=0 
				           AND TPV.VISIT_STATUS>=3
				           <!-- AND CONVERT(DATE,TPV.REAL_VISIT_DATE,23)&lt;=CONVERT(DATE,GETDATE(),23) -->
				           AND TPC.STATE IN ('0','3')
              ) O
        WHERE TPCS.CREDIT_ID=O.CREDIT_ID   
          AND TPCS.STATUS=0
        GROUP BY O.DECP_NAME_CN,O.DECP_ID
 	</select>
 	
 	<select id="getAmountOfHasAccessGroupByCmpyProductionType" resultClass="java.util.HashMap"> <!-- 计算已访厂的总金额GROUP BY 办事处 -->
				SELECT ISNULL(SUM(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0))/1000,0) AS HAS_ACCESS_AMOUNT,O.DECP_NAME_CN,O.DECP_ID 
				        FROM T_PRJT_CREDITSCHEME TPCS,
				             (
                        SELECT TPV.CREDIT_ID,
				    	       DECP.DECP_NAME_CN,
				               DECP.DECP_ID 
				          FROM T_PRJT_VISIT TPV
				     LEFT JOIN T_PRJT_CREDIT TPC ON TPC.ID=TPV.CREDIT_ID AND TPC.STATUS=0
				     LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID
				     LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
				     LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
				         WHERE TPV.STATUS=0 
				           AND TPV.VISIT_STATUS>=3
				           AND TPC.PRODUCTION_TYPE=#productionType#
				           AND TPC.STATE IN ('0','3')
              ) O
        WHERE TPCS.CREDIT_ID=O.CREDIT_ID   
          AND TPCS.STATUS=0
        GROUP BY O.DECP_NAME_CN,O.DECP_ID
 	</select>
 	
 	<select id="getCountOfAudit" resultClass="java.lang.Integer">
 			SELECT COUNT(O.CREDIT_ID) AUDIT_COUNT FROM 
		                (SELECT DISTINCT TPC.ID CREDIT_ID,
		                                DECP.DECP_NAME_CN,
		                                DECP.DECP_ID
		                	  FROM T_PRJT_RISK_CONTROL TPRC
		                	  LEFT JOIN T_PRJT_CREDIT TPC ON TPRC.credit_id=TPC.ID
		                	  LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID  
		                    LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
		                    LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
		                	WHERE TPRC.STATUS=0 AND TPRC.PRC_LEVEL_ID IS NULL
		                	 
		                	 	UNION
		                    
		                SELECT DISTINCT TPC.ID CREDIT_ID,
		                                DECP.DECP_NAME_CN,
		                                DECP.DECP_ID
		                	  FROM T_PRJT_CREDIT TPC
		                	  LEFT JOIN T_USER_USER TUU2 ON TUU2.ID = TPC.SENSOR_ID
		                    LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
		                    LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID = DEPT.DECP_ID AND DECP.STATUS = 0
		                	  LEFT JOIN T_PRJT_CREDITMEMO TPCO ON TPC.ID=TPCO.CREDIT_ID and TPCO.STATE=1 AND TPCO.STATUS=0
		                	  LEFT JOIN T_PRJT_RISK_CONTROL TPRC ON TPRC.PRC_ID=TPCO.TPRC_ID
		                	  WHERE TPC.STATE=1 AND TPC.STATUS=0 AND TPC.WIND_STATE IS NULL AND TPRC.STATE IS NULL AND TPRC.PRC_LEVEL_ID IS NULL) O
 	</select>
 	
 	<select id="getCountOfAuditGroupByCmpy" resultClass="java.util.HashMap">
        		SELECT COUNT(O.CREDIT_ID) AUDIT_COUNT,
		               DECP.DECP_ID,DECP.DECP_NAME_CN
		          FROM
		               (
		                     SELECT TPC.ID CREDIT_ID
		      				    	   FROM T_PRJT_CREDIT TPC
		      					  LEFT JOIN T_PRJT_CREDITMEMO TPCO ON TPC.ID=TPCO.CREDIT_ID AND TPCO.STATE=1 AND TPCO.STATUS=0
		      					  LEFT JOIN T_PRJT_RISK_CONTROL TPRC ON TPRC.PRC_ID=TPCO.TPRC_ID				    
		      					      WHERE TPC.STATE=1 
		      				          AND TPC.STATUS=0 
		      				          AND TPC.WIND_STATE IS NULL 
		      				          AND TPRC.STATE IS NULL
		      				     
		      				        UNION<!-- 1级评审 -->
		                      
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID				   
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=0 
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;1 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=0
		      				    
		      				        UNION<!-- 2级评审 -->
		                      
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=1 
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;2 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=1
		      				    
		      				        UNION<!-- 3级评审 -->
		                      
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=2 
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;3 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=2
		      				   
		      				        UNION<!-- 4级评审 -->
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=3 
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;4 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=3
		              ) O
		    LEFT JOIN T_PRJT_CREDIT TPC ON O.CREDIT_ID=TPC.ID
				LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID  
				LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
				LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
		     GROUP BY DECP.DECP_ID,DECP.DECP_NAME_CN
 	</select>
 	
 	<select id="getCountOfAuditGroupByCmpyProductionType" resultClass="java.util.HashMap">
        		SELECT COUNT(O.CREDIT_ID) AUDIT_COUNT,
		               DECP.DECP_ID,DECP.DECP_NAME_CN
		          FROM
		               (
		                     SELECT TPC.ID CREDIT_ID
		      				    	   FROM T_PRJT_CREDIT TPC
		      					  LEFT JOIN T_PRJT_CREDITMEMO TPCO ON TPC.ID=TPCO.CREDIT_ID AND TPCO.STATE=1 AND TPCO.STATUS=0
		      					  LEFT JOIN T_PRJT_RISK_CONTROL TPRC ON TPRC.PRC_ID=TPCO.TPRC_ID				    
		      					      WHERE TPC.STATE=1 
		      				          AND TPC.STATUS=0 
		      				          AND TPC.PRODUCTION_TYPE=#productionType#
		      				          AND TPC.WIND_STATE IS NULL 
		      				          AND TPRC.STATE IS NULL
		      				     
		      				        UNION<!-- 1级评审 -->
		                      
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID				   
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=0 
		      				         AND TPC.PRODUCTION_TYPE=#productionType#
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;1 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=0
		      				    
		      				        UNION<!-- 2级评审 -->
		                      
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=1 
		      				         AND TPC.PRODUCTION_TYPE=#productionType#
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;2 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=1
		      				    
		      				        UNION<!-- 3级评审 -->
		                      
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=2 
		      				         AND TPC.PRODUCTION_TYPE=#productionType#
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;3 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=2
		      				   
		      				        UNION<!-- 4级评审 -->
		      				      SELECT TPRCL.CREDIT_ID
		      							  FROM T_PRJT_RISK_CONTROL TPRCL
		      				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		      							 WHERE TPRCL.STATUS=0 
		      				         AND TPRCL.PRC_NODE>=3 
		      				         AND TPC.PRODUCTION_TYPE=#productionType#
		      				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;4 AND STATE!=0) 			 
		      								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=3
		              ) O
		    LEFT JOIN T_PRJT_CREDIT TPC ON O.CREDIT_ID=TPC.ID
				LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID  
				LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
				LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
		     GROUP BY DECP.DECP_ID,DECP.DECP_NAME_CN
 	</select>
 	
 	<select id="getAmountOfAuditGroupByCmpy" resultClass="java.util.HashMap">
           SELECT ISNULL(SUM(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0))/1000,0) AS AUDIT_AMOUNT,
		          DECP.DECP_ID,DECP.DECP_NAME_CN
		     FROM T_PRJT_CREDITSCHEME TPCS
		LEFT JOIN T_PRJT_CREDIT TPC ON TPCS.CREDIT_ID=TPC.ID
		LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID  
		LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
		LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
		    WHERE TPCS.STATUS=0 AND TPCS.CREDIT_ID IN
		                           (
		                                 SELECT TPC.ID CREDIT_ID
		                  				    	   FROM T_PRJT_CREDIT TPC
		                  					  LEFT JOIN T_PRJT_CREDITMEMO TPCO ON TPC.ID=TPCO.CREDIT_ID AND TPCO.STATE=1 AND TPCO.STATUS=0
		                  					  LEFT JOIN T_PRJT_RISK_CONTROL TPRC ON TPRC.PRC_ID=TPCO.TPRC_ID				    
		                  					      WHERE TPC.STATE=1 
		                  				          AND TPC.STATUS=0 
		                  				          AND TPC.WIND_STATE IS NULL 
		                  				          AND TPRC.STATE IS NULL
		                  				     
		                  				        UNION<!-- 1级评审 -->
		                                  
		                  				      SELECT TPRCL.CREDIT_ID
		                  							  FROM T_PRJT_RISK_CONTROL TPRCL
		                  				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID				   
		                  							 WHERE TPRCL.STATUS=0 
		                  				         AND TPRCL.PRC_NODE>=0 
		                  				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;1 AND STATE!=0) 			 
		                  								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=0
		                  				    
		                  				        UNION<!-- 2级评审 -->
		                                  
		                  				      SELECT TPRCL.CREDIT_ID
		                  							  FROM T_PRJT_RISK_CONTROL TPRCL
		                  				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		                  							 WHERE TPRCL.STATUS=0 
		                  				         AND TPRCL.PRC_NODE>=1 
		                  				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;2 AND STATE!=0) 			 
		                  								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=1
		                  				    
		                  				        UNION<!-- 3级评审 -->
		                                  
		                  				      SELECT TPRCL.CREDIT_ID
		                  							  FROM T_PRJT_RISK_CONTROL TPRCL
		                  				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		                  							 WHERE TPRCL.STATUS=0 
		                  				         AND TPRCL.PRC_NODE>=2 
		                  				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;3 AND STATE!=0) 			 
		                  								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=2
		                  				   
		                  				        UNION<!-- 4级评审 -->
		                  				      SELECT TPRCL.CREDIT_ID
		                  							  FROM T_PRJT_RISK_CONTROL TPRCL
		                  				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		                  							 WHERE TPRCL.STATUS=0 
		                  				         AND TPRCL.PRC_NODE>=3 
		                  				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;4 AND STATE!=0) 			 
		                  								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=3
		                          )
		    GROUP BY DECP.DECP_ID,DECP.DECP_NAME_CN
 	</select>
 	
 	<select id="getAmountOfAuditGroupByCmpyProductionType" resultClass="java.util.HashMap">
           SELECT ISNULL(SUM(ISNULL(TPCS.LEASE_TOPRIC,0)-ISNULL(TPCS.PLEDGE_ENTER_MCTOAG,0)-ISNULL(TPCS.PLEDGE_ENTER_AG,0))/1000,0) AS AUDIT_AMOUNT,
		          DECP.DECP_ID,DECP.DECP_NAME_CN
		     FROM T_PRJT_CREDITSCHEME TPCS
		LEFT JOIN T_PRJT_CREDIT TPC ON TPCS.CREDIT_ID=TPC.ID
		LEFT JOIN T_USER_USER TUU2 ON TUU2.ID=TPC.SENSOR_ID  
		LEFT JOIN T_DEPT_DEPARTMENT DEPT ON TUU2.DEPT_ID=DEPT.ID AND DEPT.STATUS=0
		LEFT JOIN T_DEPT_COMPANY DECP ON DECP.DECP_ID=DEPT.DECP_ID AND DECP.STATUS=0
		    WHERE TPCS.STATUS=0 AND TPCS.CREDIT_ID IN
		                           (
		                                 SELECT TPC.ID CREDIT_ID
		                  				    	   FROM T_PRJT_CREDIT TPC
		                  					  LEFT JOIN T_PRJT_CREDITMEMO TPCO ON TPC.ID=TPCO.CREDIT_ID AND TPCO.STATE=1 AND TPCO.STATUS=0
		                  					  LEFT JOIN T_PRJT_RISK_CONTROL TPRC ON TPRC.PRC_ID=TPCO.TPRC_ID				    
		                  					      WHERE TPC.STATE=1 
		                  				          AND TPC.STATUS=0 
		                  				          AND TPC.WIND_STATE IS NULL 
		                  				          AND TPRC.STATE IS NULL
		                  				          AND TPC.PRODUCTION_TYPE=#productionType#
		                  				        UNION<!-- 1级评审 -->
		                                  
		                  				      SELECT TPRCL.CREDIT_ID
		                  							  FROM T_PRJT_RISK_CONTROL TPRCL
		                  				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID				   
		                  							 WHERE TPRCL.STATUS=0 
		                  				         AND TPRCL.PRC_NODE>=0 
		                  				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;1 AND STATE!=0) 			 
		                  						 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=0
		                  				    	 AND TPC.PRODUCTION_TYPE=#productionType#
		                  				        UNION<!-- 2级评审 -->
		                                  
		                  				      SELECT TPRCL.CREDIT_ID
		                  							  FROM T_PRJT_RISK_CONTROL TPRCL
		                  				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		                  							 WHERE TPRCL.STATUS=0 
		                  				         AND TPRCL.PRC_NODE>=1 
		                  				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;2 AND STATE!=0) 			 
		                  								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=1
		                  				         AND TPC.PRODUCTION_TYPE=#productionType#
		                  				        UNION<!-- 3级评审 -->
		                                  
		                  				      SELECT TPRCL.CREDIT_ID
		                  							  FROM T_PRJT_RISK_CONTROL TPRCL
		                  				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		                  							 WHERE TPRCL.STATUS=0 
		                  				         AND TPRCL.PRC_NODE>=2 
		                  				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;3 AND STATE!=0) 			 
		                  								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=2
		                  				         AND TPC.PRODUCTION_TYPE=#productionType#
		                  				        UNION<!-- 4级评审 -->
		                  				      SELECT TPRCL.CREDIT_ID
		                  							  FROM T_PRJT_RISK_CONTROL TPRCL
		                  				   LEFT JOIN T_PRJT_CREDIT TPC ON TPRCL.CREDIT_ID=TPC.ID
		                  							 WHERE TPRCL.STATUS=0 
		                  				         AND TPRCL.PRC_NODE>=3 
		                  				         AND TPC.PRODUCTION_TYPE=#productionType#
		                  				         AND TPRCL.PRC_ID NOT IN (SELECT PRC_ID FROM T_PRJT_RISK_CONTROL WHERE PRC_LEVEL_ID&lt;4 AND STATE!=0) 			 
		                  								 AND TPRCL.STATE=0 AND TPRCL.PRC_LEVEL_ID=3
		                          )
		    GROUP BY DECP.DECP_ID,DECP.DECP_NAME_CN
 	</select>
 	
 	<select id="getCountOfApprove" resultClass="java.lang.Integer">
 			SELECT COUNT(X.DECP_ID) APPROVE_COUNT
					  FROM (SELECT CMPY.DECP_ID,CMPY.DECP_NAME_CN,TPC.VALID_DAY,TT.PAY_MONEY,
									CASE WHEN YEAR(TT.PAY_DATE) = 1900
									THEN NULL
									ELSE TT.PAY_DATE
									END PAY_DATE,
									TPC.WIND_RESULT_DATE,
									CASE WHEN PRJT.APPRORIATEMON IS NULL
										 THEN 0
										 ELSE PRJT.APPRORIATEMON
										 END +
									CASE WHEN PRJT1.APPRORIATEMON IS NULL
										 THEN 0
										 ELSE PRJT1.APPRORIATEMON
										 END AMOUNT
									FROM T_PRJT_CREDIT TPC				
									LEFT JOIN T_PRJT_CREDITEQUIPMENT TPCE ON TPCe.CREDIT_ID = TPC.ID
									LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCs.CREDIT_ID = TPC.ID
									LEFT JOIN T_RENT_CONTRACT TRC ON TRC.PRCD_ID = TPC.ID
									LEFT JOIN (SELECT T.CREDIT_ID,
					          								SUM(T.PAY_MONEY) PAY_MONEY,
					          								MIN(T.PAY_DATE) PAY_DATE
					      							 FROM T_SUPL_PLAYDETIL T 
					      							WHERE BACKSTATE='0' 
					      								AND STATUS = 0
					      							  AND STATE = 3 
					      							GROUP BY T.CREDIT_ID) TT ON TPC.ID=TT.CREDIT_ID
										
									    LEFT JOIN T_USER_USER TTT ON TTT.ID =TPC.SENSOR_ID AND TTT.status=0
							        LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID = TTT.DEPT_ID
							        LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID = CMPY.DECP_ID
					            LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT on TPC.ID=PRJT.CREDIT_ID AND PRJT.STATUS=0 AND PRJT.TYPE=1 
					            LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT1 on TPC.ID=PRJT1.CREDIT_ID AND PRJT1.STATUS=0 AND PRJT1.TYPE=0 
					        	    
									WHERE  TPC.STATUS=0 AND (TPC.WIND_STATE=1 OR TPC.WIND_STATE=2)
					  				AND (TRC.STATUS=0 OR TRC.STATUS IS NULL ) 
					   				AND (TPC.FINANCECONTRACT_DATE IS NULL )
									GROUP BY CMPY.DECP_ID,CMPY.DECP_NAME_CN,TPC.SENSOR_ID,TPC.VALID_DAY,TPC.LEASE_CODE,TT.PAY_MONEY,TPCS.LEASE_TOPRIC,TT.PAY_DATE,TPC.WIND_RESULT_DATE,PRJT.APPRORIATEMON,PRJT.TYPE,PRJT1.APPRORIATEMON,PRJT1.TYPE
									) X
									WHERE X.PAY_MONEY &lt;= 0 OR X.PAY_MONEY IS NULL
							      AND DATEDIFF(DAY,X.WIND_RESULT_DATE,GETDATE()) &lt;= X.VALID_DAY 
							      AND X.PAY_DATE IS NULL
 	</select>
 	
 	<select id="getCountOfApproveGroupByCmpy" resultClass="java.util.HashMap">
 				SELECT COUNT(X.DECP_ID) APPROVE_COUNT,X.DECP_ID,X.DECP_NAME_CN 
					  FROM (SELECT CMPY.DECP_ID,CMPY.DECP_NAME_CN,TPC.VALID_DAY,TT.PAY_MONEY,
									CASE WHEN YEAR(TT.PAY_DATE) = 1900
									THEN NULL
									ELSE TT.PAY_DATE
									END PAY_DATE,
									TPC.WIND_RESULT_DATE,
									CASE WHEN PRJT.APPRORIATEMON IS NULL
										 THEN 0
										 ELSE PRJT.APPRORIATEMON
										 END +
									CASE WHEN PRJT1.APPRORIATEMON IS NULL
										 THEN 0
										 ELSE PRJT1.APPRORIATEMON
										 END AMOUNT,TPC.DELAY_PAY_STATUS
									FROM T_PRJT_CREDIT TPC				
									LEFT JOIN T_PRJT_CREDITEQUIPMENT TPCE ON TPCe.CREDIT_ID = TPC.ID
									LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCs.CREDIT_ID = TPC.ID
									LEFT JOIN T_RENT_CONTRACT TRC ON TRC.PRCD_ID = TPC.ID
									LEFT JOIN (SELECT T.CREDIT_ID,
					          								SUM(T.PAY_MONEY) PAY_MONEY,
					          								MIN(T.PAY_DATE) PAY_DATE
					      							 FROM T_SUPL_PLAYDETIL T 
					      							WHERE BACKSTATE='0' 
					      								AND STATUS = 0
					      							  AND STATE = 3 
					      							GROUP BY T.CREDIT_ID) TT ON TPC.ID=TT.CREDIT_ID
										
								    LEFT JOIN T_USER_USER TTT ON TTT.ID =TPC.SENSOR_ID
							        LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID = TTT.DEPT_ID
							        LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID = CMPY.DECP_ID
					            LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT on TPC.ID=PRJT.CREDIT_ID AND PRJT.STATUS=0 AND PRJT.TYPE=1 
					            LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT1 on TPC.ID=PRJT1.CREDIT_ID AND PRJT1.STATUS=0 AND PRJT1.TYPE=0 
					        	    
									WHERE  TPC.STATUS=0 AND (TPC.WIND_STATE=1 OR TPC.WIND_STATE=2)
					  				AND (TRC.STATUS=0 OR TRC.STATUS IS NULL ) 
					   				AND (TPC.FINANCECONTRACT_DATE IS NULL )
									GROUP BY CMPY.DECP_ID,CMPY.DECP_NAME_CN,TPC.SENSOR_ID,TPC.VALID_DAY,TPC.LEASE_CODE,
											 TT.PAY_MONEY,TPCS.LEASE_TOPRIC,TT.PAY_DATE,TPC.WIND_RESULT_DATE,PRJT.APPRORIATEMON,
											 PRJT.TYPE,PRJT1.APPRORIATEMON,PRJT1.TYPE,TPC.DELAY_PAY_STATUS
									) X
									WHERE (X.PAY_MONEY &lt;= 0 OR X.PAY_MONEY IS NULL)
						      		  AND DATEDIFF(DAY,X.WIND_RESULT_DATE,GETDATE()) &lt;= X.VALID_DAY
						      		  AND (X.DELAY_PAY_STATUS=0 OR X.DELAY_PAY_STATUS IS NULL) <!-- 缓拨的不计算在内,缓拨 code为-1 -->
					        GROUP BY X.DECP_ID,X.DECP_NAME_CN
 	</select>
 	
 	<select id="getCountOfApproveGroupByCmpyProductionType" resultClass="java.util.HashMap">
 				SELECT COUNT(X.DECP_ID) APPROVE_COUNT,X.DECP_ID,X.DECP_NAME_CN 
					  FROM (SELECT CMPY.DECP_ID,CMPY.DECP_NAME_CN,TPC.VALID_DAY,TT.PAY_MONEY,
									CASE WHEN YEAR(TT.PAY_DATE) = 1900
									THEN NULL
									ELSE TT.PAY_DATE
									END PAY_DATE,
									TPC.WIND_RESULT_DATE,
									CASE WHEN PRJT.APPRORIATEMON IS NULL
										 THEN 0
										 ELSE PRJT.APPRORIATEMON
										 END +
									CASE WHEN PRJT1.APPRORIATEMON IS NULL
										 THEN 0
										 ELSE PRJT1.APPRORIATEMON
										 END AMOUNT,TPC.DELAY_PAY_STATUS
									FROM T_PRJT_CREDIT TPC				
									LEFT JOIN T_PRJT_CREDITEQUIPMENT TPCE ON TPCe.CREDIT_ID = TPC.ID
									LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCs.CREDIT_ID = TPC.ID
									LEFT JOIN T_RENT_CONTRACT TRC ON TRC.PRCD_ID = TPC.ID
									LEFT JOIN (SELECT T.CREDIT_ID,
					          								SUM(T.PAY_MONEY) PAY_MONEY,
					          								MIN(T.PAY_DATE) PAY_DATE
					      							 FROM T_SUPL_PLAYDETIL T 
					      							WHERE BACKSTATE='0' 
					      								AND STATUS = 0
					      							  AND STATE = 3 
					      							GROUP BY T.CREDIT_ID) TT ON TPC.ID=TT.CREDIT_ID
										
								    LEFT JOIN T_USER_USER TTT ON TTT.ID =TPC.SENSOR_ID
							        LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID = TTT.DEPT_ID
							        LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID = CMPY.DECP_ID
					            LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT on TPC.ID=PRJT.CREDIT_ID AND PRJT.STATUS=0 AND PRJT.TYPE=1 
					            LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT1 on TPC.ID=PRJT1.CREDIT_ID AND PRJT1.STATUS=0 AND PRJT1.TYPE=0 
					        	    
									WHERE  TPC.STATUS=0 AND (TPC.WIND_STATE=1 OR TPC.WIND_STATE=2)
					  				AND (TRC.STATUS=0 OR TRC.STATUS IS NULL ) 
					  				AND TPC.PRODUCTION_TYPE=#productionType#
					   				AND (TPC.FINANCECONTRACT_DATE IS NULL )
									GROUP BY CMPY.DECP_ID,CMPY.DECP_NAME_CN,TPC.SENSOR_ID,TPC.VALID_DAY,TPC.LEASE_CODE,
											 TT.PAY_MONEY,TPCS.LEASE_TOPRIC,TT.PAY_DATE,TPC.WIND_RESULT_DATE,PRJT.APPRORIATEMON,
											 PRJT.TYPE,PRJT1.APPRORIATEMON,PRJT1.TYPE,TPC.DELAY_PAY_STATUS
									) X
									WHERE (X.PAY_MONEY &lt;= 0 OR X.PAY_MONEY IS NULL)
						      		  AND DATEDIFF(DAY,X.WIND_RESULT_DATE,GETDATE()) &lt;= X.VALID_DAY
						      		  AND (X.DELAY_PAY_STATUS=0 OR X.DELAY_PAY_STATUS IS NULL) <!-- 缓拨的不计算在内,缓拨 code为-1 -->
					        GROUP BY X.DECP_ID,X.DECP_NAME_CN
 	</select>
 				
 	<select id="getAmountOfApproveGroupByCmpy" resultClass="java.util.HashMap">
 				SELECT SUM(X.AMOUNT)/1000 AS APPROVE_AMOUNT,X.DECP_NAME_CN,X.DECP_ID 
					  FROM (SELECT CMPY.DECP_ID,CMPY.DECP_NAME_CN,TPC.VALID_DAY,TT.PAY_MONEY,
									CASE WHEN YEAR(TT.PAY_DATE) = 1900
									THEN NULL
									ELSE TT.PAY_DATE
									END PAY_DATE,
									TPC.WIND_RESULT_DATE,
									CASE WHEN PRJT.APPRORIATEMON IS NULL
										 THEN 0
										 ELSE PRJT.APPRORIATEMON
										 END +
									CASE WHEN PRJT1.APPRORIATEMON IS NULL
										 THEN 0
										 ELSE PRJT1.APPRORIATEMON
										 END AMOUNT,TPC.DELAY_PAY_STATUS
									FROM T_PRJT_CREDIT TPC				
									LEFT JOIN T_PRJT_CREDITEQUIPMENT TPCE ON TPCE.CREDIT_ID = TPC.ID
									LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCS.CREDIT_ID = TPC.ID
									LEFT JOIN T_RENT_CONTRACT TRC ON TRC.PRCD_ID = TPC.ID
									LEFT JOIN (SELECT T.CREDIT_ID,
					          								SUM(T.PAY_MONEY) PAY_MONEY,
					          								MIN(T.PAY_DATE) PAY_DATE
					      							 FROM T_SUPL_PLAYDETIL T 
					      							WHERE BACKSTATE='0' 
					      								AND STATUS = 0
					      							  AND STATE = 3 
					      							GROUP BY T.CREDIT_ID) TT ON TPC.ID=TT.CREDIT_ID
										
								    LEFT JOIN T_USER_USER TTT ON TTT.ID =TPC.SENSOR_ID
							        LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID = TTT.DEPT_ID
							        LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID = CMPY.DECP_ID
					            LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT on TPC.ID=PRJT.CREDIT_ID AND PRJT.STATUS=0 AND PRJT.TYPE=1 
					            LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT1 on TPC.ID=PRJT1.CREDIT_ID AND PRJT1.STATUS=0 AND PRJT1.TYPE=0 
					        	    
									WHERE  TPC.STATUS=0 AND (TPC.WIND_STATE=1 OR TPC.WIND_STATE=2)
					  				AND (TRC.STATUS=0 OR TRC.STATUS IS NULL ) 
					   				AND (TPC.FINANCECONTRACT_DATE IS NULL )
									GROUP BY CMPY.DECP_ID,CMPY.DECP_NAME_CN,TPC.SENSOR_ID,TPC.VALID_DAY,TPC.LEASE_CODE,TT.PAY_MONEY,
											 TPCS.LEASE_TOPRIC,TT.PAY_DATE,TPC.WIND_RESULT_DATE,PRJT.APPRORIATEMON,PRJT.TYPE,
											 PRJT1.APPRORIATEMON,PRJT1.TYPE,TPC.DELAY_PAY_STATUS
									) X
									WHERE (X.PAY_MONEY &lt;= 0 OR X.PAY_MONEY IS NULL)
							      	  AND DATEDIFF(DAY,X.WIND_RESULT_DATE,GETDATE()) &lt;= X.VALID_DAY 
							      	  AND (X.DELAY_PAY_STATUS=0 OR X.DELAY_PAY_STATUS IS NULL)<!-- 缓拨的不计算在内,缓拨 code为-1 -->
					     GROUP BY X.DECP_NAME_CN,X.DECP_ID
 	</select>
 	
 	<select id="getAmountOfApproveGroupByCmpyProductionType" resultClass="java.util.HashMap">
 				SELECT SUM(X.AMOUNT)/1000 AS APPROVE_AMOUNT,X.DECP_NAME_CN,X.DECP_ID 
					  FROM (SELECT CMPY.DECP_ID,CMPY.DECP_NAME_CN,TPC.VALID_DAY,TT.PAY_MONEY,
									CASE WHEN YEAR(TT.PAY_DATE) = 1900
									THEN NULL
									ELSE TT.PAY_DATE
									END PAY_DATE,
									TPC.WIND_RESULT_DATE,
									CASE WHEN PRJT.APPRORIATEMON IS NULL
										 THEN 0
										 ELSE PRJT.APPRORIATEMON
										 END +
									CASE WHEN PRJT1.APPRORIATEMON IS NULL
										 THEN 0
										 ELSE PRJT1.APPRORIATEMON
										 END AMOUNT,TPC.DELAY_PAY_STATUS
									FROM T_PRJT_CREDIT TPC				
									LEFT JOIN T_PRJT_CREDITEQUIPMENT TPCE ON TPCE.CREDIT_ID = TPC.ID
									LEFT JOIN T_PRJT_CREDITSCHEME TPCS ON TPCS.CREDIT_ID = TPC.ID
									LEFT JOIN T_RENT_CONTRACT TRC ON TRC.PRCD_ID = TPC.ID
									LEFT JOIN (SELECT T.CREDIT_ID,
					          								SUM(T.PAY_MONEY) PAY_MONEY,
					          								MIN(T.PAY_DATE) PAY_DATE
					      							 FROM T_SUPL_PLAYDETIL T 
					      							WHERE BACKSTATE='0' 
					      								AND STATUS = 0
					      							  AND STATE = 3 
					      							GROUP BY T.CREDIT_ID) TT ON TPC.ID=TT.CREDIT_ID
										
								    LEFT JOIN T_USER_USER TTT ON TTT.ID =TPC.SENSOR_ID
							        LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID = TTT.DEPT_ID
							        LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID = CMPY.DECP_ID
					            LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT on TPC.ID=PRJT.CREDIT_ID AND PRJT.STATUS=0 AND PRJT.TYPE=1 
					            LEFT JOIN T_PRJT_CREDITAPPROPIATE PRJT1 on TPC.ID=PRJT1.CREDIT_ID AND PRJT1.STATUS=0 AND PRJT1.TYPE=0 
					        	    
									WHERE  TPC.STATUS=0 AND (TPC.WIND_STATE=1 OR TPC.WIND_STATE=2)
									AND TPC.PRODUCTION_TYPE=#productionType#
					  				AND (TRC.STATUS=0 OR TRC.STATUS IS NULL ) 
					   				AND (TPC.FINANCECONTRACT_DATE IS NULL )
									GROUP BY CMPY.DECP_ID,CMPY.DECP_NAME_CN,TPC.SENSOR_ID,TPC.VALID_DAY,TPC.LEASE_CODE,TT.PAY_MONEY,
											 TPCS.LEASE_TOPRIC,TT.PAY_DATE,TPC.WIND_RESULT_DATE,PRJT.APPRORIATEMON,PRJT.TYPE,
											 PRJT1.APPRORIATEMON,PRJT1.TYPE,TPC.DELAY_PAY_STATUS
									) X
									WHERE (X.PAY_MONEY &lt;= 0 OR X.PAY_MONEY IS NULL)
							      	  AND DATEDIFF(DAY,X.WIND_RESULT_DATE,GETDATE()) &lt;= X.VALID_DAY 
							      	  AND (X.DELAY_PAY_STATUS=0 OR X.DELAY_PAY_STATUS IS NULL)<!-- 缓拨的不计算在内,缓拨 code为-1 -->
					     GROUP BY X.DECP_NAME_CN,X.DECP_ID
 	</select>
 	
 	<insert id="batchUpdate">
 				INSERT INTO T_CASE_REPORT 
 				(COMPANY_ID,COMPANY_NAME,EFFECT_DATE,CREATE_DATE,INFO_AMOUNT,INFO_COUNT,HAS_ACCESS_AMOUNT,HAS_ACCESS_COUNT,AUDIT_AMOUNT,AUDIT_COUNT,APPROVE_AMOUNT,APPROVE_COUNT)
				VALUES 
				(#DECP_ID#,#DECP_NAME_CN#,GETDATE(),GETDATE(),#INFO_AMOUNT#,#INFO_COUNT#,#HAS_ACCESS_AMOUNT#,#HAS_ACCESS_COUNT#,#AUDIT_AMOUNT#,#AUDIT_COUNT#,#APPROVE_AMOUNT#,#APPROVE_COUNT#)
 	</insert>
 	
 	<insert id="batchUpdateEqu">
 				INSERT INTO T_CASE_REPORT_EQU 
 				(COMPANY_ID,COMPANY_NAME,EFFECT_DATE,CREATE_DATE,INFO_AMOUNT,INFO_COUNT,HAS_ACCESS_AMOUNT,HAS_ACCESS_COUNT,AUDIT_AMOUNT,AUDIT_COUNT,APPROVE_AMOUNT,APPROVE_COUNT)
				VALUES 
				(#DECP_ID#,#DECP_NAME_CN#,GETDATE(),GETDATE(),#INFO_AMOUNT#,#INFO_COUNT#,#HAS_ACCESS_AMOUNT#,#HAS_ACCESS_COUNT#,#AUDIT_AMOUNT#,#AUDIT_COUNT#,#APPROVE_AMOUNT#,#APPROVE_COUNT#)
 	</insert>
 	
 	<insert id="batchUpdateMotor">
 				INSERT INTO T_CASE_REPORT_MOTOR 
 				(COMPANY_ID,COMPANY_NAME,EFFECT_DATE,CREATE_DATE,INFO_AMOUNT,INFO_COUNT,HAS_ACCESS_AMOUNT,HAS_ACCESS_COUNT,AUDIT_AMOUNT,AUDIT_COUNT,APPROVE_AMOUNT,APPROVE_COUNT)
				VALUES 
				(#DECP_ID#,#DECP_NAME_CN#,GETDATE(),GETDATE(),#INFO_AMOUNT#,#INFO_COUNT#,#HAS_ACCESS_AMOUNT#,#HAS_ACCESS_COUNT#,#AUDIT_AMOUNT#,#AUDIT_COUNT#,#APPROVE_AMOUNT#,#APPROVE_COUNT#)
 	</insert>
 	
 	<insert id="batchUpdateCar">
 				INSERT INTO T_CASE_REPORT_CAR 
 				(COMPANY_ID,COMPANY_NAME,EFFECT_DATE,CREATE_DATE,INFO_AMOUNT,INFO_COUNT,HAS_ACCESS_AMOUNT,HAS_ACCESS_COUNT,AUDIT_AMOUNT,AUDIT_COUNT,APPROVE_AMOUNT,APPROVE_COUNT)
				VALUES 
				(#DECP_ID#,#DECP_NAME_CN#,GETDATE(),GETDATE(),#INFO_AMOUNT#,#INFO_COUNT#,#HAS_ACCESS_AMOUNT#,#HAS_ACCESS_COUNT#,#AUDIT_AMOUNT#,#AUDIT_COUNT#,#APPROVE_AMOUNT#,#APPROVE_COUNT#)
 	</insert>
 	
 	<select id="query_count" resultClass="java.lang.Integer">
 				SELECT COUNT(COMPANY_ID)
				  FROM T_CASE_REPORT 
				 WHERE 1=1
				 <isNotEmpty property="DATE">
				   AND CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
				 </isNotEmpty>
				 <isNotEmpty property="DECP_ID">
				   AND COMPANY_ID=#DECP_ID#
				 </isNotEmpty>
				 <isNotEmpty property="DECP_NAME_CN">
				   AND COMPANY_NAME LIKE '%$DECP_NAME_CN$%'
				 </isNotEmpty>
 	</select>
 	
 	<select id="query_invalid" resultClass="java.util.HashMap">
 				<!-- 先前的SQL
		 				SELECT COMPANY_NAME,CREATE_DATE,
						       INFO_AMOUNT,INFO_COUNT,
						       HAS_ACCESS_AMOUNT,HAS_ACCESS_COUNT,
						       AUDIT_AMOUNT,AUDIT_COUNT,
						       APPROVE_AMOUNT,APPROVE_COUNT
						  FROM T_CASE_REPORT 
						 WHERE 1=1
						 <isNotEmpty property="DATE">
						   AND CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
						 </isNotEmpty>
						 <isNotEmpty property="DECP_ID">
						   AND COMPANY_ID=#DECP_ID#
						 </isNotEmpty>
						 <isNotEmpty property="DECP_NAME_CN">
						   AND COMPANY_NAME LIKE '%$DECP_NAME_CN$%'
						 </isNotEmpty>
						ORDER BY CREATE_DATE DESC
				 -->
				 
				 
				 <!-- 现在的SQL,由于页面把4中类型(资料中,已访厂,审核中,已核准)的分成4张表在页面显示 ,所以修改SQL-->
				 
				 <!-- Below SQL是取从当前月致6个月前的数据
										     例子:今天是                             2012/03/21
										       SQL会取的数据是     2012/03/20
									        			       2012/02/20 (如果2012/02/20没有数据,则会取2012/02/29)
									        			       2012/01/20 (如果2012/01/20没有数据,则会取2012/01/31)
									        			       2011/12/20 (如果2011/12/20没有数据,则会取2011/12/31) 
									        			       2011/11/20 (如果2011/11/20没有数据,则会取2011/11/30)
									        			       2011/10/20 (如果2011/10/20没有数据,则会取2011/10/31)
									        			       2011/09/20 (如果2011/09/20没有数据,则会取2011/09/30)
				-->
				
				<!-- 取资料中的信息(时间,总金额,件数) -->
	           SELECT 'INFO' TYPE,T0.COMPANY_ID,T0.COMPANY_NAME,
                 <!-- 6个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL 
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.INFO_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)
                            ),0
                            )
                 ELSE T6.INFO_AMOUNT
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.INFO_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)
                            ),0
                            )
                 ELSE T6.INFO_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 <!-- 5个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.INFO_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)
                            ),0
                            )
                 ELSE T5.INFO_AMOUNT
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.INFO_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)
                            ),0
                            )
                 ELSE T5.INFO_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 <!-- 4个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.INFO_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)
                            ),0
                            )
                 ELSE T4.INFO_AMOUNT
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.INFO_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)
                            ),0
                            )
                 ELSE T4.INFO_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 <!-- 3个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.INFO_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)
                            ),0
                            )
                 ELSE T3.INFO_AMOUNT
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.INFO_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)
                            ),0
                            )
                 ELSE T3.INFO_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 <!-- 2个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.INFO_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)
                            ),0
                            )
                 ELSE T2.INFO_AMOUNT
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.INFO_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)
                            ),0
                            )
                 ELSE T2.INFO_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 <!-- 1个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.INFO_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)
                            ),0
                            )
                 ELSE T1.INFO_AMOUNT
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.INFO_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.INFO_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)
                            ),0
                            )
                 ELSE T1.INFO_COUNT
                 END COUNT_ONE_MONTH_AGO,
                 
                 <!-- 当前月部分 -->
                 CONVERT(VARCHAR,T0.CREATE_DATE,23) DATE_CURRENT_MONTH,ISNULL(T0.INFO_AMOUNT,0) AMOUNT_CURRENT_MONTH,ISNULL(T0.INFO_COUNT,0) COUNT_CURRENT_MONTH
            
            FROM T_CASE_REPORT T0
	       LEFT JOIN T_CASE_REPORT T1 ON T0.COMPANY_ID=T1.COMPANY_ID AND CONVERT(VARCHAR,T1.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-1,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T2 ON T0.COMPANY_ID=T2.COMPANY_ID AND CONVERT(VARCHAR,T2.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-2,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T3 ON T0.COMPANY_ID=T3.COMPANY_ID AND CONVERT(VARCHAR,T3.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-3,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T4 ON T0.COMPANY_ID=T4.COMPANY_ID AND CONVERT(VARCHAR,T4.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-4,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T5 ON T0.COMPANY_ID=T5.COMPANY_ID AND CONVERT(VARCHAR,T5.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-5,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T6 ON T0.COMPANY_ID=T6.COMPANY_ID AND CONVERT(VARCHAR,T6.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-6,GETDATE()-1),23)
           WHERE CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,GETDATE()-1,23)
           
           UNION ALL
           
           <!-- 已访厂部分 -->
           SELECT 'HAS_ACCESS' TYPE,T0.COMPANY_ID,T0.COMPANY_NAME,
                 <!-- 6个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL 
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.HAS_ACCESS_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)
                            ),0
                            )
                 ELSE T6.HAS_ACCESS_AMOUNT
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.HAS_ACCESS_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)
                            ),0
                            )
                 ELSE T6.HAS_ACCESS_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 <!-- 5个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.HAS_ACCESS_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)
                            ),0
                            )
                 ELSE T5.HAS_ACCESS_AMOUNT
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.HAS_ACCESS_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)
                            ),0
                            )
                 ELSE T5.HAS_ACCESS_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 <!-- 4个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.HAS_ACCESS_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)
                            ),0
                            )
                 ELSE T4.HAS_ACCESS_AMOUNT
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.HAS_ACCESS_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)
                            ),0
                            )
                 ELSE T4.HAS_ACCESS_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 <!-- 3个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.HAS_ACCESS_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)
                            ),0
                            )
                 ELSE T3.HAS_ACCESS_AMOUNT
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.HAS_ACCESS_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)
                            ),0
                            )
                 ELSE T3.HAS_ACCESS_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 <!-- 2个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.HAS_ACCESS_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)
                            ),0
                            )
                 ELSE T2.HAS_ACCESS_AMOUNT
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.HAS_ACCESS_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)
                            ),0
                            )
                 ELSE T2.HAS_ACCESS_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 <!-- 1个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.HAS_ACCESS_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)
                            ),0
                            )
                 ELSE T1.HAS_ACCESS_AMOUNT
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.HAS_ACCESS_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.HAS_ACCESS_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)
                            ),0
                            )
                 ELSE T1.HAS_ACCESS_COUNT
                 END COUNT_ONE_MONTH_AGO,
                 
                 <!-- 当前月部分 -->
                 CONVERT(VARCHAR,T0.CREATE_DATE,23) DATE_CURRENT_MONTH,ISNULL(T0.HAS_ACCESS_AMOUNT,0) AMOUNT_CURRENT_MONTH,ISNULL(T0.HAS_ACCESS_COUNT,0) COUNT_CURRENT_MONTH
            
            FROM T_CASE_REPORT T0
	       LEFT JOIN T_CASE_REPORT T1 ON T0.COMPANY_ID=T1.COMPANY_ID AND CONVERT(VARCHAR,T1.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-1,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T2 ON T0.COMPANY_ID=T2.COMPANY_ID AND CONVERT(VARCHAR,T2.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-2,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T3 ON T0.COMPANY_ID=T3.COMPANY_ID AND CONVERT(VARCHAR,T3.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-3,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T4 ON T0.COMPANY_ID=T4.COMPANY_ID AND CONVERT(VARCHAR,T4.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-4,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T5 ON T0.COMPANY_ID=T5.COMPANY_ID AND CONVERT(VARCHAR,T5.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-5,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T6 ON T0.COMPANY_ID=T6.COMPANY_ID AND CONVERT(VARCHAR,T6.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-6,GETDATE()-1),23)
           WHERE CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,GETDATE()-1,23)
           
           UNION ALL
           
           <!-- 审核中部分 -->
               SELECT 'AUDIT' TYPE,T0.COMPANY_ID,T0.COMPANY_NAME,
          
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.AUDIT_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)
                            ),0
                            )
                 ELSE T6.AUDIT_AMOUNT
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.AUDIT_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)
                            ),0
                            )
                 ELSE T6.AUDIT_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.AUDIT_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)
                            ),0
                            )
                 ELSE T5.AUDIT_AMOUNT
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.AUDIT_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)
                            ),0
                            )
                 ELSE T5.AUDIT_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.AUDIT_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)
                            ),0
                            )
                 ELSE T4.AUDIT_AMOUNT
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.AUDIT_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)
                            ),0
                            )
                 ELSE T4.AUDIT_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.AUDIT_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)
                            ),0
                            )
                 ELSE T3.AUDIT_AMOUNT
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.AUDIT_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)
                            ),0
                            )
                 ELSE T3.AUDIT_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.AUDIT_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)
                            ),0
                            )
                 ELSE T2.AUDIT_AMOUNT
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.AUDIT_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)
                            ),0
                            )
                 ELSE T2.AUDIT_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.AUDIT_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)
                            ),0
                            )
                 ELSE T1.AUDIT_AMOUNT
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.AUDIT_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.AUDIT_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)
                            ),0
                            )
                 ELSE T1.AUDIT_COUNT
                 END COUNT_ONE_MONTH_AGO,
                 
                 
                 CONVERT(VARCHAR,T0.CREATE_DATE,23) DATE_CURRENT_MONTH,ISNULL(T0.AUDIT_AMOUNT,0) AMOUNT_CURRENT_MONTH,ISNULL(T0.AUDIT_COUNT,0) COUNT_CURRENT_MONTH
            
            FROM T_CASE_REPORT T0
	       LEFT JOIN T_CASE_REPORT T1 ON T0.COMPANY_ID=T1.COMPANY_ID AND CONVERT(VARCHAR,T1.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-1,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T2 ON T0.COMPANY_ID=T2.COMPANY_ID AND CONVERT(VARCHAR,T2.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-2,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T3 ON T0.COMPANY_ID=T3.COMPANY_ID AND CONVERT(VARCHAR,T3.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-3,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T4 ON T0.COMPANY_ID=T4.COMPANY_ID AND CONVERT(VARCHAR,T4.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-4,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T5 ON T0.COMPANY_ID=T5.COMPANY_ID AND CONVERT(VARCHAR,T5.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-5,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T6 ON T0.COMPANY_ID=T6.COMPANY_ID AND CONVERT(VARCHAR,T6.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-6,GETDATE()-1),23)
           WHERE CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,GETDATE()-1,23)
           
           UNION ALL
           
           <!-- 已核准部分 -->
               SELECT 'APPROVE' TYPE,T0.COMPANY_ID,T0.COMPANY_NAME,
          
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.APPROVE_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)
                            ),0
                            )
                 ELSE T6.APPROVE_AMOUNT
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.APPROVE_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-5, 0)),23)
                            ),0
                            )
                 ELSE T6.APPROVE_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.APPROVE_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)
                            ),0
                            )
                 ELSE T5.APPROVE_AMOUNT
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.APPROVE_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-4, 0)),23)
                            ),0
                            )
                 ELSE T5.APPROVE_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.APPROVE_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)
                            ),0
                            )
                 ELSE T4.APPROVE_AMOUNT
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.APPROVE_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-3, 0)),23)
                            ),0
                            )
                 ELSE T4.APPROVE_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.APPROVE_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)
                            ),0
                            )
                 ELSE T3.APPROVE_AMOUNT
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.APPROVE_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-2, 0)),23)
                            ),0
                            )
                 ELSE T3.APPROVE_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.APPROVE_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)
                            ),0
                            )
                 ELSE T2.APPROVE_AMOUNT
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.APPROVE_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE())-1, 0)),23)
                            ),0
                            )
                 ELSE T2.APPROVE_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.APPROVE_AMOUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_AMOUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)
                            ),0
                            )
                 ELSE T1.APPROVE_AMOUNT
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.APPROVE_COUNT IS NULL
                 THEN ISNULL(
                            (SELECT TT.APPROVE_COUNT 
                               FROM T_CASE_REPORT TT
                              WHERE TT.COMPANY_ID=T0.COMPANY_ID
                                AND CONVERT(VARCHAR,TT.CREATE_DATE,23)=
                                    CONVERT(VARCHAR,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(MM,0,GETDATE()), 0)),23)
                            ),0
                            )
                 ELSE T1.APPROVE_COUNT
                 END COUNT_ONE_MONTH_AGO,
                 
                 
                 CONVERT(VARCHAR,T0.CREATE_DATE,23) DATE_CURRENT_MONTH,ISNULL(T0.APPROVE_AMOUNT,0) AMOUNT_CURRENT_MONTH,ISNULL(T0.APPROVE_COUNT,0) COUNT_CURRENT_MONTH
            
            FROM T_CASE_REPORT T0
	       LEFT JOIN T_CASE_REPORT T1 ON T0.COMPANY_ID=T1.COMPANY_ID AND CONVERT(VARCHAR,T1.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-1,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T2 ON T0.COMPANY_ID=T2.COMPANY_ID AND CONVERT(VARCHAR,T2.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-2,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T3 ON T0.COMPANY_ID=T3.COMPANY_ID AND CONVERT(VARCHAR,T3.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-3,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T4 ON T0.COMPANY_ID=T4.COMPANY_ID AND CONVERT(VARCHAR,T4.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-4,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T5 ON T0.COMPANY_ID=T5.COMPANY_ID AND CONVERT(VARCHAR,T5.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-5,GETDATE()-1),23)
	       LEFT JOIN T_CASE_REPORT T6 ON T0.COMPANY_ID=T6.COMPANY_ID AND CONVERT(VARCHAR,T6.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-6,GETDATE()-1),23)
           WHERE CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,GETDATE()-1,23)
 	</select>
 	
 	<select id="query1" resultClass="java.util.HashMap">
 	SELECT * FROM
 			(SELECT 'INFO' TYPE,DEPT.DECP_ID COMPANY_ID,DEPT.DECP_NAME_CN COMPANY_NAME,DEPT.[ORDER],
                 
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL 
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T6.INFO_AMOUNT)
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T6.INFO_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 <!-- 5个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T5.INFO_AMOUNT)
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T5.INFO_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 <!-- 4个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T4.INFO_AMOUNT)
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T4.INFO_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 <!-- 3个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T3.INFO_AMOUNT)
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T3.INFO_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 <!-- 2个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T2.INFO_AMOUNT)
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T2.INFO_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 <!-- 1个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T1.INFO_AMOUNT)
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T1.INFO_COUNT
                 END COUNT_ONE_MONTH_AGO,
                 
                 <!-- 当前月部分 -->
           		 ISNULL(CONVERT(VARCHAR,T0.CREATE_DATE,23),CONVERT(VARCHAR,#DATE#,23)) DATE_CURRENT_MONTH,
                 ISNULL(CONVERT(DECIMAL(18,0),T0.INFO_AMOUNT),0) AMOUNT_CURRENT_MONTH,
                 ISNULL(T0.INFO_COUNT,0) COUNT_CURRENT_MONTH
            
           FROM T_DEPT_COMPANY DEPT
           LEFT JOIN T_CASE_REPORT T0 ON DEPT.DECP_ID=T0.COMPANY_ID AND CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
	       LEFT JOIN T_CASE_REPORT T1 ON DEPT.DECP_ID=T1.COMPANY_ID AND CONVERT(DATE,T1.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_1#,23)
	       LEFT JOIN T_CASE_REPORT T2 ON DEPT.DECP_ID=T2.COMPANY_ID AND CONVERT(DATE,T2.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_2#,23)
	       LEFT JOIN T_CASE_REPORT T3 ON DEPT.DECP_ID=T3.COMPANY_ID AND CONVERT(DATE,T3.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_3#,23)
	       LEFT JOIN T_CASE_REPORT T4 ON DEPT.DECP_ID=T4.COMPANY_ID AND CONVERT(DATE,T4.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_4#,23)
	       LEFT JOIN T_CASE_REPORT T5 ON DEPT.DECP_ID=T5.COMPANY_ID AND CONVERT(DATE,T5.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_5#,23)
	       LEFT JOIN T_CASE_REPORT T6 ON DEPT.DECP_ID=T6.COMPANY_ID AND CONVERT(DATE,T6.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_6#,23)
           WHERE DEPT.STATUS=0 AND DEPT.LEGELR=2
           
           UNION ALL
           
           <!-- 已访厂部分 -->
           SELECT 'HAS_ACCESS' TYPE,DEPT.DECP_ID COMPANY_ID,DEPT.DECP_NAME_CN COMPANY_NAME,DEPT.[ORDER],
                 <!-- 6个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL 
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T6.HAS_ACCESS_AMOUNT)
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T6.HAS_ACCESS_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 <!-- 5个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T5.HAS_ACCESS_AMOUNT)
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T5.HAS_ACCESS_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 <!-- 4个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T4.HAS_ACCESS_AMOUNT)
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T4.HAS_ACCESS_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 <!-- 3个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T3.HAS_ACCESS_AMOUNT)
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T3.HAS_ACCESS_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 <!-- 2个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T2.HAS_ACCESS_AMOUNT)
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T2.HAS_ACCESS_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 <!-- 1个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T1.HAS_ACCESS_AMOUNT)
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T1.HAS_ACCESS_COUNT
                 END COUNT_ONE_MONTH_AGO,
                 
                 <!-- 当前月部分 -->
           		 ISNULL(CONVERT(VARCHAR,T0.CREATE_DATE,23),CONVERT(VARCHAR,#DATE#,23)) DATE_CURRENT_MONTH,
                 ISNULL(CONVERT(DECIMAL(18,0),T0.HAS_ACCESS_AMOUNT),0) AMOUNT_CURRENT_MONTH,
                 ISNULL(T0.HAS_ACCESS_COUNT,0) COUNT_CURRENT_MONTH
            
           FROM T_DEPT_COMPANY DEPT
           LEFT JOIN T_CASE_REPORT T0 ON DEPT.DECP_ID=T0.COMPANY_ID AND CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
	       LEFT JOIN T_CASE_REPORT T1 ON DEPT.DECP_ID=T1.COMPANY_ID AND CONVERT(DATE,T1.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_1#,23)
	       LEFT JOIN T_CASE_REPORT T2 ON DEPT.DECP_ID=T2.COMPANY_ID AND CONVERT(DATE,T2.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_2#,23)
	       LEFT JOIN T_CASE_REPORT T3 ON DEPT.DECP_ID=T3.COMPANY_ID AND CONVERT(DATE,T3.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_3#,23)
	       LEFT JOIN T_CASE_REPORT T4 ON DEPT.DECP_ID=T4.COMPANY_ID AND CONVERT(DATE,T4.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_4#,23)
	       LEFT JOIN T_CASE_REPORT T5 ON DEPT.DECP_ID=T5.COMPANY_ID AND CONVERT(DATE,T5.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_5#,23)
	       LEFT JOIN T_CASE_REPORT T6 ON DEPT.DECP_ID=T6.COMPANY_ID AND CONVERT(DATE,T6.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_6#,23)
           WHERE DEPT.STATUS=0 AND DEPT.LEGELR=2
           
           UNION ALL
           
           <!-- 审核中部分 -->
               SELECT 'AUDIT' TYPE,DEPT.DECP_ID COMPANY_ID,DEPT.DECP_NAME_CN COMPANY_NAME,DEPT.[ORDER],
          
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T6.AUDIT_AMOUNT)
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T6.AUDIT_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T5.AUDIT_AMOUNT)
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T5.AUDIT_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T4.AUDIT_AMOUNT)
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T4.AUDIT_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T3.AUDIT_AMOUNT)
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T3.AUDIT_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T2.AUDIT_AMOUNT)
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T2.AUDIT_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T1.AUDIT_AMOUNT)
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T1.AUDIT_COUNT
                 END COUNT_ONE_MONTH_AGO,
                 
                 
           		 ISNULL(CONVERT(VARCHAR,T0.CREATE_DATE,23),CONVERT(VARCHAR,#DATE#,23)) DATE_CURRENT_MONTH,
                 ISNULL(CONVERT(DECIMAL(18,0),T0.AUDIT_AMOUNT),0) AMOUNT_CURRENT_MONTH,
                 ISNULL(T0.AUDIT_COUNT,0) COUNT_CURRENT_MONTH
            
           FROM T_DEPT_COMPANY DEPT
           LEFT JOIN T_CASE_REPORT T0 ON DEPT.DECP_ID=T0.COMPANY_ID AND CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
	       LEFT JOIN T_CASE_REPORT T1 ON DEPT.DECP_ID=T1.COMPANY_ID AND CONVERT(DATE,T1.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_1#,23)
	       LEFT JOIN T_CASE_REPORT T2 ON DEPT.DECP_ID=T2.COMPANY_ID AND CONVERT(DATE,T2.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_2#,23)
	       LEFT JOIN T_CASE_REPORT T3 ON DEPT.DECP_ID=T3.COMPANY_ID AND CONVERT(DATE,T3.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_3#,23)
	       LEFT JOIN T_CASE_REPORT T4 ON DEPT.DECP_ID=T4.COMPANY_ID AND CONVERT(DATE,T4.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_4#,23)
	       LEFT JOIN T_CASE_REPORT T5 ON DEPT.DECP_ID=T5.COMPANY_ID AND CONVERT(DATE,T5.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_5#,23)
	       LEFT JOIN T_CASE_REPORT T6 ON DEPT.DECP_ID=T6.COMPANY_ID AND CONVERT(DATE,T6.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_6#,23)
           WHERE DEPT.STATUS=0 AND DEPT.LEGELR=2
           
           UNION ALL
           
           <!-- 已核准部分 -->
               SELECT 'APPROVE' TYPE,DEPT.DECP_ID COMPANY_ID,DEPT.DECP_NAME_CN COMPANY_NAME,DEPT.[ORDER],
          
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T6.APPROVE_AMOUNT)
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T6.APPROVE_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T5.APPROVE_AMOUNT)
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T5.APPROVE_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T4.APPROVE_AMOUNT)
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T4.APPROVE_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T3.APPROVE_AMOUNT)
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T3.APPROVE_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T2.APPROVE_AMOUNT)
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T2.APPROVE_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T1.APPROVE_AMOUNT)
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T1.APPROVE_COUNT
                 END COUNT_ONE_MONTH_AGO,                 
                 
                 ISNULL(CONVERT(VARCHAR,T0.CREATE_DATE,23),CONVERT(VARCHAR,#DATE#,23)) DATE_CURRENT_MONTH,
                 ISNULL(CONVERT(DECIMAL(18,0),T0.APPROVE_AMOUNT),0) AMOUNT_CURRENT_MONTH,
                 ISNULL(T0.APPROVE_COUNT,0) COUNT_CURRENT_MONTH
            
           FROM T_DEPT_COMPANY DEPT
           LEFT JOIN T_CASE_REPORT T0 ON DEPT.DECP_ID=T0.COMPANY_ID AND CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
	       LEFT JOIN T_CASE_REPORT T1 ON DEPT.DECP_ID=T1.COMPANY_ID AND CONVERT(DATE,T1.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_1#,23)
	       LEFT JOIN T_CASE_REPORT T2 ON DEPT.DECP_ID=T2.COMPANY_ID AND CONVERT(DATE,T2.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_2#,23)
	       LEFT JOIN T_CASE_REPORT T3 ON DEPT.DECP_ID=T3.COMPANY_ID AND CONVERT(DATE,T3.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_3#,23)
	       LEFT JOIN T_CASE_REPORT T4 ON DEPT.DECP_ID=T4.COMPANY_ID AND CONVERT(DATE,T4.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_4#,23)
	       LEFT JOIN T_CASE_REPORT T5 ON DEPT.DECP_ID=T5.COMPANY_ID AND CONVERT(DATE,T5.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_5#,23)
	       LEFT JOIN T_CASE_REPORT T6 ON DEPT.DECP_ID=T6.COMPANY_ID AND CONVERT(DATE,T6.CREATE_DATE,23)=CONVERT(DATE,#LAST_DATE_6#,23)
           WHERE DEPT.STATUS=0 AND DEPT.LEGELR=2
           ) O
           ORDER BY O.[ORDER]
 	</select>
 	
 	<select id="query" resultClass="java.util.HashMap">
			SELECT 'INFO' TYPE,DEPT.DECP_ID COMPANY_ID,DEPT.DECP_NAME_CN COMPANY_NAME,
                 
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL 
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T6.INFO_AMOUNT)
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T6.INFO_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 <!-- 5个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T5.INFO_AMOUNT)
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T5.INFO_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 <!-- 4个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T4.INFO_AMOUNT)
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T4.INFO_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 <!-- 3个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T3.INFO_AMOUNT)
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T3.INFO_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 <!-- 2个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T2.INFO_AMOUNT)
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T2.INFO_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 <!-- 1个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.INFO_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T1.INFO_AMOUNT)
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.INFO_COUNT IS NULL
                 THEN '0'
                 ELSE T1.INFO_COUNT
                 END COUNT_ONE_MONTH_AGO,
                 
                 <!-- 当前月部分 -->
           		 ISNULL(CONVERT(VARCHAR,T0.CREATE_DATE,23),CONVERT(VARCHAR,#DATE#,23)) DATE_CURRENT_MONTH,
                 ISNULL(CONVERT(DECIMAL(18,0),T0.INFO_AMOUNT),0) AMOUNT_CURRENT_MONTH,
                 ISNULL(T0.INFO_COUNT,0) COUNT_CURRENT_MONTH
            
           FROM T_DEPT_COMPANY DEPT
           LEFT JOIN T_CASE_REPORT T0 ON DEPT.DECP_ID=T0.COMPANY_ID AND CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
	       LEFT JOIN T_CASE_REPORT T1 ON DEPT.DECP_ID=T1.COMPANY_ID AND CONVERT(VARCHAR,T1.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T2 ON DEPT.DECP_ID=T2.COMPANY_ID AND CONVERT(VARCHAR,T2.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T3 ON DEPT.DECP_ID=T3.COMPANY_ID AND CONVERT(VARCHAR,T3.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T4 ON DEPT.DECP_ID=T4.COMPANY_ID AND CONVERT(VARCHAR,T4.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T5 ON DEPT.DECP_ID=T5.COMPANY_ID AND CONVERT(VARCHAR,T5.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T6 ON DEPT.DECP_ID=T6.COMPANY_ID AND CONVERT(VARCHAR,T6.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)
           WHERE DEPT.STATUS=0 AND DEPT.LEGELR=2
           
           UNION ALL
           
           <!-- 已访厂部分 -->
           SELECT 'HAS_ACCESS' TYPE,DEPT.DECP_ID COMPANY_ID,DEPT.DECP_NAME_CN COMPANY_NAME,
                 <!-- 6个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL 
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T6.HAS_ACCESS_AMOUNT)
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T6.HAS_ACCESS_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 <!-- 5个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T5.HAS_ACCESS_AMOUNT)
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T5.HAS_ACCESS_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 <!-- 4个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T4.HAS_ACCESS_AMOUNT)
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T4.HAS_ACCESS_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 <!-- 3个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T3.HAS_ACCESS_AMOUNT)
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T3.HAS_ACCESS_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 <!-- 2个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T2.HAS_ACCESS_AMOUNT)
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T2.HAS_ACCESS_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 <!-- 1个月前的部分 -->
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.HAS_ACCESS_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T1.HAS_ACCESS_AMOUNT)
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.HAS_ACCESS_COUNT IS NULL
                 THEN '0'
                 ELSE T1.HAS_ACCESS_COUNT
                 END COUNT_ONE_MONTH_AGO,
                 
                 <!-- 当前月部分 -->
           		 ISNULL(CONVERT(VARCHAR,T0.CREATE_DATE,23),CONVERT(VARCHAR,#DATE#,23)) DATE_CURRENT_MONTH,
                 ISNULL(CONVERT(DECIMAL(18,0),T0.HAS_ACCESS_AMOUNT),0) AMOUNT_CURRENT_MONTH,
                 ISNULL(T0.HAS_ACCESS_COUNT,0) COUNT_CURRENT_MONTH
            
           FROM T_DEPT_COMPANY DEPT
           LEFT JOIN T_CASE_REPORT T0 ON DEPT.DECP_ID=T0.COMPANY_ID AND CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
	       LEFT JOIN T_CASE_REPORT T1 ON DEPT.DECP_ID=T1.COMPANY_ID AND CONVERT(VARCHAR,T1.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T2 ON DEPT.DECP_ID=T2.COMPANY_ID AND CONVERT(VARCHAR,T2.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T3 ON DEPT.DECP_ID=T3.COMPANY_ID AND CONVERT(VARCHAR,T3.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T4 ON DEPT.DECP_ID=T4.COMPANY_ID AND CONVERT(VARCHAR,T4.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T5 ON DEPT.DECP_ID=T5.COMPANY_ID AND CONVERT(VARCHAR,T5.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T6 ON DEPT.DECP_ID=T6.COMPANY_ID AND CONVERT(VARCHAR,T6.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)
           WHERE DEPT.STATUS=0 AND DEPT.LEGELR=2
           
           UNION ALL
           
           <!-- 审核中部分 -->
               SELECT 'AUDIT' TYPE,DEPT.DECP_ID COMPANY_ID,DEPT.DECP_NAME_CN COMPANY_NAME,
          
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T6.AUDIT_AMOUNT)
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T6.AUDIT_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T5.AUDIT_AMOUNT)
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T5.AUDIT_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T4.AUDIT_AMOUNT)
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T4.AUDIT_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T3.AUDIT_AMOUNT)
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T3.AUDIT_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T2.AUDIT_AMOUNT)
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T2.AUDIT_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.AUDIT_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T1.AUDIT_AMOUNT)
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.AUDIT_COUNT IS NULL
                 THEN '0'
                 ELSE T1.AUDIT_COUNT
                 END COUNT_ONE_MONTH_AGO,
                 
                 
           		 ISNULL(CONVERT(VARCHAR,T0.CREATE_DATE,23),CONVERT(VARCHAR,#DATE#,23)) DATE_CURRENT_MONTH,
                 ISNULL(CONVERT(DECIMAL(18,0),T0.AUDIT_AMOUNT),0) AMOUNT_CURRENT_MONTH,
                 ISNULL(T0.AUDIT_COUNT,0) COUNT_CURRENT_MONTH
            
           FROM T_DEPT_COMPANY DEPT
           LEFT JOIN T_CASE_REPORT T0 ON DEPT.DECP_ID=T0.COMPANY_ID AND CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
	       LEFT JOIN T_CASE_REPORT T1 ON DEPT.DECP_ID=T1.COMPANY_ID AND CONVERT(VARCHAR,T1.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T2 ON DEPT.DECP_ID=T2.COMPANY_ID AND CONVERT(VARCHAR,T2.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T3 ON DEPT.DECP_ID=T3.COMPANY_ID AND CONVERT(VARCHAR,T3.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T4 ON DEPT.DECP_ID=T4.COMPANY_ID AND CONVERT(VARCHAR,T4.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T5 ON DEPT.DECP_ID=T5.COMPANY_ID AND CONVERT(VARCHAR,T5.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T6 ON DEPT.DECP_ID=T6.COMPANY_ID AND CONVERT(VARCHAR,T6.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)
           WHERE DEPT.STATUS=0 AND DEPT.LEGELR=2
           
           UNION ALL
           
           <!-- 已核准部分 -->
               SELECT 'APPROVE' TYPE,DEPT.DECP_ID COMPANY_ID,DEPT.DECP_NAME_CN COMPANY_NAME,
          
                 CASE WHEN CONVERT(VARCHAR,T6.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T6.CREATE_DATE,23)
                 END DATE_SIX_MONTH_AGO,
                 CASE WHEN T6.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T6.APPROVE_AMOUNT)
                 END AMOUNT_SIX_MONTH_AGO,
                 CASE WHEN T6.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T6.APPROVE_COUNT
                 END COUNT_SIX_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T5.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T5.CREATE_DATE,23)
                 END DATE_FIVE_MONTH_AGO,
                 CASE WHEN T5.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T5.APPROVE_AMOUNT)
                 END AMOUNT_FIVE_MONTH_AGO,
                 CASE WHEN T5.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T5.APPROVE_COUNT
                 END COUNT_FIVE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T4.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T4.CREATE_DATE,23)
                 END DATE_FOUR_MONTH_AGO,
                 CASE WHEN T4.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T4.APPROVE_AMOUNT)
                 END AMOUNT_FOUR_MONTH_AGO,
                 CASE WHEN T4.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T4.APPROVE_COUNT
                 END COUNT_FOUR_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T3.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T3.CREATE_DATE,23)
                 END DATE_THREE_MONTH_AGO,
                 CASE WHEN T3.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T3.APPROVE_AMOUNT)
                 END AMOUNT_THREE_MONTH_AGO,
                 CASE WHEN T3.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T3.APPROVE_COUNT
                 END COUNT_THREE_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T2.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T2.CREATE_DATE,23)
                 END DATE_TWO_MONTH_AGO,
                 CASE WHEN T2.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T2.APPROVE_AMOUNT)
                 END AMOUNT_TWO_MONTH_AGO,
                 CASE WHEN T2.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T2.APPROVE_COUNT
                 END COUNT_TWO_MONTH_AGO,
                 
                 
                 CASE WHEN CONVERT(VARCHAR,T1.CREATE_DATE,23) IS NULL
                 THEN CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)                      
                 ELSE CONVERT(VARCHAR,T1.CREATE_DATE,23)
                 END DATE_ONE_MONTH_AGO,
                 CASE WHEN T1.APPROVE_AMOUNT IS NULL
                 THEN '0'
                 ELSE CONVERT(DECIMAL(18,0),T1.APPROVE_AMOUNT)
                 END AMOUNT_ONE_MONTH_AGO,
                 CASE WHEN T1.APPROVE_COUNT IS NULL
                 THEN '0'
                 ELSE T1.APPROVE_COUNT
                 END COUNT_ONE_MONTH_AGO,                 
                 
                 ISNULL(CONVERT(VARCHAR,T0.CREATE_DATE,23),CONVERT(VARCHAR,#DATE#,23)) DATE_CURRENT_MONTH,
                 ISNULL(CONVERT(DECIMAL(18,0),T0.APPROVE_AMOUNT),0) AMOUNT_CURRENT_MONTH,
                 ISNULL(T0.APPROVE_COUNT,0) COUNT_CURRENT_MONTH
            
           FROM T_DEPT_COMPANY DEPT
           LEFT JOIN T_CASE_REPORT T0 ON DEPT.DECP_ID=T0.COMPANY_ID AND CONVERT(VARCHAR,T0.CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
	       LEFT JOIN T_CASE_REPORT T1 ON DEPT.DECP_ID=T1.COMPANY_ID AND CONVERT(VARCHAR,T1.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T2 ON DEPT.DECP_ID=T2.COMPANY_ID AND CONVERT(VARCHAR,T2.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T3 ON DEPT.DECP_ID=T3.COMPANY_ID AND CONVERT(VARCHAR,T3.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T4 ON DEPT.DECP_ID=T4.COMPANY_ID AND CONVERT(VARCHAR,T4.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T5 ON DEPT.DECP_ID=T5.COMPANY_ID AND CONVERT(VARCHAR,T5.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)
	       LEFT JOIN T_CASE_REPORT T6 ON DEPT.DECP_ID=T6.COMPANY_ID AND CONVERT(VARCHAR,T6.CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)
           WHERE DEPT.STATUS=0 AND DEPT.LEGELR=2
 	</select>
 	
 	<select id="queryTotal1" resultClass="java.util.HashMap">
 								SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_6' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_6#<!-- 6个月之前最后天 -->
								   AND COMPANY_ID!=1
   							     GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
                     
                     			SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_5' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_5#<!-- 5个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
    							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_4' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_4#<!-- 4个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_3' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_3#<!-- 3个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_2' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_2#<!-- 2个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_1' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_1#<!-- 1个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      
				             SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_0' MONTH,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
				               		
				               		(ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
							       FROM T_CASE_REPORT
				         	  WHERE 
				         	  <isEmpty property="DATE">
				         	  		CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,GETDATE()-1,23)
				         	  		AND COMPANY_ID!=1
				         	  </isEmpty>
				         	  <isNotEmpty property="DATE">
				         	  		CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
				         	  		AND COMPANY_ID!=1
				         	  </isNotEmpty>
				         	  GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
 	</select>
 	<!-- 之前的SQL没有当前日就拿每个月的月底 -->
 	<select id="queryTotal" resultClass="java.util.HashMap">
			                    SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'6' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
								  FROM T_CASE_REPORT
						         WHERE
						         <isEmpty property="DATE">
						         	   CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-6,GETDATE()-1),23)
				         	     </isEmpty>
				         	     <isNotEmpty property="DATE">
				         	     	   CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23)
				         	     </isNotEmpty>
						      GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
      							 <isEmpty property="DATE">
      							 		UNION ALL
      							 		
      							 	 SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_6' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_6#<!-- 6个月之前最后天 -->
   							     GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
      							 </isEmpty>
      							UNION ALL
              
				                SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'5' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
								  FROM T_CASE_REPORT
						         WHERE
						         <isEmpty property="DATE">
						         	   CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-5,GETDATE()-1),23)
						         </isEmpty>
						         <isNotEmpty property="DATE">
						               CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23)
						         </isNotEmpty>
						      GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
						      
						      	 <isEmpty property="DATE">
      							 		UNION ALL
      							 		
      							 	 SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_5' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_5#<!-- 5个月之前最后天 -->
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
      							 </isEmpty>
      							 
						       UNION ALL
              
				               SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'4' MONTH,
		               		 		  ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						              ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						              ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						              ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						              
						              (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
								 FROM T_CASE_REPORT
						        WHERE
						        <isEmpty property="DATE">
					        		  CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-4,GETDATE()-1),23)
			        		    </isEmpty>
			        		    <isNotEmpty property="DATE">
		        		    		  CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23)
			        		    </isNotEmpty>
						     GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
      
      							<isEmpty property="DATE">
      							 		UNION ALL
      							 		
      							 	 SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_4' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_4#<!-- 4个月之前最后天 -->
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
      							 </isEmpty>
      							 
      						  UNION ALL
              
				              SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'3' MONTH,
				               		 ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
				               		 ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
			               			 ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
				               		 ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
				               		 
				               		 (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
								FROM T_CASE_REPORT
				         	   WHERE
				         	   <isEmpty property="DATE">
				         	   		 CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-3,GETDATE()-1),23)
		         	   		   </isEmpty>
		         	   		   <isNotEmpty property="DATE">
		         	   		   		 CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23)
		         	   		   </isNotEmpty>
				      		GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
      						   
      						   <isEmpty property="DATE">
      							 		UNION ALL
      							 		
      							 	 SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_3' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_3#<!-- 3个月之前最后天 -->
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
      							 </isEmpty>
      							 
      						 UNION ALL
              
				              SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'2' MONTH,
				               		 ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
				               		 ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
				               		 ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
				               		 ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
				               		 
				               		 (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						              ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						              ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						              ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						             (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						              ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						              ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						              
						              (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
							    FROM T_CASE_REPORT
				         	   WHERE 
				         	   <isEmpty property="DATE">
				         	   		 CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-2,GETDATE()-1),23)
		         	   		   </isEmpty>
		         	   		   <isNotEmpty property="DATE">
		         	   		   		 CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23)
		         	   		   </isNotEmpty>
				      		GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
      						   
      						   <isEmpty property="DATE">
      							 		UNION ALL
      							 		
      							 	 SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_2' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_2#<!-- 2个月之前最后天 -->
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
      							 </isEmpty>
      							 
      						 UNION ALL
        
				        	  SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'1' MONTH,
			                  		 ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
					                 ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
					                 ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
					                 ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
					                 
					                 (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
							    FROM T_CASE_REPORT
					           WHERE 
					           <isEmpty property="DATE">
				           			 CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-1,GETDATE()-1),23)
		           			   </isEmpty>
		           			   <isNotEmpty property="DATE">
		           			         CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23)
		           			   </isNotEmpty>
					        GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
      
      						   <isEmpty property="DATE">
      							 		UNION ALL
      							 		
      							 	 SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_1' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
								  FROM T_CASE_REPORT 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_1#<!-- 1个月之前最后天 -->
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
      							 </isEmpty>
      							 
      						 UNION ALL
      
				             SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'0' MONTH,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
				               		
				               		(ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB
							   FROM T_CASE_REPORT
				         	  WHERE 
				         	  <isEmpty property="DATE">
				         	  		CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,GETDATE()-1,23)
				         	  </isEmpty>
				         	  <isNotEmpty property="DATE">
				         	  		CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
				         	  </isNotEmpty>
				      	   GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)	
 	</select>
 	
 	<select id="queryDate" resultClass="java.util.HashMap">
 				SELECT CONVERT(VARCHAR,DATEADD(MONTH,0,#DATE#),23) DATE_CURRENT_MONTH,
				       CONVERT(VARCHAR,DATEADD(MONTH,-1,#DATE#),23) DATE_ONE_MONTH_AGO,
				       CONVERT(VARCHAR,DATEADD(MONTH,-2,#DATE#),23) DATE_TWO_MONTH_AGO,
				       CONVERT(VARCHAR,DATEADD(MONTH,-3,#DATE#),23) DATE_THREE_MONTH_AGO,
				       CONVERT(VARCHAR,DATEADD(MONTH,-4,#DATE#),23) DATE_FOUR_MONTH_AGO,
				       CONVERT(VARCHAR,DATEADD(MONTH,-5,#DATE#),23) DATE_FIVE_MONTH_AGO,
				       CONVERT(VARCHAR,DATEADD(MONTH,-6,#DATE#),23) DATE_SIX_MONTH_AGO
 	</select>
 	<select id="queryDate1" resultClass="java.util.HashMap">
 				SELECT CONVERT(VARCHAR,DATEADD(MONTH,0,#DATE#),23) DATE_CURRENT_MONTH,
				       #LAST_DATE_1# DATE_ONE_MONTH_AGO,
				       #LAST_DATE_2# DATE_TWO_MONTH_AGO,
				       #LAST_DATE_3# DATE_THREE_MONTH_AGO,
				       #LAST_DATE_4# DATE_FOUR_MONTH_AGO,
				       #LAST_DATE_5# DATE_FIVE_MONTH_AGO,
				       #LAST_DATE_6# DATE_SIX_MONTH_AGO
 	</select>
 	
 	
 	
 	<!-- 各区业绩报表SQL -->
 	<select id="queryOfAchievementReport" resultClass="java.util.HashMap">
	 		<isEmpty property="MONTH">
	 			    SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='01'
			           AND EMP_ID=-1
			           
			           UNION ALL
			           
			        SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='02'
			           AND EMP_ID=-1 
			            
			           UNION ALL
			           
			        SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='03'
			           AND EMP_ID=-1
			              
			           UNION ALL
			           
			        SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='04'
			           AND EMP_ID=-1
			              
			           UNION ALL
			           
			        SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='05'
			           AND EMP_ID=-1
			              
			           UNION ALL
			           
			        SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='06'
			           AND EMP_ID=-1
			              
			           UNION ALL
			           
			        SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='07'
			           AND EMP_ID=-1
			              
			           UNION ALL
			           
			        SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='08'
			           AND EMP_ID=-1
			              
			           UNION ALL
			           
			        SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='09'
			           AND EMP_ID=-1
			              
			           UNION ALL
			           
			        SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='10'
			           AND EMP_ID=-1
			              
			           UNION ALL
			           
			        SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='11'
			           AND EMP_ID=-1
			              
			           UNION ALL
			           
			        SELECT EMP_ID,EMP_NAME,
		           		   DECP_ID,DECP_NAME,
			               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
			           AND DECP_ID=#DEPT#
			            </isNotEmpty>
			           AND BONUS_MONTH='12'
			           AND EMP_ID=-1
	           ORDER BY BONUS_MONTH ASC,DECP_ID DESC,EMP_NAME ASC
	         </isEmpty>
	         <isNotEmpty property="MONTH">
	         		SELECT EMP_ID,EMP_NAME,
	           		   DECP_ID,DECP_NAME,
		               MONTH_TARGET,MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY,BONUS_MONTH
	      		  FROM T_REPORT_BONUS
		         WHERE 
		         	<isEmpty property="YEAR">
		               BONUS_YEAR=YEAR(GETDATE())
		            </isEmpty>
		            <isNotEmpty property="YEAR">
	            	   BONUS_YEAR=#YEAR#
		            </isNotEmpty>
		            <isNotEmpty property="DEPT">
		           AND DECP_ID=#DEPT#
		            </isNotEmpty>
		           AND BONUS_MONTH=#MONTH#
		           AND EMP_ID=-1
	          ORDER BY DECP_ID DESC,EMP_NAME ASC
	         </isNotEmpty>
 	</select>
 	
 	<!-- 各区业绩报表的年份 -->
 	<select id="getYearAchievementReport" resultClass="java.lang.String">
 			 SELECT DISTINCT CONVERT(VARCHAR,YEAR) YEAR FROM T_GOAL_LINE WHERE STATUS=0 ORDER BY YEAR DESC
 	</select>
 	
 	<select id="getAchievementTotal" resultClass="java.util.HashMap">
 		<isEmpty property="MONTH">
			SELECT * FROM			(
			 			            SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'1' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE 
         <isNotEmpty property="YEAR">
       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
       	 </isNotEmpty>
       	 <isEmpty property="YEAR">
       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
       	 </isEmpty>
       	 <isNotEmpty property="DEPT">
             AND CMPY.DECP_ID=#DEPT#
         </isNotEmpty>
         AND TAA.EMPL_MONTH=1 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    
    UNION ALL
    
    SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'2' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE <isNotEmpty property="YEAR">
       		 	 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
	       	 </isNotEmpty>
	       	 <isEmpty property="YEAR">
	       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
	       	 </isEmpty>
	       	 <isNotEmpty property="DEPT">
             	 AND CMPY.DECP_ID=#DEPT#
         	 </isNotEmpty>
         AND TAA.EMPL_MONTH=2 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    
    UNION ALL
    
    SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'3' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE <isNotEmpty property="YEAR">
       		     TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
	       	 </isNotEmpty>
	       	 <isEmpty property="YEAR">
	       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
	       	 </isEmpty>
	       	 <isNotEmpty property="DEPT">
             	 AND CMPY.DECP_ID=#DEPT#
       		 </isNotEmpty>
         AND TAA.EMPL_MONTH=3 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    
    UNION ALL
    
    SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'4' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE 
		 <isNotEmpty property="YEAR">
       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
       	 </isNotEmpty>
       	 <isEmpty property="YEAR">
       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
       	 </isEmpty>
       	 <isNotEmpty property="DEPT">
             AND CMPY.DECP_ID=#DEPT#
         </isNotEmpty>
         AND TAA.EMPL_MONTH=4 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    
    UNION ALL
    
    SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'5' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE 
		 <isNotEmpty property="YEAR">
       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
       	 </isNotEmpty>
       	 <isEmpty property="YEAR">
       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
       	 </isEmpty>
       	 <isNotEmpty property="DEPT">
             AND CMPY.DECP_ID=#DEPT#
         </isNotEmpty>
         AND TAA.EMPL_MONTH=5 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    
    UNION ALL
    
    SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'6' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE 
		 <isNotEmpty property="YEAR">
       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
       	 </isNotEmpty>
       	 <isEmpty property="YEAR">
       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
       	 </isEmpty>
       	 <isNotEmpty property="DEPT">
             AND CMPY.DECP_ID=#DEPT#
         </isNotEmpty>
         AND TAA.EMPL_MONTH=6 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    
    UNION ALL
    
    SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'7' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE 
		 <isNotEmpty property="YEAR">
       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
       	 </isNotEmpty>
       	 <isEmpty property="YEAR">
       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
       	 </isEmpty>
       	 <isNotEmpty property="DEPT">
             AND CMPY.DECP_ID=#DEPT#
         </isNotEmpty>
         AND TAA.EMPL_MONTH=7 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    
    UNION ALL
    
    SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'8' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE 
		 <isNotEmpty property="YEAR">
       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
       	 </isNotEmpty>
       	 <isEmpty property="YEAR">
       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
       	 </isEmpty>
       	 <isNotEmpty property="DEPT">
             AND CMPY.DECP_ID=#DEPT#
         </isNotEmpty>
         AND TAA.EMPL_MONTH=8 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    
    UNION ALL
    
    SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'9' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE 
		 <isNotEmpty property="YEAR">
       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
       	 </isNotEmpty>
       	 <isEmpty property="YEAR">
       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
       	 </isEmpty>
       	 <isNotEmpty property="DEPT">
             AND CMPY.DECP_ID=#DEPT#
         </isNotEmpty>
         AND TAA.EMPL_MONTH=9 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    
    UNION ALL
    
    SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'10' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE 
		 <isNotEmpty property="YEAR">
       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
       	 </isNotEmpty>
       	 <isEmpty property="YEAR">
       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
       	 </isEmpty>
       	 <isNotEmpty property="DEPT">
             AND CMPY.DECP_ID=#DEPT#
         </isNotEmpty>
         AND TAA.EMPL_MONTH=10 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    
    UNION ALL
    
    SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'11' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE 
		 <isNotEmpty property="YEAR">
       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
       	 </isNotEmpty>
       	 <isEmpty property="YEAR">
       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
       	 </isEmpty>
       	 <isNotEmpty property="DEPT">
             AND CMPY.DECP_ID=#DEPT#
         </isNotEmpty>
         AND TAA.EMPL_MONTH=11 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    
    UNION ALL
    
    SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,'12' TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE 
		 <isNotEmpty property="YEAR">
       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
       	 </isNotEmpty>
       	 <isEmpty property="YEAR">
       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
       	 </isEmpty>
       	 <isNotEmpty property="DEPT">
             AND CMPY.DECP_ID=#DEPT#
         </isNotEmpty>
         AND TAA.EMPL_MONTH=12 and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
         AND CMPY.DECP_ID!=1 AND CMPY.DECP_ID!=18
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    ) O
    ORDER BY O.[ORDER]
    </isEmpty>
    <isNotEmpty property="MONTH">
    		SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,TAA.EMPL_MONTH,
             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,#MONTH# TARGET_MONTH,'0' MONTH_PAY_MONEY,CMPY.[ORDER] 
        FROM T_USER_ACHIEVEMENT TAA 
   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=<isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
         AND (T.JOB='1' OR T.JOB=#JOB#)
   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
       WHERE 
		 <isNotEmpty property="YEAR">
       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
       	 </isNotEmpty>
       	 <isEmpty property="YEAR">
       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
       	 </isEmpty>
       	 <isNotEmpty property="DEPT">
             AND CMPY.DECP_ID=#DEPT#
         </isNotEmpty>
         AND TAA.EMPL_MONTH=#MONTH# and TAA.STATUS=0
         AND DEPT.ID IS NOT NULL
    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN,CMPY.[ORDER]
    ORDER BY CMPY.[ORDER]
    </isNotEmpty>
 	</select>
 	
 	<select id="showDetailByDeptId" resultClass="java.util.HashMap">
		 			 SELECT CONVERT(VARCHAR,T.ID) EMPL_ID,T.NAME,
					  T2.DECP_ID,T2.DECP_NAME_CN, 
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=1 AND TAA.STATUS=0  )),0) MON1 ,
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=2 AND TAA.STATUS=0  )),0) MON2,
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=3 AND TAA.STATUS=0  )),0) MON3,
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=4 AND TAA.STATUS=0  )),0) MON4,
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=5 AND TAA.STATUS=0  )),0) MON5,
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=6 AND TAA.STATUS=0  )),0) MON6,
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=7 AND TAA.STATUS=0  )),0) MON7,
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=8 AND TAA.STATUS=0  )),0) MON8,
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=9 AND TAA.STATUS=0  )),0) MON9,
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=10 AND TAA.STATUS=0  )),0) MON10,
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=11 AND TAA.STATUS=0  )),0) MON11,
		      	ISNULL(CONVERT(decimal(18,1),(SELECT MAX(TAA.EMPL_ACHIEVEMENT)  FROM T_USER_ACHIEVEMENT  TAA   WHERE   TAA.EMPL_ID =  T.ID  AND TAA.EMPL_YEAR=#YEAR#  AND  TAA.EMPL_MONTH=12 AND TAA.STATUS=0  )),0) MON12,
				'0' ACHIEVEMENT1,'0' ACHIEVEMENT2,
				'0' ACHIEVEMENT3,'0' ACHIEVEMENT4,
				'0' ACHIEVEMENT5,'0' ACHIEVEMENT6,
				'0' ACHIEVEMENT7,'0' ACHIEVEMENT8,
				'0' ACHIEVEMENT9,'0' ACHIEVEMENT10,
				'0' ACHIEVEMENT11,'0' ACHIEVEMENT12
						FROM	T_DEPT_DEPARTMENT T1
		  	LEFT JOIN T_USER_USER T ON T.DEPT_ID = T1.ID
		  	LEFT JOIN T_DEPT_COMPANY T2 ON T2.DECP_ID = T1.DECP_ID AND T2.STATUS = 0
						WHERE (T.JOB = '1' OR T.JOB = #JOB# ) AND T1.STATUS = 0
						AND (T.STATUS = 0 or T.STATUS != 0 AND YEAR(T.MODIFY_DATE) = YEAR(GETDATE()))
		        AND T2.DECP_ID=#DEPT#
		        ORDER BY LEN(NAME)
 	</select>
 	
 	<select id="getDetailAchievement" resultClass="java.util.HashMap">
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'1' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=1)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=1)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME
                 
                 UNION ALL
                 
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'2' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=2)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=2)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME  
			                 
			                 UNION ALL
			                 
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'3' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=3)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=3)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME
			                 
			                 UNION ALL
			                 
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'4' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=4)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=4)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME
			                 
			                 UNION ALL
			                 
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'5' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=5)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=5)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME
			                 
			                 UNION ALL
			                 
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'6' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=6)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=6)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME
			                 
			                 UNION ALL
			                 
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'7' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=7)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=7)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME
			                 
			                 UNION ALL
			                 
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'8' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=8)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=8)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME
			                 
			                 UNION ALL
			                 
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'9' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=9)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=9)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME
			                 
			                 UNION ALL
			                 
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'10' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=10)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=10)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME
			                 
			                 UNION ALL
			                 
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'11' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=11)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=11)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME
			                 
			                 UNION ALL
			                 
 				SELECT TUU.ID EMP_ID,TUU.NAME EMP_NAME,TDC.DECP_ID,TDC.DECP_NAME_CN DECP_NAME,SUM(TSPL.PAY_MONEY/1000) MONTH_PAY_MONEY,'12' MONTH
                  FROM T_SUPL_PLAYDETIL TSPL 
             LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
             LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
             LEFT JOIN T_USER_USER TUU ON TPC.ORG_SENSOR_ID=TUU.ID
                 WHERE TSPL.STATUS=0
                   AND TSPL.BACKSTATE=0
                   AND TSPL.STATE=3
                   AND TDC.DECP_ID=#DEPT#
                   AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN 
                   (SELECT BEGINTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=12)
                   AND
                   (SELECT ENDTIME FROM T_REPORT_DATE WHERE STATUS=0 AND YEAR=#YEAR# AND MONTH=12)
              GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TUU.ID,TUU.NAME
 	</select>
 	
 	<select id="getTotalTarget" resultClass="java.util.HashMap">
 			SELECT SUM(O.EMPL_ACHIEVEMENT) TOTAL_ACHIEVEMENT,O.DECP_ID FROM
				(
				SELECT SUM(TAA.EMPL_ACHIEVEMENT) EMPL_ACHIEVEMENT,
				             DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN 
				        FROM T_USER_ACHIEVEMENT TAA 
				   LEFT JOIN T_USER_USER T ON TAA.EMPL_ID=T.ID AND (T.STATUS=0 OR T.STATUS!=0 AND YEAR(T.MODIFY_DATE)=
				   <isEmpty property="YEAR">YEAR(GETDATE())</isEmpty><isNotEmpty property="YEAR">#YEAR#</isNotEmpty>)
				         AND T.JOB='1' <!-- 1意思指业务员 -->
				   LEFT JOIN T_DEPT_DEPARTMENT DEPT ON DEPT.ID=T.DEPT_ID 
				   LEFT JOIN T_DEPT_COMPANY CMPY ON DEPT.DECP_ID=CMPY.DECP_ID AND CMPY.STATUS=0
				       WHERE 
				         <isNotEmpty property="YEAR">
				       		 TAA.EMPL_YEAR=CONVERT(VARCHAR,#YEAR#)
				       	 </isNotEmpty>
				       	 <isEmpty property="YEAR">
				       	     TAA.EMPL_YEAR=CONVERT(VARCHAR,YEAR(GETDATE()))
				       	 </isEmpty>
				       	 <isNotEmpty property="DEPT">
				             AND CMPY.DECP_ID=#DEPT#
				         </isNotEmpty>
				         <isNotEmpty property="MONTH">
				         	 AND TAA.EMPL_MONTH=#MONTH#
				         </isNotEmpty>
				         AND TAA.STATUS=0
				         AND DEPT.ID IS NOT NULL
				         AND CMPY.DECP_ID!=1
				         AND CMPY.DECP_ID!=18
				    GROUP BY TAA.EMPL_MONTH,DEPT.ID,CMPY.DECP_ID,CMPY.DECP_NAME_CN
				    ) O
				    GROUP BY O.DECP_ID
 	</select>
 	
 	<select id="getTotalAchievement" resultClass="java.util.HashMap">
 			SELECT SUM(O.MONTH_PAY_MONEY) TOTAL_PAY_MONEY,O.DECP_ID FROM
              (
              SELECT  DECP_ID,DECP_NAME,
			               MONTH_PAY_MONEY/1000 MONTH_PAY_MONEY
		      		  FROM T_REPORT_BONUS
			         WHERE 
			         	<isEmpty property="YEAR">
			               BONUS_YEAR=YEAR(GETDATE())
			            </isEmpty>
			            <isNotEmpty property="YEAR">
		            	   BONUS_YEAR=#YEAR#
			            </isNotEmpty>
			            <isNotEmpty property="DEPT">
		           		   AND DECP_ID=#DEPT#
			            </isNotEmpty>
			            <isNotEmpty property="MONTH">
			               AND BONUS_MONTH=#MONTH#
			            </isNotEmpty>
			           	   AND EMP_ID=-1
			           	   AND DECP_ID!=1
			           	   AND DECP_ID!=18
               ) O
               GROUP BY O.DECP_ID
 	</select>
 	
 	
 	<!-- 日业绩报表 -->
 	<select id="getDailyAchievement" resultClass="java.util.HashMap">
 				<!-- 
 			        SELECT SUM(PAY.PAY_MONEY)/1000 PAY_MONEY,CONVERT(VARCHAR,PAY.PAY_DATE,23) PAY_DATE,MONTH(GETDATE()) [MONTH]
			          FROM T_SUPL_PLAYDETIL PAY
				   LEFT JOIN T_PRJT_CREDIT PC ON PAY.CREDIT_ID = PC.ID AND PC.STATUS = 0
				   LEFT JOIN T_RENT_CONTRACT RC ON RC.PRCD_ID = PC.ID AND RC.STATUS = 0
						   WHERE MONTH(PAY.PAY_DATE) = MONTH(GETDATE()) 
						     AND PAY.STATE = 3 AND PAY.BACKSTATE = 0 AND PAY.STATUS = 0
			      GROUP BY CONVERT(VARCHAR,PAY.PAY_DATE,23)
			      
			      UNION ALL
			      
			        SELECT SUM(PAY.PAY_MONEY)/1000 PAY_MONEY,CONVERT(VARCHAR,PAY.PAY_DATE,23) PAY_DATE,MONTH(GETDATE())-1 [MONTH]
			          FROM T_SUPL_PLAYDETIL PAY
				   LEFT JOIN T_PRJT_CREDIT PC ON PAY.CREDIT_ID = PC.ID AND PC.STATUS = 0
				   LEFT JOIN T_RENT_CONTRACT RC ON RC.PRCD_ID = PC.ID AND RC.STATUS = 0
						   WHERE MONTH(PAY.PAY_DATE) = MONTH(GETDATE())-1 
						     AND PAY.STATE = 3 AND PAY.BACKSTATE = 0 AND PAY.STATUS = 0
			      GROUP BY CONVERT(VARCHAR,PAY.PAY_DATE,23)
					 
			     UNION ALL
			      
			        SELECT SUM(PAY.PAY_MONEY)/1000 PAY_MONEY,CONVERT(VARCHAR,PAY.PAY_DATE,23) PAY_DATE,MONTH(GETDATE())-2 [MONTH]
			          FROM T_SUPL_PLAYDETIL PAY
				   LEFT JOIN T_PRJT_CREDIT PC ON PAY.CREDIT_ID = PC.ID AND PC.STATUS = 0
				   LEFT JOIN T_RENT_CONTRACT RC ON RC.PRCD_ID = PC.ID AND RC.STATUS = 0
						   WHERE MONTH(PAY.PAY_DATE) = MONTH(GETDATE())-2 
						     AND PAY.STATE = 3 AND PAY.BACKSTATE = 0 AND PAY.STATUS = 0
			      GROUP BY CONVERT(VARCHAR,PAY.PAY_DATE,23)
			      ORDER BY PAY_DATE
			       -->
			       SELECT CONVERT(DATE,GETDATE()) TODAY,DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())-1, 0)))) LAST_DAY,MONTH(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),0),23)) [MONTH],O1.PAY_MONEY_1,O1.PAY_COUNT_1,O1.PAY_DATE_1,CASE WHEN O1.PAY_DATE_1>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_1,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2 PAY_MONEY_2,O1.PAY_DATE_2,CASE WHEN O1.PAY_DATE_2>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_2,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3 PAY_MONEY_3,O1.PAY_DATE_3,CASE WHEN O1.PAY_DATE_3>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_3,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4 PAY_MONEY_4,O1.PAY_DATE_4,CASE WHEN O1.PAY_DATE_4>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_4,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5 PAY_MONEY_5,O1.PAY_DATE_5,CASE WHEN O1.PAY_DATE_5>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_5,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6 PAY_MONEY_6,O1.PAY_DATE_6,CASE WHEN O1.PAY_DATE_6>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_6,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7 PAY_MONEY_7,O1.PAY_DATE_7,CASE WHEN O1.PAY_DATE_7>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_7,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8 PAY_MONEY_8,O1.PAY_DATE_8,CASE WHEN O1.PAY_DATE_8>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_8,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9 PAY_MONEY_9,O1.PAY_DATE_9,CASE WHEN O1.PAY_DATE_9>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_9,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10 PAY_MONEY_10,O1.PAY_DATE_10,CASE WHEN O1.PAY_DATE_10>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_10,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11 PAY_MONEY_11,O1.PAY_DATE_11,CASE WHEN O1.PAY_DATE_11>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_11,       
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12 PAY_MONEY_12,O1.PAY_DATE_12,CASE WHEN O1.PAY_DATE_12>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_12,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13 PAY_MONEY_13,O1.PAY_DATE_13,CASE WHEN O1.PAY_DATE_13>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_13,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14 PAY_MONEY_14,O1.PAY_DATE_14,CASE WHEN O1.PAY_DATE_14>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_14,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15 PAY_MONEY_15,O1.PAY_DATE_15,CASE WHEN O1.PAY_DATE_15>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_15,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16 PAY_MONEY_16,O1.PAY_DATE_16,CASE WHEN O1.PAY_DATE_16>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_16,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17 PAY_MONEY_17,O1.PAY_DATE_17,CASE WHEN O1.PAY_DATE_17>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_17,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18 PAY_MONEY_18,O1.PAY_DATE_18,CASE WHEN O1.PAY_DATE_18>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_18,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19 PAY_MONEY_19,O1.PAY_DATE_19,CASE WHEN O1.PAY_DATE_19>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_19,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20 PAY_MONEY_20,O1.PAY_DATE_20,CASE WHEN O1.PAY_DATE_20>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_20,       
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21 PAY_MONEY_21,O1.PAY_DATE_21,CASE WHEN O1.PAY_DATE_21>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_21,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22 PAY_MONEY_22,O1.PAY_DATE_22,CASE WHEN O1.PAY_DATE_22>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_22,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23 PAY_MONEY_23,O1.PAY_DATE_23,CASE WHEN O1.PAY_DATE_23>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_23,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24 PAY_MONEY_24,O1.PAY_DATE_24,CASE WHEN O1.PAY_DATE_24>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_24,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25 PAY_MONEY_25,O1.PAY_DATE_25,CASE WHEN O1.PAY_DATE_25>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_25,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26 PAY_MONEY_26,O1.PAY_DATE_26,CASE WHEN O1.PAY_DATE_26>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_26,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27 PAY_MONEY_27,O1.PAY_DATE_27,CASE WHEN O1.PAY_DATE_27>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_27,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28 PAY_MONEY_28,O1.PAY_DATE_28,CASE WHEN O1.PAY_DATE_28>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_28,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29 PAY_MONEY_29,O1.PAY_DATE_29,CASE WHEN O1.PAY_DATE_29&lt;CONVERT(DATE,GETDATE()) AND DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())-1, 0))))>=29 THEN 'Y' ELSE 'N' END DISPLAY_29,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30 PAY_MONEY_30,O1.PAY_DATE_30,CASE WHEN O1.PAY_DATE_30&lt;CONVERT(DATE,GETDATE()) AND DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())-1, 0))))>=30 THEN 'Y' ELSE 'N' END DISPLAY_30,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30+PAY_MONEY_31 PAY_MONEY_31,O1.PAY_DATE_31,CASE WHEN O1.PAY_DATE_31&lt;CONVERT(DATE,GETDATE()) AND DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())-1, 0))))=31 THEN 'Y' ELSE 'N' END DISPLAY_31,
       
       CASE WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())-1, 0))))=28
            THEN O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28
            WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())-1, 0))))=29
            THEN O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29
            WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())-1, 0))))=30
            THEN O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30
            ELSE O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30+PAY_MONEY_31
            END
            PAY_TOTAL,
            O1.PAY_COUNT_1+O1.PAY_COUNT_2 PAY_COUNT_2,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3 PAY_COUNT_3,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4 PAY_COUNT_4,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5 PAY_COUNT_5,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6 PAY_COUNT_6,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7 PAY_COUNT_7,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8 PAY_COUNT_8,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9 PAY_COUNT_9,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10 PAY_COUNT_10,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11 PAY_COUNT_11,      
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12 PAY_COUNT_12,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13 PAY_COUNT_13,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14 PAY_COUNT_14,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15 PAY_COUNT_15,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16 PAY_COUNT_16,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17 PAY_COUNT_17,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18 PAY_COUNT_18,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19 PAY_COUNT_19,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20 PAY_COUNT_20,       
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21 PAY_COUNT_21,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22 PAY_COUNT_22,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23 PAY_COUNT_23,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24 PAY_COUNT_24,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25 PAY_COUNT_25,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26 PAY_COUNT_26,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27 PAY_COUNT_27,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28 PAY_COUNT_28,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29 PAY_COUNT_29,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30 PAY_COUNT_30,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30+PAY_COUNT_31 PAY_COUNT_31,
       CASE WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())-1, 0))))=29
            THEN O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29
            WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())-1, 0))))=30
            THEN O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30
            ELSE O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30+PAY_COUNT_31
            END
            PAY_COUNT_TOTAL
       FROM
(
SELECT SUM(O.PAY_MONEY_1) PAY_MONEY_1,SUM(O.PAY_COUNT_1) PAY_COUNT_1,PAY_DATE_1,SUM(O.PAY_MONEY_2) PAY_MONEY_2,SUM(O.PAY_COUNT_2) PAY_COUNT_2,PAY_DATE_2,SUM(O.PAY_MONEY_3) PAY_MONEY_3,SUM(O.PAY_COUNT_3) PAY_COUNT_3,PAY_DATE_3,
       SUM(O.PAY_MONEY_4) PAY_MONEY_4,SUM(O.PAY_COUNT_4) PAY_COUNT_4,PAY_DATE_4,SUM(O.PAY_MONEY_5) PAY_MONEY_5,SUM(O.PAY_COUNT_5) PAY_COUNT_5,PAY_DATE_5,SUM(O.PAY_MONEY_6) PAY_MONEY_6,SUM(O.PAY_COUNT_6) PAY_COUNT_6,PAY_DATE_6,
       SUM(O.PAY_MONEY_7) PAY_MONEY_7,SUM(O.PAY_COUNT_7) PAY_COUNT_7,PAY_DATE_7,SUM(O.PAY_MONEY_8) PAY_MONEY_8,SUM(O.PAY_COUNT_8) PAY_COUNT_8,PAY_DATE_8,SUM(O.PAY_MONEY_9) PAY_MONEY_9,SUM(O.PAY_COUNT_9) PAY_COUNT_9,PAY_DATE_9,
       SUM(O.PAY_MONEY_10) PAY_MONEY_10,SUM(O.PAY_COUNT_10) PAY_COUNT_10,PAY_DATE_10,SUM(O.PAY_MONEY_11) PAY_MONEY_11,SUM(O.PAY_COUNT_11) PAY_COUNT_11,PAY_DATE_11,SUM(O.PAY_MONEY_12) PAY_MONEY_12,SUM(O.PAY_COUNT_12) PAY_COUNT_12,PAY_DATE_12,
       SUM(O.PAY_MONEY_13) PAY_MONEY_13,SUM(O.PAY_COUNT_13) PAY_COUNT_13,PAY_DATE_13,SUM(O.PAY_MONEY_14) PAY_MONEY_14,SUM(O.PAY_COUNT_14) PAY_COUNT_14,PAY_DATE_14,SUM(O.PAY_MONEY_15) PAY_MONEY_15,SUM(O.PAY_COUNT_15) PAY_COUNT_15,PAY_DATE_15,
       SUM(O.PAY_MONEY_16) PAY_MONEY_16,SUM(O.PAY_COUNT_16) PAY_COUNT_16,PAY_DATE_16,SUM(O.PAY_MONEY_17) PAY_MONEY_17,SUM(O.PAY_COUNT_17) PAY_COUNT_17,PAY_DATE_17,SUM(O.PAY_MONEY_18) PAY_MONEY_18,SUM(O.PAY_COUNT_18) PAY_COUNT_18,PAY_DATE_18,
       SUM(O.PAY_MONEY_19) PAY_MONEY_19,SUM(O.PAY_COUNT_19) PAY_COUNT_19,PAY_DATE_19,SUM(O.PAY_MONEY_20) PAY_MONEY_20,SUM(O.PAY_COUNT_20) PAY_COUNT_20,PAY_DATE_20,SUM(O.PAY_MONEY_21) PAY_MONEY_21,SUM(O.PAY_COUNT_21) PAY_COUNT_21,PAY_DATE_21,
       SUM(O.PAY_MONEY_22) PAY_MONEY_22,SUM(O.PAY_COUNT_22) PAY_COUNT_22,PAY_DATE_22,SUM(O.PAY_MONEY_23) PAY_MONEY_23,SUM(O.PAY_COUNT_23) PAY_COUNT_23,PAY_DATE_23,SUM(O.PAY_MONEY_24) PAY_MONEY_24,SUM(O.PAY_COUNT_24) PAY_COUNT_24,PAY_DATE_24,
       SUM(O.PAY_MONEY_25) PAY_MONEY_25,SUM(O.PAY_COUNT_25) PAY_COUNT_25,PAY_DATE_25,SUM(O.PAY_MONEY_26) PAY_MONEY_26,SUM(O.PAY_COUNT_26) PAY_COUNT_26,PAY_DATE_26,SUM(O.PAY_MONEY_27) PAY_MONEY_27,SUM(O.PAY_COUNT_27) PAY_COUNT_27,PAY_DATE_27,
       SUM(O.PAY_MONEY_28) PAY_MONEY_28,SUM(O.PAY_COUNT_28) PAY_COUNT_28,PAY_DATE_28,SUM(O.PAY_MONEY_29) PAY_MONEY_29,SUM(O.PAY_COUNT_29) PAY_COUNT_29,PAY_DATE_29,SUM(O.PAY_MONEY_30) PAY_MONEY_30,SUM(O.PAY_COUNT_30) PAY_COUNT_30,PAY_DATE_30,
       SUM(O.PAY_MONEY_31) PAY_MONEY_31,SUM(O.PAY_COUNT_31) PAY_COUNT_31,PAY_DATE_31 FROM
(
SELECT DISTINCT
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),0),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_1,           
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),0),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),0),23))
           END PAY_DATE_1,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),0),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_1,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),1),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_2,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),1),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),1),23))
           END PAY_DATE_2,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),1),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_2,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),2),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_3,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),2),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),2),23))
           END PAY_DATE_3,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),2),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_3,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),3),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_4,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),3),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),3),23))
           END PAY_DATE_4,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),3),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_4,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),4),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_5,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),4),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),4),23))
           END PAY_DATE_5,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),4),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_5,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),5),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_6,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),5),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),5),23))
           END PAY_DATE_6,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),5),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_6,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),6),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_7,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),6),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),6),23))
           END PAY_DATE_7,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),6),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_7,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),7),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_8,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),7),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),7),23))
           END PAY_DATE_8,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),7),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_8,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),8),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_9,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),8),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),8),23))
           END PAY_DATE_9,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),8),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_9,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),9),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_10,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),9),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),9),23))
           END PAY_DATE_10,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),9),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_10,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),10),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_11,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),10),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),10),23))
           END PAY_DATE_11,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),10),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_11,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),11),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_12,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),11),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),11),23))
           END PAY_DATE_12,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),11),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_12,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),12),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_13,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),12),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),12),23))
           END PAY_DATE_13,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),12),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_13,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),13),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_14,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),13),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),13),23))
           END PAY_DATE_14,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),13),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_14,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),14),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_15,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),14),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),14),23))
           END PAY_DATE_15,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),14),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_15,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),15),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_16,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),15),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),15),23))
           END PAY_DATE_16,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),15),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_16,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),16),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_17,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),16),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),16),23))
           END PAY_DATE_17,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),16),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_17,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),17),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_18,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),17),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),17),23))
           END PAY_DATE_18,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),17),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_18,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),18),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_19,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),18),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),18),23))
           END PAY_DATE_19,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),18),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_19,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),19),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_20,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),19),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),19),23))
           END PAY_DATE_20,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),19),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_20,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),20),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_21,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),20),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),20),23))
           END PAY_DATE_21,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),20),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_21,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),21),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_22,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),21),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),21),23))
           END PAY_DATE_22,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),21),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_22,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),22),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_23,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),22),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),22),23))
           END PAY_DATE_23,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),22),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_23,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),23),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_24,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),23),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),23),23))
           END PAY_DATE_24,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),23),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_24,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),24),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_25,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),24),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),24),23))
           END PAY_DATE_25,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),24),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_25,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),25),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_26,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),25),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),25),23))
           END PAY_DATE_26,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),25),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_26,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),26),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_27,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),26),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),26),23))
           END PAY_DATE_27,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),26),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_27,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),27),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_28,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),27),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),27),23))
           END PAY_DATE_28,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),27),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_28,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),28),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_29,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),28),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),28),23))
           END PAY_DATE_29,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),28),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_29,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),29),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_30,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),29),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),29),23))
           END PAY_DATE_30,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),29),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_30,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),30),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_31,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),30),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),30),23))
           END PAY_DATE_31,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),30),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_31
			          FROM T_SUPL_PLAYDETIL PAY
				   LEFT JOIN T_PRJT_CREDIT PC ON PAY.CREDIT_ID = PC.ID AND PC.STATUS = 0
				   LEFT JOIN T_RENT_CONTRACT RC ON RC.PRCD_ID = PC.ID AND RC.STATUS = 0
						   WHERE MONTH(PAY.PAY_DATE) = MONTH(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),0),23))
						     AND YEAR(PAY.PAY_DATE) = YEAR(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),0),23))
						     AND PAY.STATE = 3 AND PAY.BACKSTATE = 0 AND PAY.STATUS = 0
			      GROUP BY CONVERT(VARCHAR,PAY.PAY_DATE,23)
            ) O
            GROUP BY PAY_DATE_1,PAY_DATE_2,PAY_DATE_3,PAY_DATE_4,PAY_DATE_5,PAY_DATE_6,PAY_DATE_7,PAY_DATE_8,PAY_DATE_9,PAY_DATE_10,
                     PAY_DATE_11,PAY_DATE_12,PAY_DATE_13,PAY_DATE_14,PAY_DATE_15,PAY_DATE_16,PAY_DATE_17,PAY_DATE_18,PAY_DATE_19,PAY_DATE_20,
                     PAY_DATE_21,PAY_DATE_22,PAY_DATE_23,PAY_DATE_24,PAY_DATE_25,PAY_DATE_26,PAY_DATE_27,PAY_DATE_28,PAY_DATE_29,PAY_DATE_30,
                     PAY_DATE_31
            ) O1
			  
			  UNION ALL
			  
			 SELECT CONVERT(DATE,GETDATE()) TODAY,DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE()), 0)))) LAST_DAY,MONTH(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),0),23)) [MONTH],O1.PAY_MONEY_1,O1.PAY_COUNT_1,O1.PAY_DATE_1,CASE WHEN O1.PAY_DATE_1>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_1,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2 PAY_MONEY_2,O1.PAY_DATE_2,CASE WHEN O1.PAY_DATE_2>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_2,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3 PAY_MONEY_3,O1.PAY_DATE_3,CASE WHEN O1.PAY_DATE_3>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_3,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4 PAY_MONEY_4,O1.PAY_DATE_4,CASE WHEN O1.PAY_DATE_4>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_4,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5 PAY_MONEY_5,O1.PAY_DATE_5,CASE WHEN O1.PAY_DATE_5>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_5,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6 PAY_MONEY_6,O1.PAY_DATE_6,CASE WHEN O1.PAY_DATE_6>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_6,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7 PAY_MONEY_7,O1.PAY_DATE_7,CASE WHEN O1.PAY_DATE_7>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_7,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8 PAY_MONEY_8,O1.PAY_DATE_8,CASE WHEN O1.PAY_DATE_8>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_8,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9 PAY_MONEY_9,O1.PAY_DATE_9,CASE WHEN O1.PAY_DATE_9>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_9,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10 PAY_MONEY_10,O1.PAY_DATE_10,CASE WHEN O1.PAY_DATE_10>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_10,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11 PAY_MONEY_11,O1.PAY_DATE_11,CASE WHEN O1.PAY_DATE_11>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_11,       
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12 PAY_MONEY_12,O1.PAY_DATE_12,CASE WHEN O1.PAY_DATE_12>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_12,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13 PAY_MONEY_13,O1.PAY_DATE_13,CASE WHEN O1.PAY_DATE_13>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_13,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14 PAY_MONEY_14,O1.PAY_DATE_14,CASE WHEN O1.PAY_DATE_14>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_14,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15 PAY_MONEY_15,O1.PAY_DATE_15,CASE WHEN O1.PAY_DATE_15>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_15,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16 PAY_MONEY_16,O1.PAY_DATE_16,CASE WHEN O1.PAY_DATE_16>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_16,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17 PAY_MONEY_17,O1.PAY_DATE_17,CASE WHEN O1.PAY_DATE_17>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_17,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18 PAY_MONEY_18,O1.PAY_DATE_18,CASE WHEN O1.PAY_DATE_18>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_18,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19 PAY_MONEY_19,O1.PAY_DATE_19,CASE WHEN O1.PAY_DATE_19>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_19,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20 PAY_MONEY_20,O1.PAY_DATE_20,CASE WHEN O1.PAY_DATE_20>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_20,       
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21 PAY_MONEY_21,O1.PAY_DATE_21,CASE WHEN O1.PAY_DATE_21>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_21,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22 PAY_MONEY_22,O1.PAY_DATE_22,CASE WHEN O1.PAY_DATE_22>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_22,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23 PAY_MONEY_23,O1.PAY_DATE_23,CASE WHEN O1.PAY_DATE_23>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_23,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24 PAY_MONEY_24,O1.PAY_DATE_24,CASE WHEN O1.PAY_DATE_24>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_24,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25 PAY_MONEY_25,O1.PAY_DATE_25,CASE WHEN O1.PAY_DATE_25>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_25,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26 PAY_MONEY_26,O1.PAY_DATE_26,CASE WHEN O1.PAY_DATE_26>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_26,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27 PAY_MONEY_27,O1.PAY_DATE_27,CASE WHEN O1.PAY_DATE_27>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_27,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28 PAY_MONEY_28,O1.PAY_DATE_28,CASE WHEN O1.PAY_DATE_28>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_28,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29 PAY_MONEY_29,O1.PAY_DATE_29,CASE WHEN O1.PAY_DATE_29&lt;CONVERT(DATE,GETDATE()) AND DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE()), 0))))>=29 THEN 'Y' ELSE 'N' END DISPLAY_29,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30 PAY_MONEY_30,O1.PAY_DATE_30,CASE WHEN O1.PAY_DATE_30&lt;CONVERT(DATE,GETDATE()) AND DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE()), 0))))>=30 THEN 'Y' ELSE 'N' END DISPLAY_30,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30+PAY_MONEY_31 PAY_MONEY_31,O1.PAY_DATE_31,CASE WHEN O1.PAY_DATE_31&lt;CONVERT(DATE,GETDATE()) AND DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE()), 0))))=31 THEN 'Y' ELSE 'N' END DISPLAY_31,
       
       CASE WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE()), 0))))=28
            THEN O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28
       		WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE()), 0))))=29
            THEN O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29
            WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE()), 0))))=30
            THEN O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30
            ELSE O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30+PAY_MONEY_31
            END
            PAY_TOTAL,
            O1.PAY_COUNT_1+O1.PAY_COUNT_2 PAY_COUNT_2,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3 PAY_COUNT_3,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4 PAY_COUNT_4,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5 PAY_COUNT_5,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6 PAY_COUNT_6,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7 PAY_COUNT_7,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8 PAY_COUNT_8,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9 PAY_COUNT_9,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10 PAY_COUNT_10,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11 PAY_COUNT_11,      
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12 PAY_COUNT_12,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13 PAY_COUNT_13,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14 PAY_COUNT_14,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15 PAY_COUNT_15,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16 PAY_COUNT_16,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17 PAY_COUNT_17,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18 PAY_COUNT_18,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19 PAY_COUNT_19,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20 PAY_COUNT_20,       
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21 PAY_COUNT_21,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22 PAY_COUNT_22,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23 PAY_COUNT_23,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24 PAY_COUNT_24,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25 PAY_COUNT_25,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26 PAY_COUNT_26,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27 PAY_COUNT_27,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28 PAY_COUNT_28,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29 PAY_COUNT_29,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30 PAY_COUNT_30,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30+PAY_COUNT_31 PAY_COUNT_31,
       CASE WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE()), 0))))=29
            THEN O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29
            WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE()), 0))))=30
            THEN O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30
            ELSE O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30+PAY_COUNT_31
            END
            PAY_COUNT_TOTAL
       FROM
(
SELECT SUM(O.PAY_MONEY_1) PAY_MONEY_1,SUM(O.PAY_COUNT_1) PAY_COUNT_1,PAY_DATE_1,SUM(O.PAY_MONEY_2) PAY_MONEY_2,SUM(O.PAY_COUNT_2) PAY_COUNT_2,PAY_DATE_2,SUM(O.PAY_MONEY_3) PAY_MONEY_3,SUM(O.PAY_COUNT_3) PAY_COUNT_3,PAY_DATE_3,
       SUM(O.PAY_MONEY_4) PAY_MONEY_4,SUM(O.PAY_COUNT_4) PAY_COUNT_4,PAY_DATE_4,SUM(O.PAY_MONEY_5) PAY_MONEY_5,SUM(O.PAY_COUNT_5) PAY_COUNT_5,PAY_DATE_5,SUM(O.PAY_MONEY_6) PAY_MONEY_6,SUM(O.PAY_COUNT_6) PAY_COUNT_6,PAY_DATE_6,
       SUM(O.PAY_MONEY_7) PAY_MONEY_7,SUM(O.PAY_COUNT_7) PAY_COUNT_7,PAY_DATE_7,SUM(O.PAY_MONEY_8) PAY_MONEY_8,SUM(O.PAY_COUNT_8) PAY_COUNT_8,PAY_DATE_8,SUM(O.PAY_MONEY_9) PAY_MONEY_9,SUM(O.PAY_COUNT_9) PAY_COUNT_9,PAY_DATE_9,
       SUM(O.PAY_MONEY_10) PAY_MONEY_10,SUM(O.PAY_COUNT_10) PAY_COUNT_10,PAY_DATE_10,SUM(O.PAY_MONEY_11) PAY_MONEY_11,SUM(O.PAY_COUNT_11) PAY_COUNT_11,PAY_DATE_11,SUM(O.PAY_MONEY_12) PAY_MONEY_12,SUM(O.PAY_COUNT_12) PAY_COUNT_12,PAY_DATE_12,
       SUM(O.PAY_MONEY_13) PAY_MONEY_13,SUM(O.PAY_COUNT_13) PAY_COUNT_13,PAY_DATE_13,SUM(O.PAY_MONEY_14) PAY_MONEY_14,SUM(O.PAY_COUNT_14) PAY_COUNT_14,PAY_DATE_14,SUM(O.PAY_MONEY_15) PAY_MONEY_15,SUM(O.PAY_COUNT_15) PAY_COUNT_15,PAY_DATE_15,
       SUM(O.PAY_MONEY_16) PAY_MONEY_16,SUM(O.PAY_COUNT_16) PAY_COUNT_16,PAY_DATE_16,SUM(O.PAY_MONEY_17) PAY_MONEY_17,SUM(O.PAY_COUNT_17) PAY_COUNT_17,PAY_DATE_17,SUM(O.PAY_MONEY_18) PAY_MONEY_18,SUM(O.PAY_COUNT_18) PAY_COUNT_18,PAY_DATE_18,
       SUM(O.PAY_MONEY_19) PAY_MONEY_19,SUM(O.PAY_COUNT_19) PAY_COUNT_19,PAY_DATE_19,SUM(O.PAY_MONEY_20) PAY_MONEY_20,SUM(O.PAY_COUNT_20) PAY_COUNT_20,PAY_DATE_20,SUM(O.PAY_MONEY_21) PAY_MONEY_21,SUM(O.PAY_COUNT_21) PAY_COUNT_21,PAY_DATE_21,
       SUM(O.PAY_MONEY_22) PAY_MONEY_22,SUM(O.PAY_COUNT_22) PAY_COUNT_22,PAY_DATE_22,SUM(O.PAY_MONEY_23) PAY_MONEY_23,SUM(O.PAY_COUNT_23) PAY_COUNT_23,PAY_DATE_23,SUM(O.PAY_MONEY_24) PAY_MONEY_24,SUM(O.PAY_COUNT_24) PAY_COUNT_24,PAY_DATE_24,
       SUM(O.PAY_MONEY_25) PAY_MONEY_25,SUM(O.PAY_COUNT_25) PAY_COUNT_25,PAY_DATE_25,SUM(O.PAY_MONEY_26) PAY_MONEY_26,SUM(O.PAY_COUNT_26) PAY_COUNT_26,PAY_DATE_26,SUM(O.PAY_MONEY_27) PAY_MONEY_27,SUM(O.PAY_COUNT_27) PAY_COUNT_27,PAY_DATE_27,
       SUM(O.PAY_MONEY_28) PAY_MONEY_28,SUM(O.PAY_COUNT_28) PAY_COUNT_28,PAY_DATE_28,SUM(O.PAY_MONEY_29) PAY_MONEY_29,SUM(O.PAY_COUNT_29) PAY_COUNT_29,PAY_DATE_29,SUM(O.PAY_MONEY_30) PAY_MONEY_30,SUM(O.PAY_COUNT_30) PAY_COUNT_30,PAY_DATE_30,
       SUM(O.PAY_MONEY_31) PAY_MONEY_31,SUM(O.PAY_COUNT_31) PAY_COUNT_31,PAY_DATE_31 FROM
(
SELECT DISTINCT
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),0),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_1,           
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),0),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),0),23))
           END PAY_DATE_1,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),0),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_1,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),1),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_2,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),1),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),1),23))
           END PAY_DATE_2,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),1),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_2,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),2),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_3,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),2),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),2),23))
           END PAY_DATE_3,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),2),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_3,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),3),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_4,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),3),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),3),23))
           END PAY_DATE_4,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),3),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_4,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),4),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_5,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),4),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),4),23))
           END PAY_DATE_5,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),4),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_5,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),5),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_6,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),5),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),5),23))
           END PAY_DATE_6,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),5),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_6,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),6),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_7,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),6),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),6),23))
           END PAY_DATE_7,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),6),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_7,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),7),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_8,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),7),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),7),23))
           END PAY_DATE_8,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),7),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_8,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),8),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_9,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),8),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),8),23))
           END PAY_DATE_9,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),8),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_9,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),9),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_10,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),9),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),9),23))
           END PAY_DATE_10,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),9),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_10,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),10),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_11,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),10),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),10),23))
           END PAY_DATE_11,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),10),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_11,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),11),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_12,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),11),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),11),23))
           END PAY_DATE_12,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),11),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_12,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),12),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_13,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),12),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),12),23))
           END PAY_DATE_13,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),12),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_13,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),13),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_14,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),13),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),13),23))
           END PAY_DATE_14,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),13),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_14,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),14),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_15,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),14),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),14),23))
           END PAY_DATE_15,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),14),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_15,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),15),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_16,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),15),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),15),23))
           END PAY_DATE_16,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),15),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_16,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),16),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_17,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),16),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),16),23))
           END PAY_DATE_17,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),16),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_17,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),17),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_18,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),17),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),17),23))
           END PAY_DATE_18,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),17),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_18,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),18),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_19,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),18),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),18),23))
           END PAY_DATE_19,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),18),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_19,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),19),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_20,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),19),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),19),23))
           END PAY_DATE_20,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),19),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_20,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),20),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_21,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),20),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),20),23))
           END PAY_DATE_21,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),20),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_21,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),21),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_22,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),21),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),21),23))
           END PAY_DATE_22,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),21),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_22,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),22),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_23,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),22),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),22),23))
           END PAY_DATE_23,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),22),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_23,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),23),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_24,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),23),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),23),23))
           END PAY_DATE_24,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),23),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_24,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),24),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_25,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),24),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),24),23))
           END PAY_DATE_25,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),24),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_25,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),25),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_26,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),25),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),25),23))
           END PAY_DATE_26,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),25),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_26,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),26),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_27,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),26),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),26),23))
           END PAY_DATE_27,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),26),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_27,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),27),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_28,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),27),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),27),23))
           END PAY_DATE_28,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),27),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_28,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),28),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_29,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),28),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),28),23))
           END PAY_DATE_29,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),28),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_29,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),29),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_30,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),29),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),29),23))
           END PAY_DATE_30,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),29),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_30,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),30),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_31,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),30),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),30),23))
           END PAY_DATE_31,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),30),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_31
			          FROM T_SUPL_PLAYDETIL PAY
				   LEFT JOIN T_PRJT_CREDIT PC ON PAY.CREDIT_ID = PC.ID AND PC.STATUS = 0
				   LEFT JOIN T_RENT_CONTRACT RC ON RC.PRCD_ID = PC.ID AND RC.STATUS = 0
						   WHERE MONTH(PAY.PAY_DATE) = MONTH(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),0),23))
						     AND YEAR(PAY.PAY_DATE) = YEAR(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),0),23))
						     AND PAY.STATE = 3 AND PAY.BACKSTATE = 0 AND PAY.STATUS = 0
			      GROUP BY CONVERT(VARCHAR,PAY.PAY_DATE,23)
            ) O
            GROUP BY PAY_DATE_1,PAY_DATE_2,PAY_DATE_3,PAY_DATE_4,PAY_DATE_5,PAY_DATE_6,PAY_DATE_7,PAY_DATE_8,PAY_DATE_9,PAY_DATE_10,
                     PAY_DATE_11,PAY_DATE_12,PAY_DATE_13,PAY_DATE_14,PAY_DATE_15,PAY_DATE_16,PAY_DATE_17,PAY_DATE_18,PAY_DATE_19,PAY_DATE_20,
                     PAY_DATE_21,PAY_DATE_22,PAY_DATE_23,PAY_DATE_24,PAY_DATE_25,PAY_DATE_26,PAY_DATE_27,PAY_DATE_28,PAY_DATE_29,PAY_DATE_30,
                     PAY_DATE_31
            ) O1 
            
            UNION ALL 
            
            SELECT CONVERT(DATE,GETDATE()) TODAY,DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())+1, 0)))) LAST_DAY,MONTH(GETDATE()) [MONTH],O1.PAY_MONEY_1,O1.PAY_COUNT_1,O1.PAY_DATE_1,CASE WHEN O1.PAY_DATE_1>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_1,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2 PAY_MONEY_2,O1.PAY_DATE_2,CASE WHEN O1.PAY_DATE_2>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_2,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3 PAY_MONEY_3,O1.PAY_DATE_3,CASE WHEN O1.PAY_DATE_3>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_3,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4 PAY_MONEY_4,O1.PAY_DATE_4,CASE WHEN O1.PAY_DATE_4>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_4,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5 PAY_MONEY_5,O1.PAY_DATE_5,CASE WHEN O1.PAY_DATE_5>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_5,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6 PAY_MONEY_6,O1.PAY_DATE_6,CASE WHEN O1.PAY_DATE_6>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_6,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7 PAY_MONEY_7,O1.PAY_DATE_7,CASE WHEN O1.PAY_DATE_7>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_7,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8 PAY_MONEY_8,O1.PAY_DATE_8,CASE WHEN O1.PAY_DATE_8>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_8,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9 PAY_MONEY_9,O1.PAY_DATE_9,CASE WHEN O1.PAY_DATE_9>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_9,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10 PAY_MONEY_10,O1.PAY_DATE_10,CASE WHEN O1.PAY_DATE_10>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_10,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11 PAY_MONEY_11,O1.PAY_DATE_11,CASE WHEN O1.PAY_DATE_11>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_11,       
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12 PAY_MONEY_12,O1.PAY_DATE_12,CASE WHEN O1.PAY_DATE_12>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_12,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13 PAY_MONEY_13,O1.PAY_DATE_13,CASE WHEN O1.PAY_DATE_13>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_13,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14 PAY_MONEY_14,O1.PAY_DATE_14,CASE WHEN O1.PAY_DATE_14>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_14,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15 PAY_MONEY_15,O1.PAY_DATE_15,CASE WHEN O1.PAY_DATE_15>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_15,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16 PAY_MONEY_16,O1.PAY_DATE_16,CASE WHEN O1.PAY_DATE_16>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_16,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17 PAY_MONEY_17,O1.PAY_DATE_17,CASE WHEN O1.PAY_DATE_17>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_17,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18 PAY_MONEY_18,O1.PAY_DATE_18,CASE WHEN O1.PAY_DATE_18>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_18,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19 PAY_MONEY_19,O1.PAY_DATE_19,CASE WHEN O1.PAY_DATE_19>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_19,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20 PAY_MONEY_20,O1.PAY_DATE_20,CASE WHEN O1.PAY_DATE_20>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_20,       
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21 PAY_MONEY_21,O1.PAY_DATE_21,CASE WHEN O1.PAY_DATE_21>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_21,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22 PAY_MONEY_22,O1.PAY_DATE_22,CASE WHEN O1.PAY_DATE_22>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_22,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23 PAY_MONEY_23,O1.PAY_DATE_23,CASE WHEN O1.PAY_DATE_23>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_23,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24 PAY_MONEY_24,O1.PAY_DATE_24,CASE WHEN O1.PAY_DATE_24>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_24,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25 PAY_MONEY_25,O1.PAY_DATE_25,CASE WHEN O1.PAY_DATE_25>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_25,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26 PAY_MONEY_26,O1.PAY_DATE_26,CASE WHEN O1.PAY_DATE_26>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_26,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27 PAY_MONEY_27,O1.PAY_DATE_27,CASE WHEN O1.PAY_DATE_27>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_27,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28 PAY_MONEY_28,O1.PAY_DATE_28,CASE WHEN O1.PAY_DATE_28>CONVERT(DATE,GETDATE()) THEN 'N' ELSE 'Y' END DISPLAY_28,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29 PAY_MONEY_29,O1.PAY_DATE_29,CASE WHEN O1.PAY_DATE_29&lt;=CONVERT(DATE,GETDATE()) AND DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())+1, 0))))>=29 THEN 'Y' ELSE 'N' END DISPLAY_29,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30 PAY_MONEY_30,O1.PAY_DATE_30,CASE WHEN O1.PAY_DATE_30&lt;=CONVERT(DATE,GETDATE()) AND DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())+1, 0))))>=30 THEN 'Y' ELSE 'N' END DISPLAY_30,
       O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30+PAY_MONEY_31 PAY_MONEY_31,O1.PAY_DATE_31,CASE WHEN O1.PAY_DATE_31&lt;=CONVERT(DATE,GETDATE()) AND DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())+1, 0))))=31 THEN 'Y' ELSE 'N' END DISPLAY_31,
       
       CASE WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())+1, 0))))=28
       		THEN O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28
       		WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())+1, 0))))=29
            THEN O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29
            WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())+1, 0))))=30
            THEN O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30
            ELSE O1.PAY_MONEY_1+O1.PAY_MONEY_2+PAY_MONEY_3+PAY_MONEY_4+PAY_MONEY_5+PAY_MONEY_6+PAY_MONEY_7+PAY_MONEY_8+PAY_MONEY_9+PAY_MONEY_10+PAY_MONEY_11+PAY_MONEY_12+PAY_MONEY_13+PAY_MONEY_14+PAY_MONEY_15+PAY_MONEY_16+PAY_MONEY_17+PAY_MONEY_18+PAY_MONEY_19+PAY_MONEY_20+PAY_MONEY_21+PAY_MONEY_22+PAY_MONEY_23+PAY_MONEY_24+PAY_MONEY_25+PAY_MONEY_26+PAY_MONEY_27+PAY_MONEY_28+PAY_MONEY_29+PAY_MONEY_30+PAY_MONEY_31
            END
            PAY_TOTAL,
            O1.PAY_COUNT_1+O1.PAY_COUNT_2 PAY_COUNT_2,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3 PAY_COUNT_3,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4 PAY_COUNT_4,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5 PAY_COUNT_5,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6 PAY_COUNT_6,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7 PAY_COUNT_7,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8 PAY_COUNT_8,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9 PAY_COUNT_9,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10 PAY_COUNT_10,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11 PAY_COUNT_11,      
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12 PAY_COUNT_12,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13 PAY_COUNT_13,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14 PAY_COUNT_14,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15 PAY_COUNT_15,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16 PAY_COUNT_16,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17 PAY_COUNT_17,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18 PAY_COUNT_18,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19 PAY_COUNT_19,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20 PAY_COUNT_20,       
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21 PAY_COUNT_21,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22 PAY_COUNT_22,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23 PAY_COUNT_23,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24 PAY_COUNT_24,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25 PAY_COUNT_25,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26 PAY_COUNT_26,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27 PAY_COUNT_27,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28 PAY_COUNT_28,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29 PAY_COUNT_29,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30 PAY_COUNT_30,
       O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30+PAY_COUNT_31 PAY_COUNT_31,
       CASE WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())+1, 0))))=29
            THEN O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29
            WHEN DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())+1, 0))))=30
            THEN O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30
            ELSE O1.PAY_COUNT_1+O1.PAY_COUNT_2+PAY_COUNT_3+PAY_COUNT_4+PAY_COUNT_5+PAY_COUNT_6+PAY_COUNT_7+PAY_COUNT_8+PAY_COUNT_9+PAY_COUNT_10+PAY_COUNT_11+PAY_COUNT_12+PAY_COUNT_13+PAY_COUNT_14+PAY_COUNT_15+PAY_COUNT_16+PAY_COUNT_17+PAY_COUNT_18+PAY_COUNT_19+PAY_COUNT_20+PAY_COUNT_21+PAY_COUNT_22+PAY_COUNT_23+PAY_COUNT_24+PAY_COUNT_25+PAY_COUNT_26+PAY_COUNT_27+PAY_COUNT_28+PAY_COUNT_29+PAY_COUNT_30+PAY_COUNT_31
            END
            PAY_COUNT_TOTAL
       FROM
(
SELECT SUM(O.PAY_MONEY_1) PAY_MONEY_1,SUM(O.PAY_COUNT_1) PAY_COUNT_1,PAY_DATE_1,SUM(O.PAY_MONEY_2) PAY_MONEY_2,SUM(O.PAY_COUNT_2) PAY_COUNT_2,PAY_DATE_2,SUM(O.PAY_MONEY_3) PAY_MONEY_3,SUM(O.PAY_COUNT_3) PAY_COUNT_3,PAY_DATE_3,
       SUM(O.PAY_MONEY_4) PAY_MONEY_4,SUM(O.PAY_COUNT_4) PAY_COUNT_4,PAY_DATE_4,SUM(O.PAY_MONEY_5) PAY_MONEY_5,SUM(O.PAY_COUNT_5) PAY_COUNT_5,PAY_DATE_5,SUM(O.PAY_MONEY_6) PAY_MONEY_6,SUM(O.PAY_COUNT_6) PAY_COUNT_6,PAY_DATE_6,
       SUM(O.PAY_MONEY_7) PAY_MONEY_7,SUM(O.PAY_COUNT_7) PAY_COUNT_7,PAY_DATE_7,SUM(O.PAY_MONEY_8) PAY_MONEY_8,SUM(O.PAY_COUNT_8) PAY_COUNT_8,PAY_DATE_8,SUM(O.PAY_MONEY_9) PAY_MONEY_9,SUM(O.PAY_COUNT_9) PAY_COUNT_9,PAY_DATE_9,
       SUM(O.PAY_MONEY_10) PAY_MONEY_10,SUM(O.PAY_COUNT_10) PAY_COUNT_10,PAY_DATE_10,SUM(O.PAY_MONEY_11) PAY_MONEY_11,SUM(O.PAY_COUNT_11) PAY_COUNT_11,PAY_DATE_11,SUM(O.PAY_MONEY_12) PAY_MONEY_12,SUM(O.PAY_COUNT_12) PAY_COUNT_12,PAY_DATE_12,
       SUM(O.PAY_MONEY_13) PAY_MONEY_13,SUM(O.PAY_COUNT_13) PAY_COUNT_13,PAY_DATE_13,SUM(O.PAY_MONEY_14) PAY_MONEY_14,SUM(O.PAY_COUNT_14) PAY_COUNT_14,PAY_DATE_14,SUM(O.PAY_MONEY_15) PAY_MONEY_15,SUM(O.PAY_COUNT_15) PAY_COUNT_15,PAY_DATE_15,
       SUM(O.PAY_MONEY_16) PAY_MONEY_16,SUM(O.PAY_COUNT_16) PAY_COUNT_16,PAY_DATE_16,SUM(O.PAY_MONEY_17) PAY_MONEY_17,SUM(O.PAY_COUNT_17) PAY_COUNT_17,PAY_DATE_17,SUM(O.PAY_MONEY_18) PAY_MONEY_18,SUM(O.PAY_COUNT_18) PAY_COUNT_18,PAY_DATE_18,
       SUM(O.PAY_MONEY_19) PAY_MONEY_19,SUM(O.PAY_COUNT_19) PAY_COUNT_19,PAY_DATE_19,SUM(O.PAY_MONEY_20) PAY_MONEY_20,SUM(O.PAY_COUNT_20) PAY_COUNT_20,PAY_DATE_20,SUM(O.PAY_MONEY_21) PAY_MONEY_21,SUM(O.PAY_COUNT_21) PAY_COUNT_21,PAY_DATE_21,
       SUM(O.PAY_MONEY_22) PAY_MONEY_22,SUM(O.PAY_COUNT_22) PAY_COUNT_22,PAY_DATE_22,SUM(O.PAY_MONEY_23) PAY_MONEY_23,SUM(O.PAY_COUNT_23) PAY_COUNT_23,PAY_DATE_23,SUM(O.PAY_MONEY_24) PAY_MONEY_24,SUM(O.PAY_COUNT_24) PAY_COUNT_24,PAY_DATE_24,
       SUM(O.PAY_MONEY_25) PAY_MONEY_25,SUM(O.PAY_COUNT_25) PAY_COUNT_25,PAY_DATE_25,SUM(O.PAY_MONEY_26) PAY_MONEY_26,SUM(O.PAY_COUNT_26) PAY_COUNT_26,PAY_DATE_26,SUM(O.PAY_MONEY_27) PAY_MONEY_27,SUM(O.PAY_COUNT_27) PAY_COUNT_27,PAY_DATE_27,
       SUM(O.PAY_MONEY_28) PAY_MONEY_28,SUM(O.PAY_COUNT_28) PAY_COUNT_28,PAY_DATE_28,SUM(O.PAY_MONEY_29) PAY_MONEY_29,SUM(O.PAY_COUNT_29) PAY_COUNT_29,PAY_DATE_29,SUM(O.PAY_MONEY_30) PAY_MONEY_30,SUM(O.PAY_COUNT_30) PAY_COUNT_30,PAY_DATE_30,
       SUM(O.PAY_MONEY_31) PAY_MONEY_31,SUM(O.PAY_COUNT_31) PAY_COUNT_31,PAY_DATE_31 FROM
(
SELECT DISTINCT
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),0),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_1,           
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),0),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),0),23))
           END PAY_DATE_1,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),0),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_1,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),1),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_2,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),1),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),1),23))
           END PAY_DATE_2,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),1),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_2,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),2),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_3,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),2),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),2),23))
           END PAY_DATE_3,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),2),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_3,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),3),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_4,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),3),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),3),23))
           END PAY_DATE_4,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),3),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_4,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),4),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_5,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),4),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),4),23))
           END PAY_DATE_5,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),4),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_5,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),5),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_6,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),5),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),5),23))
           END PAY_DATE_6,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),5),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_6,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),6),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_7,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),6),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),6),23))
           END PAY_DATE_7,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),6),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_7,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),7),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_8,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),7),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),7),23))
           END PAY_DATE_8,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),7),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_8,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),8),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_9,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),8),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),8),23))
           END PAY_DATE_9,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),8),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_9,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),9),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_10,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),9),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),9),23))
           END PAY_DATE_10,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),9),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_10,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),10),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_11,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),10),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),10),23))
           END PAY_DATE_11,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),10),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_11,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),11),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_12,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),11),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),11),23))
           END PAY_DATE_12,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),11),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_12,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),12),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_13,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),12),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),12),23))
           END PAY_DATE_13,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),12),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_13,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),13),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_14,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),13),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),13),23))
           END PAY_DATE_14,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),13),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_14,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),14),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_15,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),14),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),14),23))
           END PAY_DATE_15,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),14),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_15,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),15),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_16,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),15),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),15),23))
           END PAY_DATE_16,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),15),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_16,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),16),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_17,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),16),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),16),23))
           END PAY_DATE_17,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),16),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_17,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),17),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_18,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),17),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),17),23))
           END PAY_DATE_18,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),17),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_18,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),18),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_19,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),18),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),18),23))
           END PAY_DATE_19,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),18),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_19,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),19),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_20,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),19),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),19),23))
           END PAY_DATE_20,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),19),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_20,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),20),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_21,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),20),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),20),23))
           END PAY_DATE_21,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),20),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_21,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),21),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_22,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),21),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),21),23))
           END PAY_DATE_22,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),21),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_22,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),22),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_23,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),22),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),22),23))
           END PAY_DATE_23,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),22),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_23,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),23),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_24,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),23),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),23),23))
           END PAY_DATE_24,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),23),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_24,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),24),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_25,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),24),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),24),23))
           END PAY_DATE_25,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),24),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_25,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),25),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_26,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),25),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),25),23))
           END PAY_DATE_26,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),25),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_26,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),26),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_27,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),26),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),26),23))
           END PAY_DATE_27,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),26),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_27,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),27),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_28,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),27),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),27),23))
           END PAY_DATE_28,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),27),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_28,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),28),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_29,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),28),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),28),23))
           END PAY_DATE_29,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),28),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_29,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),29),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_30,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),29),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),29),23))
           END PAY_DATE_30,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),29),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_30,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),30),23))
                     THEN SUM(PAY.PAY_MONEY)/1000
                ELSE 0
           END PAY_MONEY_31,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),30),23))
                     THEN CONVERT(VARCHAR,PAY.PAY_DATE,23)
                ELSE (SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),30),23))
           END PAY_DATE_31,
           CASE WHEN CONVERT(VARCHAR,PAY.PAY_DATE,23)=(SELECT CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),30),23))
                     THEN COUNT(PAY.CREDIT_ID)
                ELSE 0
           END PAY_COUNT_31
			          FROM T_SUPL_PLAYDETIL PAY
				   LEFT JOIN T_PRJT_CREDIT PC ON PAY.CREDIT_ID = PC.ID AND PC.STATUS = 0
				   LEFT JOIN T_RENT_CONTRACT RC ON RC.PRCD_ID = PC.ID AND RC.STATUS = 0
						   WHERE MONTH(PAY.PAY_DATE) = MONTH(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-0,GETDATE())),0),23))
						     AND YEAR(PAY.PAY_DATE) = YEAR(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-0,GETDATE())),0),23))
						     AND PAY.STATE = 3 AND PAY.BACKSTATE = 0 AND PAY.STATUS = 0
			      GROUP BY CONVERT(VARCHAR,PAY.PAY_DATE,23)
            ) O
            GROUP BY PAY_DATE_1,PAY_DATE_2,PAY_DATE_3,PAY_DATE_4,PAY_DATE_5,PAY_DATE_6,PAY_DATE_7,PAY_DATE_8,PAY_DATE_9,PAY_DATE_10,
                     PAY_DATE_11,PAY_DATE_12,PAY_DATE_13,PAY_DATE_14,PAY_DATE_15,PAY_DATE_16,PAY_DATE_17,PAY_DATE_18,PAY_DATE_19,PAY_DATE_20,
                     PAY_DATE_21,PAY_DATE_22,PAY_DATE_23,PAY_DATE_24,PAY_DATE_25,PAY_DATE_26,PAY_DATE_27,PAY_DATE_28,PAY_DATE_29,PAY_DATE_30,
                     PAY_DATE_31
            ) O1  
            ORDER BY PAY_DATE_1 DESC
 	</select>
 	
 	<!-- 获得重复计算的件数 -->
 	<select id="getDailyCount" resultClass="java.util.HashMap">
 	<!-- 
 			SELECT COUNT(O.PAY_DATE) COUNT,O.PAY_DATE FROM 
			(
			SELECT CONVERT(VARCHAR,PAY_DATE,23) PAY_DATE 
						  FROM T_SUPL_PLAYDETIL 
						 WHERE STATUS=0 AND CREDIT_ID IN
						(
						      SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL WHERE STATUS=0 AND CREDIT_ID IN
						      (
						            SELECT DISTINCT PAY.CREDIT_ID
						                            FROM T_SUPL_PLAYDETIL PAY
						            				   LEFT JOIN T_PRJT_CREDIT PC ON PAY.CREDIT_ID = PC.ID AND PC.STATUS = 0
						            				   LEFT JOIN T_RENT_CONTRACT RC ON RC.PRCD_ID = PC.ID AND RC.STATUS = 0
						            						   WHERE PAY.STATE = 3 AND PAY.BACKSTATE = 0 AND PAY.STATUS = 0
						      )
						      GROUP BY CREDIT_ID
						      HAVING COUNT(CREDIT_ID)>1
						) AND MONTH(PAY_DATE)=MONTH(GETDATE())
						
						UNION ALL 
						
						SELECT CONVERT(VARCHAR,PAY_DATE,23) PAY_DATE 
						  FROM T_SUPL_PLAYDETIL 
						 WHERE STATUS=0 AND CREDIT_ID IN
						(
						      SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL WHERE STATUS=0 AND CREDIT_ID IN
						      (
						            SELECT DISTINCT PAY.CREDIT_ID
						                            FROM T_SUPL_PLAYDETIL PAY
						            				   LEFT JOIN T_PRJT_CREDIT PC ON PAY.CREDIT_ID = PC.ID AND PC.STATUS = 0
						            				   LEFT JOIN T_RENT_CONTRACT RC ON RC.PRCD_ID = PC.ID AND RC.STATUS = 0
						            						   WHERE PAY.STATE = 3 AND PAY.BACKSTATE = 0 AND PAY.STATUS = 0
						      )
						      GROUP BY CREDIT_ID
						      HAVING COUNT(CREDIT_ID)>1
						) AND MONTH(PAY_DATE)=MONTH(GETDATE())-1
						
						UNION ALL 
						
						SELECT CONVERT(VARCHAR,PAY_DATE,23) PAY_DATE 
						  FROM T_SUPL_PLAYDETIL 
						 WHERE STATUS=0 AND CREDIT_ID IN
						(
						      SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL WHERE STATUS=0 AND CREDIT_ID IN
						      (
						            SELECT DISTINCT PAY.CREDIT_ID
						                            FROM T_SUPL_PLAYDETIL PAY
						            				   LEFT JOIN T_PRJT_CREDIT PC ON PAY.CREDIT_ID = PC.ID AND PC.STATUS = 0
						            				   LEFT JOIN T_RENT_CONTRACT RC ON RC.PRCD_ID = PC.ID AND RC.STATUS = 0
						            						   WHERE PAY.STATE = 3 AND PAY.BACKSTATE = 0 AND PAY.STATUS = 0
						      )
						      GROUP BY CREDIT_ID
						      HAVING COUNT(CREDIT_ID)>1
						) AND MONTH(PAY_DATE)=MONTH(GETDATE())-2
			) O
      GROUP BY O.PAY_DATE
       --><!-- 当前月部分 -->
                 SELECT COUNT(1) PAY_COUNT,CONVERT(VARCHAR,O1.PAY_DATE,23) PAY_DATE,DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())+1, 0)))) DAY FROM
                 (
                 SELECT MIN(O.PAY_DATE) PAY_DATE FROM
                 (
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),0),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),0),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),1),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),1),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),2),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),2),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),3),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),3),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),4),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),4),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),5),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),5),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),6),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),6),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),7),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),7),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),8),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),8),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),9),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),9),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),10),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),10),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),11),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),11),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),12),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),12),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),13),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),13),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),14),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),14),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),15),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),15),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),16),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),16),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),17),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),17),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),18),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),18),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),19),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),19),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),20),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),20),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),21),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),21),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),22),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),22),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),23),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),23),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),24),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),24),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),25),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),25),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),26),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),26),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),27),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),27),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),28),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),28),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),29),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),29),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),30),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),30),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),31),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,0,GETDATE())),31),23)
                 )
                ) O        
                
                GROUP BY O.CREDIT_ID
                HAVING MONTH(MIN(O.PAY_DATE))=MONTH(GETDATE())
                
                ) O1
                GROUP BY O1.PAY_DATE
                
                UNION ALL
                <!-- 上个月部分 -->
                SELECT COUNT(1) PAY_COUNT,CONVERT(VARCHAR,O1.PAY_DATE,23) PAY_DATE,DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE()), 0)))) DAY FROM
                 (
                 SELECT MIN(O.PAY_DATE) PAY_DATE FROM
                 (
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),0),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),0),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),1),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),1),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),2),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),2),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),3),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),3),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),4),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),4),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),5),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),5),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),6),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),6),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),7),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),7),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),8),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),8),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),9),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),9),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),10),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),10),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),11),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),11),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),12),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),12),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),13),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),13),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),14),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),14),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),15),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),15),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),16),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),16),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),17),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),17),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),18),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),18),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),19),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),19),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),20),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),20),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),21),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),21),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),22),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),22),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),23),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),23),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),24),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),24),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),25),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),25),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),26),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),26),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),27),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),27),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),28),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),28),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),29),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),29),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),30),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),30),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),31),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),31),23)
                 )
                ) O        
                
                GROUP BY O.CREDIT_ID
                HAVING MONTH(MIN(O.PAY_DATE))=MONTH(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),0),23))
                   AND YEAR(MIN(O.PAY_DATE))=YEAR(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-1,GETDATE())),0),23))
                
                ) O1
                GROUP BY O1.PAY_DATE
                
                UNION ALL
                <!-- 2个月前部分 -->
                SELECT COUNT(1) PAY_COUNT,CONVERT(VARCHAR,O1.PAY_DATE,23) PAY_DATE,DAY(CONVERT(DATE,DATEADD(MS,-3,DATEADD(MM, DATEDIFF(M,0,GETDATE())-1, 0)))) DAY FROM
                 (
                 SELECT MIN(O.PAY_DATE) PAY_DATE FROM
                 (
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),0),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),0),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),1),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),1),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),2),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),2),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),3),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),3),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),4),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),4),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),5),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),5),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),6),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),6),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),7),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),7),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),8),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),8),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),9),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),9),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),10),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),10),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),11),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),11),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),12),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),12),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),13),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),13),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),14),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),14),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),15),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),15),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),16),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),16),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),17),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),17),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),18),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),18),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),19),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),19),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),20),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),20),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),21),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),21),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),22),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),22),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),23),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),23),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),24),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),24),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),25),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),25),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),26),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),26),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),27),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),27),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),28),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),28),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),29),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),29),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),30),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),30),23)
                 )
                 UNION
                 SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),31),23) DATE,CREDIT_ID,CONVERT(DATE,PAY_DATE,23) PAY_DATE FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND CREDIT_ID IN 
                 (
                  SELECT CREDIT_ID FROM T_SUPL_PLAYDETIL PAY WHERE STATUS=0 AND
                 CONVERT(DATE,PAY.PAY_DATE,23)=CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),31),23)
                 )
                ) O        
                
                GROUP BY O.CREDIT_ID
                HAVING MONTH(MIN(O.PAY_DATE))=MONTH(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),0),23))
                   AND YEAR(MIN(O.PAY_DATE))=YEAR(CONVERT(VARCHAR,DATEADD(MM,DATEDIFF(MM,0,DATEADD(MONTH,-2,GETDATE())),0),23))
                
                ) O1
                GROUP BY O1.PAY_DATE
                ORDER BY CONVERT(VARCHAR,O1.PAY_DATE,23)
 	</select>
 	
 	<!-- 各区同期比,获得当前区间的工作天数 -->
 	<select id="getCountWorkDayOfCurrentMonth" resultClass="java.lang.Integer">
 			SELECT COUNT(1) WORK_DAY
		      FROM T_DAY_TYPE 
		     WHERE 
		     <isEmpty property="DATE">
		     	   YEAR=YEAR(GETDATE()) 
		       AND DATE BETWEEN CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,GETDATE()),0),23) AND CONVERT(DATE,GETDATE(),23)
	         </isEmpty>
	         <isNotEmpty property="DATE">
	         	   YEAR=YEAR(#DATE#) 
		       AND DATE BETWEEN CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,#DATE#),0),23) AND CONVERT(DATE,#DATE#,23)
	         </isNotEmpty>
		       AND DAY_TYPE='WD'
 	</select>
 	<select id="getCountWorkDayOfLastMonth" resultClass="java.lang.Integer">
 			SELECT COUNT(1) WORK_DAY
		      FROM T_DAY_TYPE 
		     WHERE DATE BETWEEN CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,#LAST_BEGIN_DATE#),0),23) AND CONVERT(DATE,#LAST_END_DATE#,23)
		       AND DAY_TYPE='WD'
 	</select>
 	
 	<select id="getLastMonthWorkDay" resultClass="java.util.HashMap">
 			SELECT YEAR,CONVERT(VARCHAR,DATE) [DATE],DAY_TYPE,
 			<isEmpty property="DATE"> 
 			       CONVERT(DATE,DATEADD(DD,-DAY(DATEADD(MONTH,-1,GETDATE()))+1,DATEADD(MONTH,-1,GETDATE())),23) LAST_MONTH_BEGIN_DATE,
 				   CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,GETDATE()),0),23) BEGIN_DATE,CONVERT(DATE,GETDATE(),23) END_DATE
		    </isEmpty>
		    <isNotEmpty property="DATE">
		    	   CONVERT(DATE,DATEADD(DD,-DAY(DATEADD(MONTH,-1,#DATE#))+1,DATEADD(MONTH,-1,#DATE#)),23) LAST_MONTH_BEGIN_DATE,
	    		   CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,#DATE#),0),23) BEGIN_DATE,CONVERT(DATE,#DATE#,23) END_DATE
		    </isNotEmpty> 
		      FROM T_DAY_TYPE
		     WHERE 
	         <isEmpty property="DATE">
		           DATE BETWEEN CONVERT(DATE,DATEADD(DD,-DAY(DATEADD(MONTH,-1,GETDATE()))+1,DATEADD(MONTH,-1,GETDATE())),23)
		                    AND CONVERT(DATE,DATEADD(DD,-DAY(GETDATE()),GETDATE()),23)
		       <!-- AND YEAR=YEAR(GETDATE()) -->
	         </isEmpty>
	         <isNotEmpty property="DATE">
	         	   DATE BETWEEN CONVERT(DATE,DATEADD(DD,-DAY(DATEADD(MONTH,-1,#DATE#))+1,DATEADD(MONTH,-1,#DATE#)),23)
		                    AND CONVERT(DATE,DATEADD(DD,-DAY(#DATE#),#DATE#),23)
		       <!-- AND YEAR=YEAR(#DATE#) -->
	         </isNotEmpty>
		       AND DAY_TYPE='WD'
		  ORDER BY DATE ASC
 	</select>
 	
 	<select id="getLastMonthWorkDayForMonthSecond" resultClass="java.util.HashMap">
 			SELECT CONVERT(VARCHAR,DATE,23) [DATE],DAY_TYPE,'2011-12-26' LAST_MONTH_BEGIN_DATE
 			  <isEmpty property="DATE">
 			  	   ,CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,GETDATE()),0),23) BEGIN_DATE,CONVERT(DATE,GETDATE(),23) END_DATE
 			  </isEmpty>
 			  <isNotEmpty property="DATE">
 				   ,CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,#DATE#),0),23) BEGIN_DATE,CONVERT(DATE,#DATE#,23) END_DATE
 			  </isNotEmpty>
       		  FROM T_DAY_TYPE
	         WHERE DATE BETWEEN '2011-12-26' 
	           AND '2012-01-31' 
	           AND DAY_TYPE='WD'
	      ORDER BY CONVERT(VARCHAR,DATE,23)
 	</select>
 	
 	<select id="compareWorkDay" resultClass="java.lang.Integer">
 			SELECT CURRENT_MONTH.COUNT-LAST_MONTH.COUNT [COUNT] FROM  
        (SELECT COUNT(1) [COUNT]
		      FROM T_DAY_TYPE
		     WHERE DATE BETWEEN CONVERT(DATE,DATEADD(DD,-DAY(DATEADD(MONTH,-1,GETDATE()))+1,DATEADD(MONTH,-1,GETDATE())),23)
		                    AND CONVERT(DATE,DATEADD(DD,-DAY(GETDATE()),GETDATE()),23)
		       AND DAY_TYPE='WD'
		       AND YEAR=YEAR(GETDATE())) LAST_MONTH, 
           
        (SELECT COUNT(1) [COUNT]
           FROM T_DAY_TYPE 
          WHERE YEAR=YEAR(GETDATE()) 
            AND DATE BETWEEN CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,GETDATE()),0),23) 
                         AND DATEADD(DD,-DAY(DATEADD(MONTH,1,GETDATE())),DATEADD(MONTH,1,GETDATE()))
            AND DAY_TYPE='WD') CURRENT_MONTH
 	</select>
 	
 	<!-- 获得同期业绩金额总和 -->
 	<select id="getCompareAchievement" resultClass="java.util.HashMap">
 			SELECT SUM(PAY.PAY_MONEY)/1000 PAY_MONEY,CMPY.DECP_ID,CMPY.DECP_NAME_CN
			   FROM T_SUPL_PLAYDETIL PAY
		  LEFT JOIN T_PRJT_CREDIT PC ON PAY.CREDIT_ID = PC.ID AND PC.STATUS = 0
		  LEFT JOIN T_RENT_CONTRACT RC ON RC.PRCD_ID = PC.ID AND RC.STATUS = 0
	      LEFT JOIN T_USER_USER T ON T.ID = PC.ORG_SENSOR_ID <!-- AND T.STATUS = 0 算业绩时候离职员工也应该算进去-->
	      LEFT JOIN T_DEPT_DEPARTMENT DEPT ON T.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
		  LEFT JOIN T_DEPT_COMPANY CMPY ON CMPY.DECP_ID = DEPT.DECP_ID AND CMPY.STATUS = 0
		      WHERE PAY.STATE = 3 AND PAY.BACKSTATE = 0 AND PAY.STATUS = 0
	            AND CONVERT(DATE,PAY.PAY_DATE,23) BETWEEN CONVERT(DATE,#BEGIN_DATE#,23) AND CONVERT(DATE,#END_DATE#,23)
	     GROUP BY CMPY.DECP_ID,CMPY.DECP_NAME_CN
 	</select>
 	
 	<!-- 获得同期目标金额总和 -->
 	<select id="getCompareTarget" resultClass="java.util.HashMap">
 			SELECT SUM(T.GOAL_MONEY) TARGET_AMOUNT,CMPY.DECP_ID,CMPY.DECP_NAME_CN 
       		  FROM T_GOAL_LINE T
         LEFT JOIN T_DEPT_DEPARTMENT DEPT ON T.DEPT_ID = DEPT.ID AND DEPT.STATUS = 0
		 LEFT JOIN T_DEPT_COMPANY CMPY ON CMPY.DECP_ID = DEPT.DECP_ID AND CMPY.STATUS = 0
             WHERE YEAR=#YEAR_PARAM#
               AND [MONTH] BETWEEN #BEGIN_MONTH# AND #END_MONTH#
          GROUP BY CMPY.DECP_ID,CMPY.DECP_NAME_CN
          ORDER BY CMPY.DECP_ID
 	</select>
 	
 	<select id="getCurrentBeginEndDate" resultClass="java.util.HashMap">
 		<isEmpty property="DATE">
 			SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,GETDATE()),0),23) BEGIN_DATE,CONVERT(DATE,GETDATE(),23) END_DATE
 		</isEmpty>
 		<isNotEmpty property="DATE">
 			SELECT CONVERT(DATE,DATEADD(MM,DATEDIFF(MM,0,#DATE#),0),23) BEGIN_DATE,CONVERT(DATE,#DATE#,23) END_DATE
		</isNotEmpty>
 	</select>
 	
 	<select id="getWorkDayCount" resultClass="java.lang.Integer">
 			SELECT COUNT(1) WORK_DAY
		      FROM T_DAY_TYPE 
		     WHERE DATE BETWEEN '2011-12-26' AND #DATE#
		       AND DAY_TYPE='WD'
 	</select>
 	
 	<select id="getLastDateOfMonth" resultClass="java.util.HashMap">
 			SELECT TOP 1 YEAR,CONVERT(VARCHAR,DATE,23) DATE,DAY_TYPE 
 			  FROM T_DAY_TYPE 
		     WHERE MONTH(DATE)=MONTH(#DATE#)<isEqual property="IS_LAST_MONTH" compareValue="Y">-1</isEqual> 
		       AND YEAR(DATE)=YEAR(#DATE#)
		     ORDER BY DATE DESC
 	</select>
 	
 	<select id="queryTotalForEqu" resultClass="java.util.HashMap">
 								SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_6' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_EQU 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_6#<!-- 6个月之前最后天 -->
								   AND COMPANY_ID!=1
   							     GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
                     
                     			SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_5' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_EQU 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_5#<!-- 5个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
    							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_4' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_EQU 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_4#<!-- 4个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_3' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_EQU 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_3#<!-- 3个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_2' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_EQU 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_2#<!-- 2个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_1' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_EQU 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_1#<!-- 1个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      
				             SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_0' MONTH,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
				               		
				               		(ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
							       FROM T_CASE_REPORT_EQU
				         	  WHERE 
				         	  <isEmpty property="DATE">
				         	  		CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,GETDATE()-1,23)
				         	  		AND COMPANY_ID!=1
				         	  </isEmpty>
				         	  <isNotEmpty property="DATE">
				         	  		CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
				         	  		AND COMPANY_ID!=1
				         	  </isNotEmpty>
				         	  GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
 	</select>
 	
 	<select id="queryTotalForMotor" resultClass="java.util.HashMap">
 								SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_6' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_MOTOR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_6#<!-- 6个月之前最后天 -->
								   AND COMPANY_ID!=1
   							     GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
                     
                     			SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_5' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_MOTOR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_5#<!-- 5个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
    							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_4' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_MOTOR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_4#<!-- 4个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_3' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_MOTOR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_3#<!-- 3个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_2' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_MOTOR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_2#<!-- 2个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_1' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_MOTOR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_1#<!-- 1个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      
				             SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_0' MONTH,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
				               		
				               		(ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
							       FROM T_CASE_REPORT_MOTOR
				         	  WHERE 
				         	  <isEmpty property="DATE">
				         	  		CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,GETDATE()-1,23)
				         	  		AND COMPANY_ID!=1
				         	  </isEmpty>
				         	  <isNotEmpty property="DATE">
				         	  		CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
				         	  		AND COMPANY_ID!=1
				         	  </isNotEmpty>
				         	  GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
 	</select>
 	
 	<select id="queryTotalForCar" resultClass="java.util.HashMap">
 								SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_6' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_CAR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_6#<!-- 6个月之前最后天 -->
								   AND COMPANY_ID!=1
   							     GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
                     
                     			SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_5' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_CAR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_5#<!-- 5个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
    							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_4' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_CAR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_4#<!-- 4个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_3' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_CAR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_3#<!-- 3个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_2' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_CAR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_2#<!-- 2个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      							 		
      							SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_1' MONTH,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
								  FROM T_CASE_REPORT_CAR 
								 WHERE CONVERT(VARCHAR,CREATE_DATE,23)=#LAST_DATE_1#<!-- 1个月之前最后天 -->
								   AND COMPANY_ID!=1
      							 GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
                     
                     UNION ALL
      
				             SELECT CONVERT(VARCHAR,CREATE_DATE,23) DATE,'LAST_DAY_OF_0' MONTH,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0) INFO_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0) INFO_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0) HAS_ACCESS_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0) HAS_ACCESS_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0) AUDIT_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0) AUDIT_COUNT,
				               		ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0) APPROVE_AMOUNT,ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0) APPROVE_COUNT,
				               		
				               		(ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_AMOUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_AMOUNT)),0)) AS TOTALB,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),INFO_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTA,
						               
						               (ISNULL(SUM(CONVERT(DECIMAL(18,0),HAS_ACCESS_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),AUDIT_COUNT)),0)+
						               ISNULL(SUM(CONVERT(DECIMAL(18,0),APPROVE_COUNT)),0)) AS COUNTB,
						               'TRUE' DISPLAY
							       FROM T_CASE_REPORT_CAR
				         	  WHERE 
				         	  <isEmpty property="DATE">
				         	  		CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,GETDATE()-1,23)
				         	  		AND COMPANY_ID!=1
				         	  </isEmpty>
				         	  <isNotEmpty property="DATE">
				         	  		CONVERT(VARCHAR,CREATE_DATE,23)=CONVERT(VARCHAR,#DATE#,23)
				         	  		AND COMPANY_ID!=1
				         	  </isNotEmpty>
				         	  GROUP BY CONVERT(VARCHAR,CREATE_DATE,23)
 	</select>
 	
 	<select id="getTargetByYear" resultClass="java.util.HashMap">
		 	 SELECT TDC.DECP_ID,TDC.DECP_NAME_CN,O.EMPL_MONTH [MONTH],O.GOAL_MONEY,0 PAY_MONEY,O1.TOTAL_GOAL_MONEY
		       FROM (SELECT SUM(TGE.EMPL_ACHIEVEMENT) GOAL_MONEY,TDC.DECP_ID,TGE.EMPL_MONTH
		               FROM T_USER_ACHIEVEMENT TGE
		          LEFT JOIN T_USER_USER T ON T.ID=TGE.EMPL_ID
		          LEFT JOIN T_DEPT_DEPARTMENT TDD ON T.DEPT_ID=TDD.ID AND TDD.STATUS=0
		          LEFT JOIN T_DEPT_COMPANY TDC ON TDD.DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
		              WHERE TGE.EMPL_YEAR=#YEAR#
		               <isNotEmpty property="MONTH">
			         	AND TGE.EMPL_MONTH=#MONTH#
				       </isNotEmpty>				       
		                AND TGE.STATUS=0
		           GROUP BY TDC.DECP_ID,TGE.EMPL_MONTH) O
		  LEFT JOIN T_DEPT_COMPANY TDC ON TDC.STATUS=0 AND TDC.DECP_ID=O.DECP_ID
		  LEFT JOIN (SELECT SUM(TGE.EMPL_ACHIEVEMENT) TOTAL_GOAL_MONEY,TDC.DECP_ID
		               FROM T_USER_ACHIEVEMENT TGE 
		          LEFT JOIN T_USER_USER T ON T.ID=TGE.EMPL_ID
		          LEFT JOIN T_DEPT_DEPARTMENT TDD ON T.DEPT_ID=TDD.ID AND TDD.STATUS=0
		          LEFT JOIN T_DEPT_COMPANY TDC ON TDD.DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
		              WHERE TGE.EMPL_YEAR=#YEAR#
		               <isNotEmpty property="MONTH">
			         	AND TGE.EMPL_MONTH=#MONTH#
				       </isNotEmpty>				       
		                AND TGE.STATUS=0
		           GROUP BY TDC.DECP_ID) O1 ON O.DECP_ID=O1.DECP_ID
		      WHERE TDC.DECP_ID IS NOT NULL
		        AND TDC.DECP_ID!=1
		        <isNotEmpty property="CMPY_ID">
	            AND TDC.DECP_ID=#CMPY_ID#
		        </isNotEmpty>
		   ORDER BY O.EMPL_MONTH,TDC.[ORDER]
 	</select>
 	
 	<select id="getAchievementByYear" resultClass="java.util.HashMap">
			SELECT TDC.DECP_ID,TDC.DECP_NAME_CN,SUM(TSPL.PAY_MONEY/1000) PAY_MONEY
		      FROM T_SUPL_PLAYDETIL TSPL 
		 LEFT JOIN T_PRJT_CREDIT TPC ON TSPL.CREDIT_ID=TPC.ID AND TPC.STATUS=0
		 LEFT JOIN T_DEPT_COMPANY TDC ON TPC.ORG_DECP_ID=TDC.DECP_ID AND TDC.STATUS=0
		     WHERE TSPL.STATUS=0
		       AND TSPL.BACKSTATE=0
		       AND TSPL.STATE=3
		       AND CONVERT(DATE,TSPL.PAY_DATE) BETWEEN CONVERT(DATE,#startTime#) AND CONVERT(DATE,#endTime#)
	         <isNotEmpty property="CMPY_ID">
         	   AND TDC.DECP_ID=#CMPY_ID#
	         </isNotEmpty>
		  GROUP BY TDC.DECP_ID,TDC.DECP_NAME_CN,TDC.[ORDER]
		  ORDER BY TDC.[ORDER]
 	</select>
 </sqlMap>
